$Header$ -*-text-*-

netCDF Operators NCO version 5.3.5 strikes a chord

http://nco.sf.net (Homepage, Mailing lists, Help)
http://github.com/nco/nco (Source Code, Issues, Releases)

What's new?
Version 5.3.5 contains mostly speed, robustness, and documentation
improvements for the regridder. The ability to select alternate
executable and library paths for testing snapshots is also improved. 
Skip this release if these changes do not interest you. 

Enjoy,
Charlie

NEW FEATURES (full details always in ChangeLog):

A. The map checker (ncks --chk_map) is more robust and clear in its
reports. For robustness, the checker now ensures that all row/col
indices are valid before attempting to use them. Illegal values are
summarized and printed. The regridder also does now. Illegal values
previously caused the checker and regridder to die with baffling
core-dumps. Conservation and Consistency metrics now include
plain-language definitions. 

B. The ncremap tutorial on the E3SM Confluence page
https://e3sm.atlassian.net/wiki/spaces/DOC/pages/edit-v2/754286611
now contains extensive documentation on how to exploit the three types
of parallelism (node-, workflow-, and thread-level) supported by
ncremap. New examples show the scaling of performance with OpenMP
threads for regridding and for weight-generation.

C. The --npo (NCO Path Override) option allows other users to
easily test bleeding-edge features present in development versions
of NCO in C. Zender's home directories at DOE HPC centers.
This feature has been updated to work with the latest paths on Andes,
Chrysalis, and Perlmutter. 
http://nco.sf.net/nco.html#npo
http://nco.sf.net/nco.html#nco_path_override

D. All operators that accept -v as the option to indicate
a list of variables now also accept --var_lst. This makes
the binary executables consistent with ncremap/ncclimo.
http://nco.sf.net/nco.html#var_lst

E. plev can now be a full path name. Previously the pressure
levels for vertical interpolation were always contained in
the destination vertical grid file. However, pure pressure
vertical grids require only the plev variable so requiring
that variable to be in its own file was unnecessary. Now the 'plev'
variable can be specified as a full path name, e.g.,
--vrt=/home/bar/data.nc/plev. Here the variable "plev" will
be searched for in the file /home/bar/data.nc. This is similar to the
way the surface pressure ps for hybrid sigma-pressure coordinates can
be a full-pathname. This is the first step to supporting 3D pressure
fields as target grids.
ncremap --vrt=/path/to/file.nc/plev in.nc out.nc
http://nco.sf.net/nco.html#vrt

BUG FIXES:
   
A. GCC-compiled executables once again have working OpenMP parallelism
in the regridder. Previously only Clang or Intel-compiled executables
could access OpenMP parallelism in the regridder. GCC-compiled
installations always used one thread, no matter how many were
requested via --thr_nbr=# threads or OMP_NUM_THREADS. An incorrect CPP
token caused this misbehavior. Now both horizontal regridding and
vertical interpolation adhere to the requested parallelism. OpenMP
increases throughput by about a factor of two, so users of this update
may notice significant speed improvements. Safeguards and additional
checks have been implemented to prevent this problem from occuring
again. There is no workaround, users must upgrade to exploit OpenMP
while regridding with GCC-compiled installations. 
http://nco.sf.net/nco.html#thr_nbr
http://nco.sf.net/nco.html#thr_nbr_ncremap

Full release statement at http://nco.sf.net/ANNOUNCE
    
KNOWN PROBLEMS DUE TO NCO:

This section of ANNOUNCE reports and reminds users of the
existence and severity of known, not yet fixed, problems. 
These problems occur with NCO 5.3.4 built/tested under
MacOS 15.6.1 with netCDF 4.10-development on HDF5 1.14.6
and with Linux FC42 with netCDF 4.9.2 on HDF5 1.14.4.

A. NOT YET FIXED (NCO problem)
   Correctly read arrays of NC_STRING with embedded delimiters in ncatted arguments

   Demonstration:
   ncatted -D 5 -O -a new_string_att,att_var,c,sng,"list","of","str,ings" ~/nco/data/in_4.nc ~/foo.nc
   ncks -m -C -v att_var ~/foo.nc

   20130724: Verified problem still exists
   TODO nco1102
   Cause: NCO parsing of ncatted arguments is not sophisticated
   enough to handle arrays of NC_STRINGS with embedded delimiters.

B. NOT YET FIXED (NCO problem?)
   ncra/ncrcat (not ncks) hyperslabbing can fail on variables with multiple record dimensions

   Demonstration:
   ncrcat -O -d time,0 ~/nco/data/mrd.nc ~/foo.nc

   20140826: Verified problem still exists
   20140619: Problem reported by rmla
   Cause: Unsure. Maybe ncra.c loop structure not amenable to MRD?
   Workaround: Convert to fixed dimensions then hyperslab

KNOWN PROBLEMS DUE TO BASE LIBRARIES/PROTOCOLS:

A. NOT YET FIXED (netCDF4 or HDF5 problem?)
   Specifying strided hyperslab on large netCDF4 datasets leads
   to slowdown or failure with recent netCDF versions.

   Demonstration with NCO <= 4.4.5:
   time ncks -O -d time,0,,12 ~/ET_2000-01_2001-12.nc ~/foo.nc
   Demonstration with NCL:
   time ncl < ~/nco/data/ncl.ncl   
   20140718: Problem reported by Parker Norton
   20140826: Verified problem still exists
   20140930: Finish NCO workaround for problem
   20190201: Possibly this problem was fixed in netCDF 4.6.2 by https://github.com/Unidata/netcdf-c/pull/1001
   Cause: Slow algorithm in nc_var_gets()?
   Workaround #1: Use NCO 4.4.6 or later (avoids nc_var_gets())
   Workaround #2: Convert file to netCDF3 first, then use stride
   Workaround #3: Compile NCO with netCDF >= 4.6.2

B. NOT YET FIXED (netCDF4 library bug)
   Simultaneously renaming multiple dimensions in netCDF4 file can corrupt output

   Demonstration:
   ncrename -O -d lev,z -d lat,y -d lon,x ~/nco/data/in_grp.nc ~/foo.nc # Completes but produces unreadable file foo.nc
   ncks -v one ~/foo.nc

   20150922: Confirmed problem reported by Isabelle Dast, reported to Unidata
   20150924: Unidata confirmed problem
   20160212: Verified problem still exists in netCDF library
   20160512: Ditto
   20161028: Verified problem still exists with netCDF 4.4.1
   20170323: Verified problem still exists with netCDF 4.4.2-development
   20170323: https://github.com/Unidata/netcdf-c/issues/381
   20171102: Verified problem still exists with netCDF 4.5.1-development
   20171107: https://github.com/Unidata/netcdf-c/issues/597
   20190202: Progress has recently been made in netCDF 4.6.3-development
   More details: http://nco.sf.net/nco.html#ncrename_crd

C. NOT YET FIXED (would require DAP protocol change?)
   Unable to retrieve contents of variables including period '.' in name
   Periods are legal characters in netCDF variable names.
   Metadata are returned successfully, data are not.
   DAP non-transparency: Works locally, fails through DAP server.

   Demonstration:
   ncks -O -C -D 3 -v var_nm.dot -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc # Fails to find variable

   20130724: Verified problem still exists. 
   Stopped testing because inclusion of var_nm.dot broke all test scripts.
   NB: Hard to fix since DAP interprets '.' as structure delimiter in HTTP query string.

   Bug tracking: https://www.unidata.ucar.edu/jira/browse/NCF-47

D. NOT YET FIXED (would require DAP protocol change)
   Correctly read scalar characters over DAP.
   DAP non-transparency: Works locally, fails through DAP server.
   Problem, IMHO, is with DAP definition/protocol

   Demonstration:
   ncks -O -D 1 -H -C -m --md5_dgs -v md5_a -p http://thredds-test.ucar.edu/thredds/dodsC/testdods in.nc

   20120801: Verified problem still exists
   Bug report not filed
   Cause: DAP translates scalar characters into 64-element (this
   dimension is user-configurable, but still...), NUL-terminated
   strings so MD5 agreement fails 

"Sticky" reminders:

A. Reminder that NCO works on most HDF4 and HDF5 datasets, e.g., 
   HDF4: AMSR MERRA MODIS ...
   HDF5: GLAS ICESat Mabel SBUV ...
   HDF-EOS5: AURA HIRDLS OMI ...

B. Pre-built executables for many OS's at:
   http://nco.sf.net#bnr

