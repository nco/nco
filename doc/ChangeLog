2025-03-21  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.4 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.4: Sea Shanty';git push
	git tag -a 5.3.3 -m 'all: qnt ngt zro NaN; ncks: --fpe, ngl rsn chk map, s1d frc_column frc_landunit attribute fix; ncremap: fix prs->hyb w/fat tpl; ncrename: WARN crd/dmn netCDF4';git push --tags

	* Simplify Perlmutter build to be nearly identical to Chrysalis, Andes

	* Document --fpe, add to man and usage pages

	* NCO 5.3.3-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.3-alpha03: Equalizer';git push
	git tag -a 5.3.3-alpha03 -m 'all: perlmutter bld; ncks: ngl rsn chk map, s1d frc_column frc_landunit attribute fix';git push --tags

2025-03-19  Charlie Zender  <zender@uci.edu>

	* Fix Perlmutter environment to avoid /usr/bin/install and use Conda coreutils install to install in ${DATA}/[bin,lib]

2025-02-27  Charlie Zender  <zender@uci.edu>

	* Tidy nco_ply_lst.c

2025-02-21  Charlie Zender  <zender@uci.edu>

	* nco_s1d.c: Move location where frc_column, frc_landunit attributes written

	* nco_map.c: Add min/max angular resolution to --chk_map

2025-02-16  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.3-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.3-alpha02: Toyota Matrix';git push
	git tag -a 5.3.3-alpha02 -m 'all: qnt ngt zro NaN; ncks: --fpe; ncremap: fix prs->hyb w/fat tpl';git push --tags

	* Migrate to netcdf-c 4.10.0-development

	* nco_rgr.c: Fix write of PS to output from fat templates when input is pure-pressure output is hybrid

2025-02-15  Charlie Zender  <zender@uci.edu>

	* Verify --fpe test passes when using either internal NCO or patched libnetcdf.a quantize algorithms

	* Distinguish val_flt and val_dbl de-reference where appropriate (except DigitRound and Granular BitRound, for now)

	* nco_exit_lbr_rcd() implement new rcd convention for netCDF versions 4.10.0 and beyond

2025-02-14  Charlie Zender  <zender@uci.edu>

	* nco_ppc.c: nco_ppc_bitmask() protect all quantization algorithms from modifying negative zero and NaN

	* ncks: Add --fpe to test floating point exceptions

2025-02-08  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.3-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.3-alpha01: Arcane';git push
	git tag -a 5.3.3-alpha01 -m 'Functionally identical to 5.3.2; ncrename WARN on netCDF4';git push --tags

	* ncrename: WARN when renaming variables or dimensions in netCDF4 files

2025-02-05  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.2 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.2: Prime Rib';git push
	git tag -a 5.3.2 -m 'all: fix qnt w/ grp; ncremap: ECMWF/IFS CAMS lnsp lev_2, ps_nm_out mtd, hyb cff cf mtd, fix ECMWF/IFS ntp ERROR/HINT, inode dpl, srun default';git push --tags

2025-02-03  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.2-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.2-alpha03: Caf√© Dirty Bird';git push
	git tag -a 5.3.2-alpha03 -m 'ncremap: doc ECMWF/IFS, HINT lnsp,	ERROR/HINT inode dpl';git push --tags

	* ncremap: ERROR and HINT when Input and Output files point to same device+inode

	* ncremap: HINT when lnsp present yet ps_nm=lnsp not invoked

2025-02-01  Charlie Zender  <zender@uci.edu>

	* Update ECMWF/IFS documentation, fix INFO messages

	* NCO 5.3.2-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.2-alpha02: FireAid';git push
	git tag -a 5.3.2-alpha02 -m 'all: doc log_lvl; ncremap: CAMS lnsp lev_2, ps_nm_out mtd, hyb cff cf mtd, fix ECMWF/IFS ntp';git push --tags

	* ncks: Fix ECMWF/IFS interpolation when PS is in vertical grid	template file
	Solves regression reported by Erik Koene on SourceForge 20250117

	* ncks: Add CF metadata hybrid sigma-pressure grid coordinates

	* ncks: Rename ECMWF/IFS output surface pressure from lnsp to PS

	* ncks: Overwrite metadata to ECMWF/IFS output surface pressure

2025-01-31  Charlie Zender  <zender@uci.edu>

	* nco.texi: Add short section on --log_lvl

	* all: No longer report debugging configuration with -r

	* ncremap: Support recent CAMS changes by not expecting lev_2 dimension in ECMWF/IFS lnps

	* NCO 5.3.2-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.2-alpha01: Hotel Van Zandt';git push
	git tag -a 5.3.2-alpha01 -m 'Functionally identical to 5.3.1; ncremap/ncclimo srun default; all: fix qnt w/ grp';git push --tags

	* Pass grp_out_id not nc_id to nco_qnt_mtd() so quantization metadata works on variables in non-root groups

2025-01-22  Charlie Zender  <zender@uci.edu>

	* ncclimo/ncremap: Shift default node manager from mpirun to srun

	* nco.texi: Contrast NCO behavior with CF/NUG for type of _FillValue when packing (patch from lguez)

2025-01-12  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.1 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.1: Dark Sunset (Palisades Lost)';git push
	git tag -a 5.3.1 -m 'ncks: autoconversion in regridder/interpolator; ncremap: PS fix tm dmn, ERA5 t MERRA2 H, PM --npo';git push --tags

	* Document 5.3.1

2025-01-03  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.1-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.1-alpha02: Poison Enchilada';git push
	git tag -a 5.3.1-alpha02 -m 'all: 2025; ncremap: PS fix tm dmn, ERA5 t MERRA2 H, PM --npo';git push --tags

	* Change Perlmutter --npo paths to /global/cfs/cdirs/e3sm/zender/[bin,lib]_perlmutter

2025-01-02  Charlie Zender  <zender@uci.edu>

	* Extrapolate variables named "H" with geopotential height algorithm

	* Verify MERRA2 prs->hyb interpolation works when time is fixed dimension

	* Extrapolate variables named "t" as temperature profiles (like ERA5) using global lapse rate method

	* Demonstrate prs->hyb interpolation for MERRA2 works correctly for multi-timestep datasets

2025-01-01  Charlie Zender  <zender@uci.edu>

	* Handle fixed time dimension in PS in pure pressure input (like MERRA2)

2024-12-31  Charlie Zender  <zender@uci.edu>

	* 2025

2024-12-29  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.1-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.1-alpha01: Au Revoir Chloe';git push
	git tag -a 5.3.1-alpha01 -m 'Functionally identical to 5.3.0, plus autoconversion in regridder/interpolator';git push --tags

	* ncks: Add autoconversion to vertical interpolation. Works single-threaded, fails multi-threaded.

2024-12-28  Charlie Zender  <zender@uci.edu>

	* ncks: Finish autoconversion functionality in horizontal regridder

	* ncks: Generalize string length dimension size as smallest necessary integral power of 10

2024-12-24  Charlie Zender  <zender@uci.edu>

	* ncks: Add stubs to handle autoconversion in regridder

2024-12-23  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.0 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.0: Awkward Self-Haircut';git push
	git tag -a 5.3.0 -m 'ncclimo: npo, tms area_wgt, omit -v; ncks: S1D refactor, lut_out, frc_column, frc_landunit, snw_ocn, pft->PFT, clmv4; ncrcat: fix REC_APN wrn';git push --tags

	* Release note updates

2024-12-20  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.0-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.0-beta01: Blagden Alley';git push
	git tag -a 5.3.0-beta01 -m 'ncclimo: npo, tms area_wgt, omit -v; ncks: S1D refactor, lut_out, frc_column, frc_landunit, snw_ocn, pft->PFT, clmv4; ncrcat: fix REC_APN wrn';git push --tags

	* Document new features

	* Update --npo paths for Chrysalis, Acme1, Perlmutter

	* Resuscitate Acme1 builds by emulating Andes methods

	* Resuscitate Chrysalis builds by emulating Andes methods

2024-12-18  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.0-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.0-alpha06: Awkward Self Haircut';git push
	git tag -a 5.3.0-alpha06 -m 'ncclimo: tms wrt area_wgt, omit -v; ncks: S1D pft->PFT;';git push --tags

	* Omit -v in ncap2 call for rgn_stt computation

2024-12-06  Charlie Zender  <zender@uci.edu>

	* ncclimo: Output valid_area_per_gridcell=area_wgt=(area*landfrac) for use by zppy

	* ncclimo: region_name@long_name now specifies area-weighted sums (rgn_stt=sum) or means (rgn_stt=avg)

2024-12-05  Charlie Zender  <zender@uci.edu>

	* S1D change pft coordinate name to PFT so it is not same as dimension name (new CF 1.12 rule)

2024-11-22  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.0-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.0-alpha05: Break of Dawn';git push
	git tag -a 5.3.0-alpha05 -m 'ncks: S1D ilun_UNUSED, snw_ocn; ncrcat: fix REC_APN wrn';git push --tags

	* nco.texi Document lut_out, snw_ocn

	* S1D add snw_ocn and no_snw_ocn flags to affirm or disable unpacking of snow levels to ocean-like ordering

	* ncrcat: Allow monotonicity test when REC_APN,	ensure last value and monotonicity defined before comparison

2024-11-21  Charlie Zender  <zender@uci.edu>

	* ncrcat: Eschew monotonicity test nco_rec_crd_chk() when --record_append = REC_APN is true

2024-11-19  Charlie Zender  <zender@uci.edu>

	* S1D retrofit to work with CLMv4 datasets with ilun_UNUSED instead of ilun_glacier

	* NCO 5.3.0-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.0-alpha04: Nail Biter';git push
	git tag -a 5.3.0-alpha04 -m 'ncks: S1D lut_out, wgt_all, wgt_soi_glc options; ncremap: eamxx landfrac ok';git push --tags

	* Finish/test/validate implementation of lut_vld_flg

2024-11-15  Charlie Zender  <zender@uci.edu>

	* Add and prepare to use lut_vld_flg array instead of lnd_typ_vld_1st

	* Add lut_out enum functionality to support forthcoming lut_out option for columns

	* Refactor S1D handling of MEC and non-MEC columns

2024-11-12  Charlie Zender  <zender@uci.edu>

	* Add deep lake and wetland columns to frc_column variable

2024-11-07  Charlie Zender  <zender@uci.edu>

	* Fix allocation dimension for frc_landunit, now works on ne30 datasets

2024-11-06  Charlie Zender  <zender@uci.edu>

	* ncremap squelch SGS normalization WARNING due to landfrac in EAMxx files

2024-11-05  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.0-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.0-alpha03: Slow Horses';git push
	git tag -a 5.3.0-alpha03 -m 'ncks: S1D mecp1 soil, frc_column, frc_landunit';git push --tags

	* Diagnostic frc_column and frc_landunit from restart files works

2024-11-04  Charlie Zender  <zender@uci.edu>

	* Add infrastructure to diagnose frc_column and frc_landunit from restart files

2024-11-01  Charlie Zender  <zender@uci.edu>

	* S1D insert additional MEC layer (index=0) that stores soil column data

2024-10-31  Charlie Zender  <zender@uci.edu>

	* S1D compute mec_nbr_out as maximum MEC index utilized (fixes ne30 bug)

2024-10-30  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.0-alpha02 release procedure:
	cd ~/nco;git commit -a -m "Version 5.3.0-alpha02: Widow's Peak";git push
	git tag -a 5.3.0-alpha02 -m 'ncks: S1D mec_idx fix, bare ground, rdr w/SNLSNO';git push --tags

	* Use SNLSNO to assign levsno, levsno1, and levtot snow layers to top-down (ocean-like) vertical grid

	* Restore PFT ityp = 0 = not vegetated to all output datasets

2024-10-24  Charlie Zender  <zender@uci.edu>

	* mec_idx now allows for < 10 MEC columns, possibly with gaps, in glacier/MEC landunits

2024-10-23  Charlie Zender  <zender@uci.edu>

	* ncclimo update examples

2024-10-22  Charlie Zender  <zender@uci.edu>

	* NCO 5.3.0-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.3.0-alpha01: Sanitize';git push
	git tag -a 5.3.0-alpha01 -m 'Functionally identical to 5.2.9 except better S1D PFT/CFT labels';git push --tags

	* Replace auto-generated PFT/CFT labels with labels gleaned from global attributes

2024-10-21  Charlie Zender  <zender@uci.edu>

	* Infer/determine and use self-consistent pft_ntr_nbr_out, pft_crp_nbr_out, pft_nbr_out for both history/restart datasets

2024-10-18  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.9 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.9: Empathy Card';git push
	git tag -a 5.2.9 -m 'all: NC_FillValue; ncclimo: fix bsh syn; ncks: S1D pft dsk rdr, topounits, workaround, pft crd, sanitize, fflush; ncremap: fix ECMWF IFS, eamxx pdq';git push --tags

	* Progress inferring pft_sng_out from global attributes, though remains off by default

	* Read pft_nbr_nbr_in from history files

2024-10-17  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.9-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.9-alpha03: Palenque';git push
	git tag -a 5.2.9-alpha03 -m 'ncks: S1D finish topounits, workaround bad topos1d_[ij]xy, address sanitize';git push --tags

	* Activate pft_sng_out though disable inferring from global attributes

	* Enable Clang address sanitizer with -fsanitize=address

	* Account for lvl_nbr (i.e., ltype dimension) in unpacking nco_s1d_tpo variables

	* Change storage order ot nco_s1d_tpo to always be lat,lon

	* Discover buggy topos1d_[ij]xy in input files, provide workaround by replacing with grids1d_[ij]xy

	* Sanity check that tpo_nbr_in == grd_nbr_in

	* Sanity check that mec_nbr_in == mec_nbr_out

	* Correct argument order of nco_malloc_dbg() call in nco_cpy_var_val()

	* Define lnd_typ_crr=nco_lnd_ilun_nil for Gridcell and Topounit	variables so diagnostic printing can work

	* Print var_nm in nco_def_var() debugging output

	* Add fflush() to tidy debugging output

2024-10-16  Charlie Zender  <zender@uci.edu>

	* Store enumerated PFT and CFT in pft coordinate variable

2024-10-15  Charlie Zender  <zender@uci.edu>

	* Output pft coordinate as NC_STRING (not 2D NC_CHAR) when fl_fmt_out == NC_FORMAT_NETCDF4

	* NCO 5.2.9-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.9-alpha02: Adieu Borrego';git push
	git tag -a 5.2.9-alpha02 -m 'ncclimo: fix bsh syn, fix eamxx pdq; ncks: S1D fix hst pft, add pft crd';git push --tags

	* Add PFT string coordinate to output files

	* Assume PFT storage order in history files is same as in restart files
	This shifts the original convention that worked with beth_in.nc to the newer eva_h2.nc convention

2024-10-14  Charlie Zender  <zender@uci.edu>

	* Define dmn_cnt_out before using it to determine lvl_nbr in nco_s1d.c:nco_s1d_unpack()

2024-10-02  Charlie Zender  <zender@uci.edu>

	* Fix typo pdq_opt='-a ilev,l%8jev,plev,dim2,ncol' that causes eamxx regridding to fail

2024-10-01  Charlie Zender  <zender@uci.edu>

	* Fix illegal Bash string->numeric conversion error with mm_endp1_sgm definition

2024-09-27  Charlie Zender  <zender@uci.edu>

	* Replace _FillValue by NC_FillValue in nco.h (verified on MacOS w/4.9.4-dev and Linux w/4.9.2)

2024-09-26  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.9-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.9-alpha01: Camp Rick';git push
	git tag -a 5.2.9-alpha01 -m 'Functionally identical to 5.2.8 + ECMWF IFS fixes';git push --tags

	* Update vertical interpolation regressions with ECMWF IFS documentaiton in nco.texi

	* Require --ps_nm=lnsp for ECMWF IFS hybrid coordinates

	* Fix vertical interpolation regressions with ECMWF IFS hybrid coordinates

2024-09-11  Charlie Zender  <zender@uci.edu>

	* Shift from clang++ -std=c++17 and clang to clang++ -std=c++23	and clang -std=c23 on MacOS

2024-09-02  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.8 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.8: Sitton Peak';git push
	git tag -a 5.2.8 -m 'ncremap: fix sub-SGS algorithm, sum_scl, rgn_stt=sum, chk_map dgn area_b, cnk max WARNING; ncatted/ncrename: hst_att_cat NC_STRING WARNING';git push --tags

	* Document --glb_stt/--sum_scl options

2024-08-31  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.8-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.8-alpha03: Swim, Rick, Swim!';git push
	git tag -a 5.2.8-alpha03 -m 'ncremap: fix sub-SGS algorithm, NC_ERANGE dgn, --sum_scl';git push --tags

	* ncremap: Yesterday's SGS fix also removed need for sub_sgs_frc_out_thr so remove it
	Verify threshold-free sub-SGS regridding handles all ELM problems from the past (see 20220615)
	Eliminates last kludge in SGS regridder!

2024-08-30  Charlie Zender  <zender@uci.edu>

	* ncremap: Stop weighting accumulation to SGS values where sgs_frc_in is missing value
	Potentially serious bug most likely to affect ELM datasets whose sgs_frc = landfrac contains missing values
	Also crops-up when applying new SGS variable (e.g., Icemask) in regions where ELM may not have valid input

	* ncremap: Further improve flag and ERANGE diagnostics

2024-08-29  Charlie Zender  <zender@uci.edu>

	* nco_put_vara(): Add diagnostics for NC_ERANGE errors

	* ncremap: Add v3 regression commands

2024-08-24  Charlie Zender  <zender@uci.edu>

	* ncclimo: Add --sum_scl option for global sum timeseries

2024-08-23  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.8-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.8-alpha02: Clean Subaru';git push
	git tag -a 5.2.8-alpha02 -m 'all: NCO_MAX_CHUNK_SIZE HINT, WARNING; ncatted/ncrename: fl_fmt msg, NC_STRING; ncclimo: --rgn_stt=sum; ncks --chk_map fix area_b dgn';git push --tags

	* ncclimo: Pass flg_sum not rgn_stt to cmd_rgn. Workaround ncap2 syntax errors. Confirm BFB with old avg procedure.

	* ncclimo: Implement --rgn_stt. Make --rgn_avg a synonym for --rgn_stt=avg. Implement --rgn_avg=ttl.

2024-08-21  Charlie Zender  <zender@uci.edu>

	* nco_cnk_sz_set_trv(): Kludgy adjustment to maximum chunk length, add WARNING

	* nco_def_var_chunking(): Add HINT

2024-08-11  Charlie Zender  <zender@uci.edu>

	* ncatted and ncrename now explain (then exit) when user specifies output file type

	* Improve WARNING when ncatted and ncrename will not modify NC_STRING history attributes

2024-08-09  Charlie Zender  <zender@uci.edu>

	* Revert nco_hst_att_cat() NC_STRING feature for ncatted/ncrename (fail at nc_enddef()/nc_close() stage)

	* Print correct label and location for new grid diagnostics for area_b in nco_map_chk()

	* NCO 5.2.8-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.8-alpha01: Kia';git push
	git tag -a 5.2.8-alpha01 -m 'Functionally identical to 5.2.7 and supports NC_STRING history attribute';git push --tags

	* Modify nco_hst_att_cat() to write/append an NC_STRING history attribute

2024-08-08  Charlie Zender  <zender@uci.edu>

	* nco_c++ nco_att.hh address two CEWI warnings

2024-07-24  Charlie Zender  <zender@uci.edu>

	* Rudimentary version of CAAS algorithm primitives works with CAAS arrays

2024-07-23  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.7 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.7: Kealakekua';git push
	git tag -a 5.2.7 -m 'all: qnt lossy_compresion->quantization, dpr family; ncclimo: mth_flg clm md ERROR; ncks fix flg_dst_mpt/add_fll, chk_map area_a/b dmt lcn; ncremap: fix sgs_frc typo';git push --tags

2024-07-22  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.7-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.7-alpha04: Fake Orangina';git push
	git tag -a 5.2.7-alpha04 -m 'ncclimo: mth_flg clm md ERROR; ncks chk_map area_a/b dmt lcn; ncremap: fix sgs_frc typo';git push --tags

	* nco.texi: Clarify method and rationale for specifying --sgs_frc=/path/to/file/sgs_frc

	* ncremap: Fix typo in 5.2.6 that dropped sgs_frc argument to ncks

	* ncclimo: ERROR when climo called with --mth_srt, --mth_end

2024-07-18  Charlie Zender  <zender@uci.edu>

	* ncclimo add prc_opt to debug output

2024-07-08  Charlie Zender  <zender@uci.edu>

	* chk_map: Output side of equi-areal square instead of radius of equi-areal circle

	* ncks: Add area_a/b min/max diameter properties and locations to --chk_map output

2024-07-04  Charlie Zender  <zender@uci.edu>

	* CAAS: Obtain weights, indices from nonlinear map-file

	* nco_get_var()/nco_get_vara()/nco_inq_varid() print filename where error occurs
	Helps disambiguate in which file things go wrong for MFOs

2024-07-03  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.7-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.7-alpha03: 11th Hour';git push
	git tag -a 5.2.7-alpha03 -m 'ncremap: fix flg_dst_mpt which fixes --add_fll, CAAS stubs';git push --tags

	* Correct index subscript in revamped implementation of	flg_dst_mpt. Fixes issue Xylar noticed.

2024-06-28  Charlie Zender  <zender@uci.edu>

	* CAAS: Obtain dimension sizes from nonlinear map-file

2024-06-27  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.7-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.7-alpha02: Stroker';git push
	git tag -a 5.2.7-alpha02 -m 'all: qnt lossy_compresion->quantization, dpr family; ncremap wrn->nfo, CAAS stb';git push --tags

	* Open nonlinear map when present on command line

	* Add stubs to pass/free non-linear map name for CAAS to regridder with --rgr_nlm

	* Incorporate Jonathan Gregory suggestions in quantization metadata (and re-submit CF PR)

2024-06-26  Charlie Zender  <zender@uci.edu>

	* nco_rgr_wgt()/nco_ntp_vrt() Weaken WARNING to (expanded) INFO when no variables found to regrid/interpolate

2024-06-25  Charlie Zender  <zender@uci.edu>

	* Update regression tests, including one that failed due to quantization being crd-like variable

	* Deprecate "family" attribute from quantization container variable

	* Migrate from container variable name from "lossy_compression" to "quantization"

	* NCO 5.2.7-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.7-alpha01: Nordheimer';git push
	git tag -a 5.2.7-alpha01 -m 'Functionally identical to 5.2.6';git push --tags

2024-06-20  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.6 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.6: Solstice';git push
	git tag -a 5.2.6 -m 'Functionally identical to 5.2.5 with one-line ncremap bugfix';git push --tags

	* ncremap fix syntax error and bug introduced in 5.2.5 sgs_frc checking code

2024-06-19  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.5 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.5: Freight Train';git push
	git tag -a 5.2.5 -m 'all: qnt_alg nm cf cv, btr mre; ncclimo: xcl_var tms md, mpas fl_nm v3; ncremap: mpasa, vrt level(level)';git push --tags

	* NCO 5.2.5-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.5-alpha04: D+D';git push
	git tag -a 5.2.5-alpha04 -m 'ncclimo: mpas fl_nm v3, rgn_avg wrn; ncremap: vrt level(level)';git push --tags

	* nco.texi Document MPAS filename construction

	* ncclimo WARN why rgn_avg expected to fail on MPAS input datasets

	* ncclimo update MPAS filename construction rule by prepending ${caseid}

	* ncremap nco_vrt_ntp() if plev not found, try level(level) instead (for ERA5)

2024-06-18  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.5-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.5-alpha03: Red Tide';git push
	git tag -a 5.2.5-alpha03 -m 'ncclimo: support --xcl_var tms md; ncremap: support mpasa';git push --tags

	* ncclimo: Add support for --xcl_var in timeseries mode. NB: Only works with Bash v. 4.0+

2024-06-17  Charlie Zender  <zender@uci.edu>

	* ncclimo: Add explicit ERROR message that --xcl_var does not work in timeseries mode

	* ncclimo: Fix borken drc_rgr_xtn option that interfered with --exclude

2024-06-04  Charlie Zender  <zender@uci.edu>

	* ncremap: Prevent --add_fll for prc_typ == mpasa

	* ncremap/ncclimo: Accept -P mpasa for prc_typ

	* ncremap: Replace nested dst_idx/lnk_idx loop in flg_add_fll/flg_msk_apl block by faster frc_out loop

2024-06-03  Charlie Zender  <zender@uci.edu>

	* ncremap: Splice MPAS-Atmosphere dimensions nIsoLevelsT,nIsoLevelsZ into default pdq_opt

	* ncremap: Add --pdq_opt synonym to --prm_opt

2024-05-07  Charlie Zender  <zender@uci.edu>

	* ncclimo/ncremap: print ncvis command instead of ncview command

2024-04-19  Charlie Zender  <zender@uci.edu>

	* Change MRE from 2^(-NSB) to 2^-(NSB+1) to account for implicit MSB=1

	* NCO 5.2.5-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.5-alpha02: Takumi Tonkatsu Ramen';git push
	git tag -a 5.2.5-alpha02 -m 'all: qnt_alg nm cf cv; qnt mre';git push --tags

	* Amend all docs to prefer --qnt over --ppc, mention --qnt_alg too

	* Add --qnt_alg to all numerical operators, and --qnt to those and ncremap/ncclimo as well

2024-04-18  Charlie Zender  <zender@uci.edu>

	* Add nco_qnt2baa() to support string-valued specification of NCO-implemented quantization algorithms

	* nco_qnt_mtd() add maximum relative error (MRE) to NSB methods

2024-04-17  Charlie Zender  <zender@uci.edu>

	* nco_qnt_mtd() use lowercase CF-ized algorithm names per draft CF convention, e.g., "granular_bitround" instead of "Granular BitRound"

2024-04-16  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.5-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.5-alpha01: Krugerstra√üe';git push
	git tag -a 5.2.5-alpha01 -m 'Functionally identical to 5.2.4';git push --tags

	* Replace doe.jpg with doe.png (transparent background)

2024-04-15  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.4 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.4: Kamehameha I';git push
	git tag -a 5.2.4 -m 'all: --qnt, NCO client nco_qnt_mtd(); ncclimo/ncremap: dbg; ncclimo: ncap2 cxl rgn_avg hst';git push --tags

2024-04-11  Charlie Zender  <zender@uci.edu>

	* ncclimo: Do not append history for rgn_avg computation---too much like encoding a program in a dataset

2024-04-10  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.4-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.4-alpha03: Seminario';git push
	git tag -a 5.2.4-alpha03 -m 'all: --qnt; ncclimo/ncremap: dbg';git push --tags

	* ncclimo/ncremap: Print IMPORTANT notice about SIMULATION vs. PRODUCTION run when dbg_lvel >= 2

	* ncclimo: Add sanity check that fl_nbr > 0

2024-04-09  Charlie Zender  <zender@uci.edu>

	* all: Add --qnt as synonym for --ppc, --quantize

	* ncclimo: Add DEBUG output for issue of Tony B.

	* NCO 5.2.4-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.4-alpha02: Goat Cheese Hamburguesa';git push
	git tag -a 5.2.4-alpha02 -m 'all: NCO client nco_qnt_mtd(); ncclimo: tm_bnds err dgn';git push --tags

	* all: convert all NSD/NSB regression tests to use new CF convention

	* all: write old (libnetcdf-emulating) attributes only for DSD (rounding) method, not for NSD/NSB (quantization) methods

2024-04-08  Charlie Zender  <zender@uci.edu>

	* all: verify CF quantization metadata works for libnco

	* all: Invoke nco_qnt_mtd() from nco_ppc_bitmask() so NCO client quantization records CF metadata

	* all: Pass output group and variable IDs to nco_ppc_bitmask()

2024-04-07  Charlie Zender  <zender@uci.edu>

	* ncclimo add sanity check to inferred value of tm_bnds. Print meaningful error and workaround then exit.

2024-04-06  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.4-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.4-alpha01: Silken Rio';git push
	git tag -a 5.2.4-alpha01 -m 'Functionally identical to 5.2.3';git push --tags

	* ncclimo/ncremap: Deprecate --gres=craynetwork:0 since not available on Perlmutter, and keep --mem option

2024-04-03  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.3 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.3: Cowboy Carter';git push
	git tag -a 5.2.3 -m 'all: mss_val wrn; ncclimo: rgn_avg fix elm, hrz_dmn, hrz_arg, area_wgt, ppn_opt; ncremap: upd doc';git push --tags

	* NCO 5.2.3-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.3-beta01: Stormy Saturday';git push
	git tag -a 5.2.3-beta01 -m 'all: mss_val wrn; ncclimo: rgn_avg fix elm, hrz_dmn, hrz_arg, area_wgt, ppn_opt; ncremap: upd doc';git push --tags

2024-04-01  Charlie Zender  <zender@uci.edu>

	* ncclimo: Add ppn_opt to ncks/ncap2 calls so operators find files when cwd != drc_in

	* ncclimo/ncremap: Clarify that '=' is REQUIRED for long options

2024-03-30  Charlie Zender  <zender@uci.edu>

	* nco.texi: more documentation fixes/updates on supported/default regridding algorithms

	* NCO 5.2.3-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.3-alpha02: Grandparent Promotion';git push
	git tag -a 5.2.3-alpha02 -m 'all: mss_val wrn; ncclimo: rgn_avg	fix elm, hrz_dmn, hrz_arg, area_wgt';git push --tags

	* ncclimo: Verify that ELM glb_avg is accurate

	* ncclimo: automatically determine sgs_frc, area_wgt from prc_typ, now no var_xtr necessary for rgn_avg

	* ncclimo: Simplify life--automatically determine hrz_dmn from area_nm, remove hrz_dmn input option

2024-03-29  Charlie Zender  <zender@uci.edu>

	* ncclimo: much progress ELM rgn_avg completes yet normalization needs work

	* nco_mss_val.c: Clarify nco_mss_val_cnf() WARNING message when missing values of binary operation differ

	* ncclimo: delete_miss(msk_[nrt,sth]) to eliminate "WARNING Input variables have different NCO_MSS_VAL_SNG's" errors

	* ncclimo: Add parentheses to enclose global area_wgt before .avg()

2024-03-28  Charlie Zender  <zender@uci.edu>

	* nco.texi: fix/update documentation of supported/default regridding algorithms

	* NCO 5.2.3-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.3-alpha01: Sleepover';git push
	git tag -a 5.2.3-alpha01 -m 'Functionally identical to 5.2.2 (except for slight vrt_ntp fixes)';git push --tags

	* nco_vrt_ntp() set hybrid grid output temporal size tm_nbr_out to size of PS "time" dimension if it exists and there are no record dimensions

	* nco_vrt_ntp() allow, though print INFO or WARNING when, tm_nbr_in != tm_nbr_out

	* nco_inq_varname() print dataset name on NC_ENOTVAR

2024-03-26  Charlie Zender  <zender@uci.edu>

	* ncremap use vrt_crd as synonym for vrt_nm, not for vrt_fl

	* Add out_fl synonym to --output, --fl_out for symmetry with ncremap

2024-03-22  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.2 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.2: Bambino';git push
	git tag -a 5.2.2 -m 'ncchecker; ncclimo: elm rgn_avg time_bounds; ncremap: xcl level, mbtr --monotonicity';git push --tags

	* Let it be known that ncap2 stopped working correctly with MacOS again today

	* ncchecker tidy manpage, add to homepage, add to nco.texi

2024-03-21  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.2-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.2-alpha03: Monkeybaut IPA';git push
	git tag -a 5.2.2-alpha03 -m 'ncchecker RFC #s, tst_lst; ncclimo: elm rgn_avg time_bounds; ncremap: xcl level';git push --tags

	* ncclimo: add "time_bounds" to ELM regional timeseries generated with --rgn_avg

2024-03-20  Charlie Zender  <zender@uci.edu>

	* ncremap: add "level" to exclusion list for vertical interpolation

2024-03-15  Charlie Zender  <zender@uci.edu>

	* Clarify use of $caseid in ncclimo for non-standard filenames

2024-03-07  Charlie Zender  <zender@uci.edu>

	* ncchecker abstract all tests into template that uses info from test definition table

	* ncchecker implement flexible test selection logic

	* Rename diwg_chk to ncchecker

2024-03-05  Charlie Zender  <zender@uci.edu>

	* diwg_chk: Add RFC recommendation numbers, sort tests in that order

	* NCO 5.2.2-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.2-alpha02: Broken Molar';git push
	git tag -a 5.2.2-alpha02 -m 'diwg_chk; ncremap: --monotonicity';git push --tags

	* Let it be known that ncap2 started linking correctly with MacOS again today

	* Add diwg_chk, support distribution in autotools and CMake

2024-02-27  Charlie Zender  <zender@uci.edu>

	* ncremap: Walter Hannah changed mbtempest argument name from "monotonic" to "monotonicity"

2024-02-21  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.2-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.2-alpha01: IRS 1040';git push
	git tag -a 5.2.2-alpha01 -m 'Functionally identical to 5.2.1 (adds -lgslcblas, fix andes paths)';git push --tags

	* ncremap/ncclimo/configure.eg change Andes E3SMU paths to /ccs/proj/cli115/software/e3sm-unified

	* bld/Makefile, nco++/Makefile add -lgslcblas for Derecho

2024-02-18  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.1 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.1: Shabu Shabu';git push
	git tag -a 5.2.1 -m 'Functionally identical to 5.2.0 (except compiles with bld/Makefile, fixes ncclimo/ncremap syntax)';git push --tags

2024-02-17  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.1-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.1-alpha01: Engoron';git push
	git tag -a 5.2.1-alpha01 -m 'Functionally identical to 5.2.0 (except compiles with bld/Makefile, fixes ncclimo/ncremap syntax)';git push --tags

	* ncclimo/ncremap: fix script errors caused during deprecation of COBALT batch scheduler

2024-02-16  Charlie Zender  <zender@uci.edu>

	* nco_qnt_mtd() implement workaround to compiler-dependent behavior at tokenization
	Prevents error on too many decimal points in number in expansion of macro ‚ÄòNCO_VERSION‚Äô	when version is purely numeric, e.g., 5.2.0

	* NCO 5.2.0 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.0: Fast Car';git push
	git tag -a 5.2.0 -m 'all: cf lsy mtd; ncclimo: tms inp_aut, fix inp_glb, fix djf-mode clm_bnd; ncclimo/ncremap: dpr cheyenne+ALCF mch, spp derecho, upd perlmutter; ncks: --chk_bnd, S1D works; ncremap: TR --mono*, ncoidw, MWF alg_lst, trfv2';git push --tags

	* Add lossy_compression to list of attributes that cause variable to be treated as associated coordinate

	* ncremap change alg_lst from space-separated to comma-separated

	* nco.texi document chk_bnd, S1D, --alg_lst

2024-02-15  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.0-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.0-beta01: Kansas City';git push
	git tag -a 5.2.0-beta01 -m 'all: cf lsy mtd; ncclimo: tms inp_aut, fix inp_glb, fix djf-mode clm_bnd; ncclimo/ncremap: dpr cheyenne+ALCF mch, spp derecho, upd perlmutter; ncks: --chk_bnd, S1D works; ncremap: TR --mono*, ncoidw, MWF alg_lst, trfv2';git push --tags

	* S1D add levlak and levgrnd coordinates from elmv3_r05l15.nc

	* S1D add topounit support

2024-02-14  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.0-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.0-alpha06: Be My Valentine';git push
	git tag -a 5.2.0-alpha06 -m 'ncks: S1D works';git push --tags

	* S1D skip unpacking empty variables. Now works on up-to-date ELM IG restarts.

	* S1D appears to work well for most variables. Remaining issues	include: icol_crop_noncompete, icol_urban_*

2024-02-13  Charlie Zender  <zender@uci.edu>

	* S1D implement new has_mec determination algorithm

	* S1D Value must not equal zero or missing value when determining landunit type

	* NCO 5.2.0-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.0-alpha05: Sandflower';git push
	git tag -a 5.2.0-alpha05 -m 'ncks: s1d dmn rdr, mec, vrt, mss_val';git push --tags

	* S1D initialize all output fields to missing value

2024-02-07  Charlie Zender  <zender@uci.edu>

	* S1D now defines MEC and MRV dimensions correctly

	* Decode has_mec, has_lev* et al. before variable definition block, and within OpenMP variable read/write block

2024-02-06  Charlie Zender  <zender@uci.edu>

	* Progress in dimension identificaion, aka, inverting unrolling

	* Add MEC coordinate to output

	* Struggle to automatically identify dimensions in non-MEC fields!

	* Modify nco_dfl_case_generic_err() to print bad case arguments

	* S1D: Add remaining PFT, landunit enums and string functions

2024-02-01  Charlie Zender  <zender@uci.edu>

	* S1D: Add legions of code to improve MEC column output capabilities, including vertical fields

2024-01-31  Charlie Zender  <zender@uci.edu>

	* S1D: verify that decoding ELM unstructured history file for PFT variable GPP works fine

	* S1D: fix spatial dimension addition in nco_s1d_unpack()

2024-01-30  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.0-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.0-alpha04: Heritage BBQ';git push
	git tag -a 5.2.0-alpha04 -m 'all: cf lsy mtd; ncclimo/ncremap: dpr cheyenne, spp derecho, upd perlmutter;ncremap: TR revert to --mono*, ncoidw, revamp MWF';git push --tags

	* Unbreak ~six regression tests by restoring old quantization metadata until CF approves draft convention

	* nco_flt_mtd() finish draft implementation of quantization metadata for both NCO and libnetcdf algorithms

2024-01-19  Charlie Zender  <zender@uci.edu>

	* nco_xtr_dfn() output draft CF metadata container variable and	attributes "family", "algorithm", and "implementation"

2024-01-18  Charlie Zender  <zender@uci.edu>

	* Tweak nco_xtr_dfn() to output draft CF metadata attributes "lossy_compresssion" and "lossy_compression_nsb"

	* Perlmutter remove gcc/11.2.0, update to cray-hdf5/1.12.2.9 cray-netcdf/4.9.0.9

2024-01-12  Charlie Zender  <zender@uci.edu>

	* Perlmutter remove GSL module

2024-01-11  Charlie Zender  <zender@uci.edu>

	* ncremap revamp MWF mode to allow user-specifed alg_lst

	* ncremap prefer 'ncoidw' to 'nco_idw'

2024-01-10  Charlie Zender  <zender@uci.edu>

	* Verify MWF mode works for TR with QU240 and ne11np4

	* ncremap replace --method mono* by --mono* since MWF mode revealed some failures with --method mono*

2024-01-08  Charlie Zender  <zender@uci.edu>

	* Deprecate Cheyenne, support NCAR Derecho

2024-01-07  Charlie Zender  <zender@uci.edu>

	* NCO 5.2.0-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.0-alpha03: Sunrise Snatchers';git push
	git tag -a 5.2.0-alpha03 -m 'all: 2024; ncclimo: refactor for tms inp_aut, fix Dec clm_bnd in djf mode, fix inp_glb;ncclimo/ncremap: [-f $fl] || [-L $fl], dpr ALCF mch';git push --tags

2024-01-05  Charlie Zender  <zender@uci.edu>

	* Update documentation dates and copyright notice to 2024

2024-01-03  Charlie Zender  <zender@uci.edu>

	* ncclimo/ncremap Deprecate ALCF Cooley, Mira, Theta machines and Cobalt batch scheduler instructions

2023-12-30  Charlie Zender  <zender@uci.edu>

	* Verify globbing for input files works

	* ncclimo/ncremap: Use test -f || test -L (true if file or link) instead of test -f to test for file existance

2023-12-22  Charlie Zender  <zender@uci.edu>

	* Combine inp_aut filename generation for annual files with monthly files

2023-12-21  Charlie Zender  <zender@uci.edu>

	* Fix climatology bounds for climatological December in DJF mode for monthly climos

	* Start branch csz_ncclimo with unified inp_aut filename generator for climos and timeseries

2023-12-15  Charlie Zender  <zender@uci.edu>

	* nco_chk_tm() for diwg_chk successfully identifies violations via two methods

	* Add nco_chk_tm() stubs to check time coordinates for double precision

2023-12-06  Charlie Zender  <zender@uci.edu>

	* Assign NETCDF_ROOT in configure.eg instead of bashrc (fixes Chrysalis build)

	* configure.ac: Add *_INC diagnostics to trace mangling of CPPFLAGS

	* NCO 5.2.0-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.0-alpha02: Lysanne-a-thon';git push
	git tag -a 5.2.0-alpha02 -m 'ncks: nco_chk_bnd(); ncremap: trfv2';git push --tags

	* ncks: nco_chk_???() print full-names only when variable or group is not at root level

	* ncks: Finish nco_chk_bnd()

2023-12-01  Charlie Zender  <zender@uci.edu>

	* ncks: nco_chk_bnd() stubs

	* ncremap: Give v3 algorithm names preference/precedence in listings, docs

	* Add ncoaave as legitimate map-type directly to nco_rgr.c

	* Compile by default with -UNCO_ABORT_ON_ERROR not -DNCO_ABORT_ON_ERROR

2023-11-30  Charlie Zender  <zender@uci.edu>

	* ncremap tweaks for new algorithm names, e.g., ncoaave, trfv2

	* NCO 5.2.0-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.2.0-alpha01: Crown Princess';git push
	git tag -a 5.2.0-alpha01 -m 'Functionally identical to 5.1.9 (except ncremap, ncremap: support fv2, fix mbtr alg_typ=tempest, deprecate sprintf(); ncks doc chk_xtn)';git push --tags

	* ncremap implement alg_typ fv2, fvnp2

	* Correct wgt_opt_mbt for alg_typ=tempest to use order = se_np_nbr == 4 by default (since TR uses order=4)

2023-11-29  Charlie Zender  <zender@uci.edu>

	* Move ${DATA}/ne30/rgr/ne30_tst.nc to ${DATA}/ne30/raw/ne30_tst.nc

	* ncap2 deprecate more sprintf()'s, use snprintf() instead, to quiet Clang warnings

2023-11-09  Charlie Zender  <zender@uci.edu>

	* ncap2 deprecate sprintf(), use snprintf() instead, to quiet Clang warnings

	* Document ncks --chk_xtn

2023-11-07  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.9 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.9: Likanne o ka Moana';git push
	git tag -a 5.1.9 -m 'all: flg_ilv fix, WIN32 sls_chr; bm: rsync; ncap2 parse NC_MIN_INT64; ncks: chk_xtn; ncremap: mpt_mss, trbilin, trintbilin, ncoaave, ...;';git push --tags

	* NCO 5.1.9-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.9-beta01: Likanne o ka Moana';git push
	git tag -a 5.1.9-beta01 -m 'all: flg_ilv fix, WIN32 sls_chr; bm: rsync; ncap2 parse NC_MIN_INT64; ncks: chk_xtn; ncremap: mpt_mss, trbilin, trintbilin, ncoaave, ...;';git push --tags

2023-11-03  Charlie Zender  <zender@uci.edu>

	* Update ncclimo regression test to use v2 not v1 data

	* Use rsync rather than scp in NCO_rgr.pm (fixes many regression tests)

	* Update config.guess, config.sub from GNU Savannah

	* Determine sls_chr from _MSC_VER and (new) WINOS token instead of (old) WIN32 token

	* Deprecate WIN32 token, use WINOS instead (in pvmgetarch, Makefile, Makefile.old, configure.ac)

	* Add MinGW to GNU_TRP and PVM_ARCH types that define WINOS token

2023-11-02  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.9-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.9-alpha03: Caring Bridge';git push
	git tag -a 5.1.9-alpha03 -m 'all: fix uninitialized flg_ilv to fix ncra, ncrcat bugs; ncap2: refactor exit(), parse NC_MIN_INT64; ncks: chk_xtn';git push --tags

	* Add --chk_xtn to check DIWG filename extension recommendation in diwg_chk

	* Determine sls_chr from _MSC_VER not WIN32 (archaic)
	Fixes bug where NCO expected Windows filenames like C:/foo.nc instead of C:\foo.nc

2023-11-01  Charlie Zender  <zender@uci.edu>

	* Henry fixes NC_MIN_INT64 parsing so limits.nco completes successfully!

2023-10-31  Charlie Zender  <zender@uci.edu>

	* ncremap/ncclimo: Update Perlmutter modules

	* Add ncremap error messages for for esmfbilin, esmfaave, trbilin, trintbilin

	* Try std::strtoll() and std::strtoull() in ncoGrammar.g to fix	limits.nco behavior (requires ISO C++ 2011)

	* Initialize flg_ilv=False in nco_lmt_evl() to fix ncra bug reported by Chris G. and Jim Benedict
	This eliminates ALL valgrind uninitialized value warnings when SSC specified without ILV

2023-10-24  Charlie Zender  <zender@uci.edu>

	* Cleanup ncap2 limits.nco test, which fails on MacOS and Linux

2023-10-20  Charlie Zender  <zender@uci.edu>

	* in_zarr4.cdl: Temporarily eliminate NC_UNLIMITED dimension so NCO 5.1.9+ distribution does not break when building with netCDF <= 4.9.2

	* ncap2 main() return with nco_exit_gracefully(), like other operators

	* ncap2 main() return with EXIT_SUCCESS instead of antlr_ret (which was 133?)

	* ncap2 add -v synonyms extract_defined_derived_variables, xtr_dfn_drv_var

2023-10-19  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.9-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.9-alpha02: Elk Rut';git push
	git tag -a 5.1.9-alpha02 -m 'all: NCZarr unlim dim; ncremap --mpt_mss';git push --tags

	* Document --mpt_mss

	* Implement --mpt_mss as ncremap switch and pass-through. Solves problem.

	* Implement flg_mpt_mss so MPAS-Seaice data remains, by default, zero in open-ocean regions

	* Verify that ncgen produces, and ncks reads, NCZarr-format in_zarr4. Yay!

	* Restore NC_UNLIMITED dimension to in_zarr4.cdl after PR #2744 added support

2023-10-01  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.9-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.9-alpha01: Bandelier';git push
	git tag -a 5.1.9-alpha01 -m 'Functionally identical to 5.1.8 (except ncremap)';git push --tags

	* Add ncremap invocations for trbilin, trintbilin

	* Add ncremap synonyms esmfaave, ncoaave, traave, esmfbilin, esmfndtos

2023-09-17  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.8 release procedure:
	cd ~/nco;git commit -a -m "Version 5.1.8: Cafe Pasqual\'s";git push
	git tag -a 5.1.8 -m 'all: NC_STRING atts ok, Frontier;ncremap mpas grd rdn, E3SMU 1.9.0;ncks chk_chr, chk_mss, diwg_chk';git push --tags

2023-09-14  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.8-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.8-alpha05: Foggy Wharf';git push
	git tag -a 5.1.8-alpha05 -m 'ncclimo: disambiguate Frontier/Perlmutter login nodes; ncremap: nrm=N/A; E3SMU 1.9.0 paths';git push --tags

	* Verify nco_bm.pl --regress ncremap works once again with server dust=imua

	* ncremap/ncclimo update NPO paths to be consistent with E3SMU 1.9.0

2023-09-07  Charlie Zender  <zender@uci.edu>

	* Make "N/A" equivalent to "none" when parsing ESMF "normalization" map attributes

2023-09-01  Charlie Zender  <zender@uci.edu>

	* Disambiguate Frontier + Perlmutter nodes named login[0123456789][0123456789]

2023-08-31  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.8-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.8-alpha04: Happy Valley';git push
	git tag -a 5.1.8-alpha04 -m 'all: Frontier';git push --tags

	* ncremap/ncclimo: modify to support Frontier

	* Build on Frontier with Makefile build-engine

2023-08-30  Charlie Zender  <zender@uci.edu>

	* Clarify error message with how to get filters working

	* Copy many variables from in.cdl to in_4.cdl to facilitate compression testing

2023-08-21  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.8-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.8-alpha03: Giggles';git push
	git tag -a 5.1.8-alpha03 -m 'ncks --chk_chr, --chk_mss';git push --tags

	* Refactor output of DIWG compliance checks to be more legible,	uniform for diwg_chk

	* Document --chk_chr, --chk_mss, --chk_nan

	* Add nco_chk_mss() to check for missing_value attributes

2023-08-18  Charlie Zender  <zender@uci.edu>

	* Add nco_chk_chr(), nm_cf_chk(), --chk_chr to check identifier	names for CF-Compliance (DIWG)

2023-08-16  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.8-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.8-alpha02: Victoria Beach';git push
	git tag -a 5.1.8-alpha02 -m 'all: allow NC_STRING instead of NC_CHAR atts; ncremap: nfr mpas grd rdn';git push --tags

	* nco_grd_nfr() test MPAS coordinates without units attributes for being radians not degrees

2023-08-15  Charlie Zender  <zender@uci.edu>

	* Remove WARNING statements about NC_STRING not being supported/CF-compliant

2023-08-14  Charlie Zender  <zender@uci.edu>

	* Verify CF bounds attribute now handled correctly when stored as NC_STRING

	* Add nco_free_string() in support of NC_STRING support

2023-08-12  Charlie Zender  <zender@uci.edu>

	* nco_xtr_cf_var_add() nco_is_spc_in_cf_att(): update WARNING messages about NC_STRING attributes not being CF-compliant

2023-07-27  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.8-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.8-alpha01: For All Mankind';git push
	git tag -a 5.1.8-alpha01 -m 'Functionally identical to 5.1.7';git push --tags

2023-07-26  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.7 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.7: Barbenheimer';git push
	git tag -a 5.1.7 -m 'all: Intel compiler fixes;ncclimo/ncremap implement cmp_sng; ncremap: CF lon_bnds';git push --tags

	* Remove call to nco_msh_lon_cf() for further debugging in 5.1.8 (it crashes Anaconda tests in a manner unreproducible on my laptop)

	* Add "DOI = 10.1016/j.envsoft.2008.03.004" in NCO global attribute

2023-07-25  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.7-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.7-beta01: Fan Dance';git push
	git tag -a 5.1.7-beta01 -m 'all: Intel compiler fixes;ncclimo/ncremap implement cmp_sng; ncremap: CF lon_bnds';git push --tags

	* ncks.c protect omp_set_num_threads() with ENABLE_OPENMP to fix #271

2023-07-23  Charlie Zender  <zender@uci.edu>

	* Implement nco_msh_lon_cf() in nco_rgr_wgt() to ensure	CF-compliant longitude bounds in regridded files

2023-07-16  Charlie Zender  <zender@uci.edu>

	* Tidy nco_map_mk(), nco_msh_lon_crr() to prepare to always output bounds on same branch cut

2023-06-23  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.7-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.7-alpha02: Prom';git push
	git tag -a 5.1.7-alpha02 -m 'all: fix Intel compiler issue with	OpenMP pragma; ncremap/ncclimo cmp_sng fix';git push --tags

	* ncremap/ncclimo: Insert backslashes into cmp_sng to protect pipe characters from shell

2023-05-25  Charlie Zender  <zender@uci.edu>

	* ncremap/ncclimo: Excise all Cori-specific script commands

2023-05-22  Charlie Zender  <zender@uci.edu>

	* Fix Intel compiler error by using grd_nbr instead of grd_sz_in in OpenMP block

2023-05-21  Charlie Zender  <zender@uci.edu>

	* Tidy header files

2023-05-16  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.7-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.7-alpha01: Promotion';git push
	git tag -a 5.1.7-alpha01 -m 'Functionally identical to 5.1.6';git push --tags

2023-05-12  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.6 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.6: Crossroads';git push
	git tag -a 5.1.6 -m 'all: CF dfl; fix NCZarr overwrite/removal; ncap2: cmp_sng; ncclimo: --split, --stdin docs, eamxx; ncremap: vrt xtr dyn hrz/vrt_mrv ncr_in/out, vrt non-spt dmn lrv, cpl dmn, vrt tms prs->prs, --col_dmn;';git push --tags

	* Fix NaN->NaNf in in_4.cdl, beef-up nco_chk_nan()

2023-05-10  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.6-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.6-beta01: Monte Nido';git push
	git tag -a 5.1.6-beta01 -m 'ncap2: cmp_sng';git push --tags

	* ncap2 replace old nco_def_var_deflate() with new cmp_sng and nco_flt_def_out()

2023-05-05  Charlie Zender  <zender@uci.edu>

	* nco_scm.c: Fix cvs_Name back-compatibility issue

	* Perlmutter: add 'module load gsl' to ncremap/ncclimo --npo configuration

2023-05-03  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.6-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.6-alpha03: Smoker';git push
	git tag -a 5.1.6-alpha03 -m 'ncclimo: --split, --stdin docs, eamxx; ncremap: use flg_hrz_mrv and ncr_idx_in/out to set xtr flg for hyb+dpt_3D';git push --tags

	* ncremap allow missing values, hrz/vrt dimension ordering, ncr/dcr monotonicity when computing min/max values for dpt_3d fields

2023-04-28  Charlie Zender  <zender@uci.edu>

	* Tidy man pages

	* ncclimo/ncremap reveal --npo option to users in help message

2023-04-27  Charlie Zender  <zender@uci.edu>

	* Name-generation algorithm for EAMxx works if caseid is supplied as any full filename

2023-04-25  Charlie Zender  <zender@uci.edu>

	* Change Chrysalis build procedure to use Anaconda gcc/g++ to workaround unresolved function link error in new libicuuc library

2023-04-12  Charlie Zender  <zender@uci.edu>

	* nco.texi update documentation to reflect --split and --stdin changes from 5.0.4

2023-04-11  Charlie Zender  <zender@uci.edu>

	* ncclimo: emit deprecation ERROR and HINT when invoked with --stdin

2023-04-10  Charlie Zender  <zender@uci.edu>

	* Improve pressure bounds check to account for missing values in dpt_3D grids

	* configure.ac use clang++ -std=c++14 to avoid deprecated std::binary_operator error with default -std=c++17 in Clangv16

	* Henry patched NCO (NcapVector.hh) to avoid using std::binary_operator

	* Replace #if 0 with #if false

2023-04-09  Charlie Zender  <zender@uci.edu>

	* Implement correct pressure bounds check for input dpt_3D grids with arbitrary flg_hrz_mrv and ncr_idx_in

	* Diagnose rather than assume whether input/output hybrid coordinates increase or decrease in index (not geometric) space

2023-04-05  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.6-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.6-alpha02: Indictment Excitement';git push
	git tag -a 5.1.6-alpha02 -m 'all: fix NCZarr overwrite/removal;	ncremap cpl dmn, tms prs, non-spatial lrv';git push --tags

	* ncremap support non-spatial dimensions (temporal, spectral, chemical) for all vertical grid types

	* ncremap support vertical interpolation of timeseries data from pure-pressure to pure-pressure grids

2023-04-02  Charlie Zender  <zender@uci.edu>

	* ncremap add nco_vrt_grd_sng() to debug prs->prs issues

2023-03-31  Charlie Zender  <zender@uci.edu>

	* ncremap add --col_dmn

	* ncremap/ncclimo remove alcf mira, add e3sm.ess.uci.edu

2023-03-30  Charlie Zender  <zender@uci.edu>

	* ncremap add coupler x-dimension names as unstructured dimension candidates

	* ncremap/ncclimo add prc_typ='cpl' option stub

2023-03-29  Charlie Zender  <zender@uci.edu>

	* ncremap/ncclimo cease printing example Panoply instructions

2023-03-22  Charlie Zender  <zender@uci.edu>

	* Note that ERWG 8.4.1 from Conda-Forge fails due to not being built with PIO

	* Treat all datasets as CF-compliant (to carry associated coordinate variables and multi-dimensional associate coordinates)

2023-03-21  Charlie Zender  <zender@uci.edu>

	* ncremap add x2[aglro]_n[xy] dimensions and dom[lr]_[lat/lon] variables for coupler land and river domains to database

	* ncremap correct lon/lat dimension keys in error HINT

	* Hint that error code -137, "NetCDF: NCZarr error" can be a NCZarr codec decompression issue

2023-03-14  Charlie Zender  <zender@uci.edu>

	* Call nco_fl_rm(fl_ncz) not nco_fl_rm(fl_psx)

	* Fix nco_drc_ncz_rm() to attempt nc_open(ncz_fl) not nc_open(psx_fl)

	* NCO 5.1.6-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.6-alpha01: Baltimore';git push
	git tag -a 5.1.6-alpha01 -m 'Functionally identical to 5.1.5';git push --tags

	* Update supported netCDF library versions

	* NCO 5.1.5 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.5: Rhubarb Pi';git push
	git tag -a 5.1.5 -m 'all: tgl->abs, NCZarr chk drc, dnd rgl fl; ncrcat: no_cll_mth; ncremap eamxx pdq plev, CF, prs_stt_usr fix plev_nm, ps_rtn, mss_val var_lst_zmid';git push --tags

	* NCO 5.1.5-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.5-beta01: Heisler Picnic';git push
	git tag -a 5.1.5-beta01 -m 'all: tgl->abs, NCZarr chk drc, dnd rgl fl; ncrcat: no_cll_mth; ncremap eamxx pdq plev, CF, prs_stt_usr fix plev_nm, ps_rtn, mss_val var_lst_zmid';git push --tags

	* Document new features for 5.1.5

	* Peter Caldwell verifies roundtrip mss_val vertical interpolation works for him

2023-03-13  Charlie Zender  <zender@uci.edu>

	* Tweak NCZarr debug verbosity and information reported

	* NCO 5.1.5-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.5-alpha04: Rehab paddling';git push
	git tag -a 5.1.5-alpha04 -m 'all: Toggle->Absolute; ncremap ps_rtn, vrt mss_val';git push --tags

2023-03-12  Charlie Zender  <zender@uci.edu>

	* ncremap vertical interpolation on half-range missing values copies from valid value

2023-03-11  Charlie Zender  <zender@uci.edu>

	* ncremap add --ps_rtn flag

	* ncremap prevent vertical interpolation calculations from using missing values

2023-03-10  Charlie Zender  <zender@uci.edu>

	* Change toggle to absolute False for FL_LST_IN_APPEND, HISTORY_APPEND, RM_RMT_FL_PST_PRC switches

	* Change toggle to absolute True for FORTRAN_IDX_CNV switch

2023-03-09  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.5-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.5-alpha03: Blizzard';git push
	git tag -a 5.1.5-alpha03 -m 'NCZarr chk drc, dnd rgl fl; ncremap eamxx pdq plev, eamxx CF, fix prs_stt_usr';git push --tags

	* Provide more information when NCZarr path attempts to mv or rm non-NCZarr files/directories

2023-03-05  Charlie Zender  <zender@uci.edu>

	* Prevent NCO from deleting/overwriting regular files with NCZarr directories

2023-03-04  Charlie Zender  <zender@uci.edu>

	* ncremap: fix prs_stt_usr translation into prs_stt that has used wrong	(opposite) logic since ... forever?

	* ncpdq: Quiet warning message about non-identity re-ordering of multiple dimensions with same names (EAMxx restarts have multiple dimensions named gp)

	* ncremap: Add plev to pdq_opt for EAMxx files

2023-02-25  Charlie Zender  <zender@uci.edu>

	* Thwart attempts to remove directories that are not NCZarr objects

2023-02-24  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.5-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.5-alpha02: Champignons';git push
	git tag -a 5.1.5-alpha02 -m 'all: EAMxx CF, ncks bnr_wrt fix; ncrcat: no_cll_mth, ncremap var_lst zmid';git push --tags

2023-02-23  Charlie Zender  <zender@uci.edu>

	* ncremap acquire timeMonthly_avg_zMid iff necessary for vertical interpolation

	* Infer CF-compliance from if global attribute Conventions contains "None yet" (currently true for SCREAMv1/EAMxx output)

2023-02-22  Charlie Zender  <zender@uci.edu>

	* ncremap re-enable plev_nm_out options, default to plev not lev for nco_vrt_grd_prs

2023-02-20  Charlie Zender  <zender@uci.edu>

	* Change implementation of FORCE_APPEND, FORCE_OVERWRITE from toggle to absolute

2023-02-19  Charlie Zender  <zender@uci.edu>

	* ncremap/ncclimo WARNING and ERROR when user specifies output directory beginning with dash

2023-02-16  Charlie Zender  <zender@uci.edu>

	* nco_bnr_wrt() change wrt_bnr from C-type long to C-type size_t for UNIX/Windows consistency

	* nco_bnr_wrt() use unsigned long long pointers (not unsigned long pointers) for eight-byte words

	* nco_fl_nm_vld_ncz_syn() caveat that WARNING about missing fragment only applies to NCZarr objects

2023-02-15  Charlie Zender  <zender@uci.edu>

	* ncremap/ncclimo use NERSC-compiled module since Cori now missing Intel library used by personal executables

2023-02-12  Charlie Zender  <zender@uci.edu>

	* Updated ChangeLog with earliest (1995) announcements of NCO availability

	* Successfully build and test with netCDF 4.9.1-final

2023-01-19  Charlie Zender  <zender@uci.edu>

	* Append cell_method by default only with ncra, not ncrcat/nces

2023-01-17  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.5-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.5-alpha01: Morning Show';git push
	git tag -a 5.1.5-alpha01 -m 'Functionally identical to 5.1.4';git push --tags

	* Quiet clang++ v. 13 compiler warnings by shifting from sprintf() to snprintf()

2023-01-10  Charlie Zender  <zender@uci.edu>

	* Update homepage with NASA OSTFL project

	* NCO 5.1.4 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.4: Bakhmut';git push
	git tag -a 5.1.4 -m 'all: deactivate SIMD, cxl UDUNITS2_PATH, no cmp NC_STRING/NC_VLEN, NCO_ERR_FL_LN; ncremap: +ve-dwn dpt, ARGO SOSE WOA18';git push --tags

2023-01-09  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.4-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.4-beta01: Habana';git push
	git tag -a 5.1.4-beta01 -m 'fix ilev_nm_out';git push --tags

	* Copy ilev_nm_out from rgr->ilev not rgr->lev for prs_out grids

2023-01-06  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.4-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.4-alpha07: Atmospheric River';git push
	git tag -a 5.1.4-alpha07 -m 'ncremap: +ve-dwn dpt, ARGO SOSE';git push --tags

2023-01-05  Charlie Zender  <zender@uci.edu>

	* ncremap: Hooks to support SOSE vertical grid

	* ncremap: Verify that SIMD pragmas caused E3SMU Compy compute-node issues

	* ncremap: Allow positive-downwards 1D depth coordinates, verify with ARGO

2023-01-04  Charlie Zender  <zender@uci.edu>

	* ncremap: Add LATITUDE, LONGITUDE coordinates to database for ARGO observations

	* NCO 5.1.4-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.4-alpha06: Postop';git push
	git tag -a 5.1.4-alpha06 -m 'all: deactivate SIMD, cxl UDUNITS2_PATH; ncremap: fix ilev rst->3D';git push --tags

	* De-activate SIMD pragmas by resetting compiler version threshold from 8 to 737

2023-01-03  Charlie Zender  <zender@uci.edu>

	* Update nco.texi with new vertical interpolation features

2022-12-23  Charlie Zender  <zender@uci.edu>

	* Allow interpolation of ilev variables in input restart files to flg_grd_out_dpt_3D

	* Implement new Perlmutter build packages

2022-12-22  Charlie Zender  <zender@uci.edu>

	* Remove UDUNITS2_PATH from autoconf build commands

2022-12-21  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.4-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.4-alpha05: Antlr';git push
	git tag -a 5.1.4-alpha05 -m 'all: Simplify UDUnits cnf';git push --tags

	* configure.ac: De-cruft, revamp, simplify UDUnits support, eliminate UDUNITS_PATH argument

2022-12-20  Charlie Zender  <zender@uci.edu>

	* Initialize previously uninitialized att_nm[NC_MAX_NAME+1L]={0}; at line 702 of nco_att_utl.c.
	This eliminates vexing "Conditional jump or move depends on uninitialised value(s)" valgrind errors.

	* Use NC_MAX_NAME+1 instead of NC_MAX_NAME

	* NCO 5.1.4-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.4-alpha04: Messi';git push
	git tag -a 5.1.4-alpha04 -m 'ncremap: vrt 3D->1D, 3D->3D, 1D->3D, 1D->1D work;';git push --tags

	* Successfully test 3D->1D, 3D->3D, 1D->3D, 1D->1D

	* Add "depth" and "depth_bnds" to nco_var_is_fix()

	* Increase flexibility with mlc_nm, bd_nm, lt_nm, and flg_mlc_out

	* Fix mlc_out dimensions and missing values

	* Revamp determination of horizontal bounds for flg_grd_in_dpt_1D

2022-12-16  Charlie Zender  <zender@uci.edu>

	* Refine defaults for ease-of-use

	* Verify simultaneous hrz + vrt with WOA18 r025 destination grid

	* NCO 5.1.4-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.4-alpha03: FOMO';git push
	git tag -a 5.1.4-alpha03 -m 'ncremap: rgr rst, nfr mlc_in, dpt_mdp';git push --tags

	* Interpolation appears to work on regridded restarts

	* Add missing value logic to inferral of dpt_mdp, mlc_in

2022-12-15  Charlie Zender  <zender@uci.edu>

	* Revamp cnv->MPAS determination for v2, add maxLevelCell to horizontal exclusion list

	* Construct maxLevelCell from layerThickness if necessary

	* Allow zMid construction from horizontal or vertical MRV inputs

	* Interpolating MPAS-O (depth-MRV) restart files appears to work

2022-12-14  Charlie Zender  <zender@uci.edu>

	* Construct dpt_mdp from depth-MRV layerThickness, bottomDepth

2022-12-13  Charlie Zender  <zender@uci.edu>

	* ncremap add --dpt_nm option

	* Default MPAS-O monthly output interpolates correctly, restarts need to construct zMid

	* Omit all MPAS profiles derived for spatiallly aggregated horizontal regions

2022-12-12  Charlie Zender  <zender@uci.edu>

	* ncclimo add buid enviroment variables on Compy

	* Output 3D depth/height variable

	* Account for memory ordering when consructing mlc_in

	* Die if memory ordering of depth/height field differs between input and output

	* Exclude vertical dimensions from allowed horizontal dimensions

	* Interpolate interface and midpoint depth fields to same 1D output grid

2022-12-11  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.4-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.4-alpha02: Humerus';git push
	git tag -a 5.1.4-alpha02 -m 'all: no cmp NC_STRING, NC_VLEN; ncremap: dpt ntp, drv mlc dpt_ntf';git push --tags

	* nco_ntp_vrt() produces reasonable-looking 3D -> 1D depth interpolation

2022-12-10  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() creates legible (though incorrect) output files!

	* Check for presence of run-time extensive variables adding to exclusion list

2022-12-08  Charlie Zender  <zender@uci.edu>

	* Include depth in min/max vertical coordinate search

	* Construct maxLevelCell if necessary

2022-12-04  Charlie Zender  <zender@uci.edu>

	* Read dpt_in from external, functionalize nco_xtr_var_get()

2022-12-02  Charlie Zender  <zender@uci.edu>

	* Add stubs to handle (MPAS) depth-coordinate grids

2022-11-30  Charlie Zender  <zender@uci.edu>

	* Explicitly disallow compression of variable-length types

2022-11-29  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.4-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.4-alpha01: Seal Bottling';git push
	git tag -a 5.1.4-alpha01 -m 'Functionally identical to 5.1.3. all: NCO_ERR_FL_LN';git push --tags

	* Add Add NCO_ERR_FL_LN macro for automatic file/line debugging info, start to use in nco_map.c

	* nco_grd_nfr(): Check bnd_dmn_nm existance before access, prevent segfault inferring unstructured grids

2022-11-28  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.3 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.3: Mauna Loa';git push
	git tag -a 5.1.3 -m 'ncremap automagical hrz_mrv determination/usage';git push --tags

	* NCO 5.1.3-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.3-alpha02: Thai Massage';git push
	git tag -a 5.1.3-alpha02 -m 'ncremap automagical hrz_mrv determination/usage';git push --tags

2022-11-25  Charlie Zender  <zender@uci.edu>

	* Realize that 20221108 change in 5.1.2 broke nco_ntp_vrt() for vrt_mrv data like eamxx
	because datasets were no longer permuted to hrz_mrv that nco_ntp_vrt() assumed

	* nco_ntp_vrt() use flg_hrz_mrv, appears to work

	* nco_ntp_vrt() add stubs to automagically determine flg_hrz_mrv/flr_vrt_mrv

	* nco_map_rgr() assign col_nm_in to ncol_p not ncol_d

2022-11-23  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.3-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.3-alpha01: Tavern House';git push
	git tag -a 5.1.3-alpha01 -m 'Functionally identical to 5.1.2';git push --tags

	* Simplify vertical interpolation if input vertical dimension is most-rapidly-varying (--vrt_mrv)

2022-11-18  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.2 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.2: Guerilla Poetry';git push
	git tag -a 5.1.2 -m 'ncclimo/ncremap: -P eamxx, --npo, hrd_pth; ncremap ps_nm_in, vrt_in, vrt_out';git push --tags

	* Remove unnecessary assert() in nco_cnk_sz_set_trv() that prevents SCREAM regrid

	* Update package availability on homepage index.shtml

2022-11-16  Charlie Zender  <zender@uci.edu>

	* ncremap pdq_opt includes CMOR dimensions time, olevhalf for MPAS output

2022-11-13  Charlie Zender  <zender@uci.edu>

	* ncks fix accidental assignment of fl_out_fmt to NC_FORMAT_64BIT_OFFSET in nco_prn.c

2022-11-09  Charlie Zender  <zender@uci.edu>

	* Document --ps_nm, --vrt_in in nco.texi

	* Add new options to usage and man pages

	* NCO 5.1.2-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.2-beta01: Nashville';git push
	git tag -a 5.1.2-beta01 -m 'ncclimo/ncremap: -P eamxx, hrd_pth; ncremap ps_nm_in, vrt_in, vrt_out';git push --tags

	* ncz2psx: Add --hrd_pth/--npo support for consistency with ncremap/ncclimo

2022-11-08  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.2-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.2-alpha04: Ladybug';git push
	git tag -a 5.1.2-alpha04 -m 'ncclimo/ncremap: -P eamxx, hrd_pth';git push --tags

	* ncremap: Turn permutation off (pdq_flg=No, pdq_opt='') unless horizontal regridding is invoked

	* ncclimo/ncremap: --hrd_pth or --npo as first argument sets NCO_PATH_OVERRIDE='Yes'

2022-11-07  Charlie Zender  <zender@uci.edu>

	* ncremap: -P eamxx set pdq_opt=ilev,lev,dim2,col and ps_nm=ps

2022-11-04  Charlie Zender  <zender@uci.edu>

	* ncremap: Require pdq_flg=Yes to enable pdq_opt for all prc_typ

	* ncclimo/ncremap: Shift slurm mail options to use --mail-type and --mail-user

2022-11-03  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.2-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.2-alpha03: Love, Death, & Robots';git push
	git tag -a 5.1.2-alpha03 -m 'ncremap ps_nm_in, vrt_in, vrt_out,	stg_grd, T_mid, ';git push --tags

	* ncks: add --vrt_in, shift to --vrt_out

	* ncclimo, docs: shift from --vrt, --vrt_fl to --vrt_out

	* ncremap/ncremap shift from -C, -p to --constraint, --partition

	* ncclimo/ncremap consistent node-names, paths for machine-specific environments, NCO_PATH_OVERRIDE

	* ncremap new functionality appears to work for SCREAM!

	* ncremap accept --vrt_in to specify optional input vertical grid filename (vetted)

2022-11-02  Charlie Zender  <zender@uci.edu>

	* ncremap shift from vrt_fl to vrt_out for canonical vertical interpolation

	* ncremap --ps_nm_in=ps_nm with optional embedded filename (vetted)

	* NCO 5.1.2-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.2-alpha02: Gould Median';git push
	git tag -a 5.1.2-alpha02 -m 'all: prn_usg() not OOM; ncremap: recognize T_mid, ps/plev_nm_in/out/tpl, stg_grd dfl False; ncz2psx: man';git push --tags

	* ncremap turn-off staggered grid by default in nco_rgr.c to avoid --no_stg_grd

2022-11-01  Charlie Zender  <zender@uci.edu>

	* ncremap add ps_nm_in, ps_nm_out, plev_nm_in, plev_nm_out to excluded variables list

2022-10-31  Charlie Zender  <zender@uci.edu>

	* ncremap treat T_mid as temperature and VerticalLayerMidpoint as geopotential height in vertical interpolation (for SCREAM)

	* ncpdq ncbo ncwa ncflint print usage not die with OOM when called without arguments

2022-10-30  Charlie Zender  <zender@uci.edu>

	* Add man page ncz2psx.1

2022-10-28  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.2-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.2-alpha01: Twit';git push
	git tag -a 5.1.2-alpha01 -m 'Functionally identical to 5.1.1';git push --tags

	* nco_rgr.c add plev_nm_out, ps_nm_in, ps_nm_out as user-modifiable

	* NCO 5.1.1 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1: Tangentially Speaking';git push
	git tag -a 5.1.1 -m 'all: stdin, -o fl_out, ncz2psx, nsb->nesb, bgr->btg, bgb->bgr, cdc_lst_bld fix; ncclimo: rgn_avg; ncremap: chk_map bln xcp, fix idw, mpas add_fll, no_add_fll, msk sgs, vrt ntp 1D, vrt_xtr mth=zero,lnr, dpr correct_areas, mono3';git push --tags

2022-10-21  Charlie Zender  <zender@uci.edu>

	* Makefile.old implement ANTLR_LIB_FLG ANTLR_INC_FLG to fix Andes build

	* NCO 5.1.1-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-beta01: Pancreatic';git push
	git tag -a 5.1.1-beta01 -m 'all: stdin, -o fl_out, ncz2psx, nsb->nesb, bgr->btg, bgb->bgr, cdc_lst_bld fix; ncclimo: rgn_avg; ncremap: chk_map bln xcp, fix idw, mpas add_fll, no_add_fll, msk sgs, vrt ntp 1D, vrt_xtr mth=zero,lnr', dpr correct_areas, mono3;git push --tags

	* Document stdin, NCZarr, rgn_avg, chk_map, add_fll, msk_apl, vrt_xtr

2022-10-20  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.1-alpha13 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-alpha13: Faint';git push
	git tag -a 5.1.1-alpha13 -m 'ncremap: add_fll mpaso, landmask fix, --no_add_fll, msk sgs < rnr_thr';git push --tags

	* ncremap re-compute ELM/CICE area variable in model-native units iff no_cll_msr != Yes

	* ncap2 create dummy input and output files when no filenames provided

	* ncremap add_fll place _FillValue where sgs_frc_out < rnr_thr = wgt_vld_thr (if provided)

	* ncremap add --no_add_fll switch to override new MPAS default

2022-10-19  Charlie Zender  <zender@uci.edu>

	* ncremap set add_fll automatically for all MPAS datasets

	* ncremap do not set default mask for sgs to landmask for back-compatibility, leave it unset

	* Change nco_bnr_wrt() prototype to accept size_t var_sz

2022-10-18  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.1-alpha12 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-alpha12: Seven Falls';git push
	git tag -a 5.1.1-alpha12 -m 'ncremap undup mpas no_stg_grd rnr_thr switches, mpassi add_fll, vrt_ntp: tpt, 1D OK, vrt_xtr add mth=zero,lnr; ncks add_fll trigger where sgs_frc=0.0';git push --tags

	* ncremap move/combine passing of --no_stagger to ncks to avoid double-setting it

	* ncremap move/combine passing of --rnr_thr to ncks to avoid double-setting it

	* ncremap set --add_fll to true for sea-ice models

	* ncremap add clause to cause --add_fll to set cells with sgs_frc == 0.0 to _FillValue

2022-10-13  Charlie Zender  <zender@uci.edu>

	* Add vertical extrapolation methods linear and zero

2022-10-12  Charlie Zender  <zender@uci.edu>

	* Vertically interpolate all variables whose names start with "tpt" with temperature method

	* ncremap allow vertical interpolation on single dimensional (vertical) files

2022-10-09  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.1-alpha11 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-alpha11: Tangentially Speaking';git push
	git tag -a 5.1.1-alpha11 -m 'all: stdin requires -o for fl_out; ncap2: stdin reorg';git push --tags

	* Re-organize ncap2 filename handling to treat stdin equivalent to positional in all cases

	* Check stdin for input filenames as last resort not first resort

	* ncks/ncrename/ncatted require -o for output file if stdin for	input (except for MFOs, for backward compatibility)

2022-10-07  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.1-alpha10 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-alpha10: Jinx Drives Solo';git push
	git tag -a 5.1.1-alpha10 -m 'ncremap nSnowLayers, sgs_frc prs, sgs_nrm prs, Chrysalis paths';git push --tags

	* ncremap add nSnowLayers dimension to pdq_opt for MPAS-SI

	* ncremap fix sgs_frc option handling that 5.1.0 broke for MPAS-SI, CICE

	* ncremap pass sgs_nrm for CICE and not others

2022-10-06  Charlie Zender  <zender@uci.edu>

	* nco_grd_nfr() print names of missing MPAS mesh variables needed to create mesh

	* Update Chrysalis paths for NCO_PATH_OVERRIDE

2022-10-05  Charlie Zender  <zender@uci.edu>

	* Restrict available synonyms for MALI to mali, pending renaming of Land Ice model

2022-09-29  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.1-alpha09 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-alpha09: Taylor Hawkins Tribute';git push
	git tag -a 5.1.1-alpha09 -m 'all: FL_LST_IN_APPEND; ncremap: correct_areas, mono3';git push --tags

	* Exit gracefully instead of attempting to read empty positional arguments

	* Document -H support

	* All operators support FL_LST_IN_APPEND by default and -H to turn it off

2022-09-28  Charlie Zender  <zender@uci.edu>

	* ncremap remove --correct_areas since TR 2.1.12 made this default and eliminated option

	* ncremap replace --mono3 by --method mono3 since TR 2.1.14, 2.1.15 changed option name

2022-09-27  Charlie Zender  <zender@uci.edu>

	* ncks: append input files from stdin to output file

2022-09-26  Charlie Zender  <zender@uci.edu>

	* Adopt nco_fl_lst_stdin() for all operators except ncap2

	* Simplify nco_fl_lst_stdin() prototype

2022-09-25  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.1-alpha08 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-alpha08: Sham Referendum';git push
	git tag -a 5.1.1-alpha08 -m 'all: NSB->NESB; ncks bgr->btg, bgb->bgr, stdin, chk_map bln xcp; ncremap nco_idw fix';git push --tags

	* Functionalize nco_fl_lst_stdin()

	* ncremap replace ConvertSCRIPToExodus (no longer exists) by ConvertMeshoExodus

	* ncks chk_map add INFO not scary WARNING when weights are intentionally non-conservative

	* map checker examines global attributes map_method, no_conserve, noconserve to determine whether weights are intentionally non-conservative

2022-09-23  Charlie Zender  <zender@uci.edu>

	* ncrename stdin search for input filenames works, though cannot copy from NCZarr to POSIX

	* ncks stdin search for input filenames works

	* ncremap replace general occurances of dwe with idw

	* ncremap fix bug where alg_opt=nco_idw (though not nco_dwe) was interpreted as nco_con

2022-09-22  Charlie Zender  <zender@uci.edu>

	* Change BitGroomBitRound and 'bgb' to BitGroomRound and 'bgr', respectively

	* Abbreviate BitGroom as 'btg' not 'bgr'

	* Shift NSB to NESB and/or "number of significant bits" to "number of stored bits"

2022-09-20  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.1-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-alpha07: Cantalina';git push
	git tag -a 5.1.1-alpha07 -m 'all: ncz2psx works as intended; ncclimo sgs mdl_nm fix';git push --tags

2022-09-18  Charlie Zender  <zender@uci.edu>

	* ncclimo set mdl_nm to elm for prc_typ=sgs

2022-08-26  Charlie Zender  <zender@uci.edu>

	* Tidy nco_fl_utl.c to prepare to allow stdin filename access for all operators

	* Fix NCZarr->POSIX write issue by eliminating Lat/Lon dimensions from in_zarr4.cdl

2022-08-25  Charlie Zender  <zender@uci.edu>

	* MFOs like ncea correctly write Zarr output but not POSIX output given Zarr input

	* MFOs like ncea correctly write Zarr output and POSIX output given POSIX input

	* ncz2psx properly transforms local NCZarr-store directory names to NCZarr file:// URLs

2022-08-24  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.1-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-alpha06: Cheney';git push
	git tag -a 5.1.1-alpha06 -m 'all: in_zarr4, nco_fl_blocksize() fix;ncclimo region_name, cell_methods';git push --tags

	* Add install rules for ncz2psx to Makefile.am, CMakeLists.txt, bld/Makefile

	* Add build rules for NCZarr files to data/Makefile.am, build in_zarr4 and symlinks

2022-08-23  Charlie Zender  <zender@uci.edu>

	* Add scalar dimension to in_zarr4.cdl to workaround NCZarr scalar bug

2022-08-21  Charlie Zender  <zender@uci.edu>

	* nco_fl_blocksize() determine extended filetype via output file name not input file ID

2022-08-19  Charlie Zender  <zender@uci.edu>

	* Add in_zarr.cdl and in_zarr4.cdl to generate more complex NCZarr test files

2022-08-17  Charlie Zender  <zender@uci.edu>

	* ncclimo add cell_methods="area: mean" attribute

	* ncclimo add coordinates="region_name" attribute

	* NCO 5.1.1-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-alpha05: Round Ray';git push
	git tag -a 5.1.1-alpha05 -m 'ncclimo rgn_avg';git push --tags

	* ncclimo: Fold-in --glb_avg into --rgn_avg regional average timeseries capabilities

2022-08-11  Charlie Zender  <zender@uci.edu>

	* ncclimo/ncremap: Add Cori build environment modules to NCO_OVERRIDE_PATH (required for Intel)

	* NCO 5.1.1-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-alpha04: Curtis';git push
	git tag -a 5.1.1-alpha04 -m 'nco_fl_chmod, ncatted, ncrename with NCZarr;ncclimo hms_avg';git push --tags

	* Verify --hms_avg is exact for unstructured EAM variables without _FillValue

2022-08-10  Charlie Zender  <zender@uci.edu>

	* ncclimo add hemispheric-mean timeseries switch --hms_avg

2022-07-18  Charlie Zender  <zender@uci.edu>

	* Fix permissions of chmod, test with complex files. Almost ready for primetime.

2022-07-15  Charlie Zender  <zender@uci.edu>

	* NCO 5.1.1-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-alpha03: Moon Sun Run';git push
	git tag -a 5.1.1-alpha03 -m 'nco_fl_[mv,rm,cp] works with NCZarr';git push --tags

	* Verify that file manipulation works for NCZarr I/O!

	* Extend nco_fl_mv(), nco_fl_rm(), and nco_fl_cp() to handle directories

	* Use and verify nco_fl_ncz2psx() in nco_fl_mv()

	* Prevent MSVC build errors by searching in volatile not const strings

	* Fix invalid pointer references

	* Draft and test nco_fl_ncz2psx()...it fails

2022-07-14  Charlie Zender  <zender@uci.edu>

	* Finish and employ nco_fl_is_nczarr()

	* Prototype nco_fl_ncztopth(), fix compile issue for NCZarr with old netCDF

	* Call nc_inq_filter_avail() only if it exists and might be successful, quiet messages

2022-07-13  Charlie Zender  <zender@uci.edu>

	* Retrofit nco_fl_blocksize() and nco_fl_mv() to handle NCZarr file:// schema storage

	* NCO 5.1.1-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-alpha02: Webb';git push
	git tag -a 5.1.1-alpha02 -m 'ncks: read/hyperslab/print NCZarr files';git push --tags

	* Add external data type NC_FORMATX_NCZARR

	* Remove "-D_BSD_SOURCE -D_POSIX_SOURCE" from gnu and icc in configure.ac

	* Treat NCZarr files with file:// scheme like DAP files so printing works

2022-07-12  Charlie Zender  <zender@uci.edu>

	* Call nco_cdc_lst_bld() only if an invoked filter was not found

	* Add stubs to let NCO examine files with NCZarr file:// schema

	* NCO 5.1.1-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.1-alpha01: Bali';git push
	git tag -a 5.1.1-alpha01 -m 'Functionally identical to 5.1.0';git push --tags

	* Increase NCO_MIN_CNK_BLOSC from 1U to 4096U to prevent some Blosc errors

	* NCO 5.1.0 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.0: Rattlesnake';git push
	git tag -a 5.1.0 -m 'all: filters, cmp_sng, CCR, nc 4.9.0; ncremap fix sub-sgs nrm, add ssgs thr';git push --tags

	* Change E3SMU_ROOT from 1.6.0 to 1.7.0 in ncremap

	* Warn about Blosc codec in docs

2022-07-11  Charlie Zender  <zender@uci.edu>

	* Tidy nco_fl_mk_lcl() in preparation for Zarr-access work

	* Flesh-out HINT for missing codec WARNING

	* Prevent carrying rcd from cdc_lst_bld into filter loop

2022-07-09  Charlie Zender  <zender@uci.edu>

	* Rewrite nc_inq_var_filter_info() stub for old (pre-4.7.4) netCDF libraries

	* Rewrite nc_inq_var_filter_ids() stub for old (pre-4.7.4) netCDF libraries

	* Simplify nco_cnv_arm_time_install() prototype to exploit new compression API

	* Return from nco_flt_def_wrp() with old (pre-4.7.4) netCDF libraries before encountering new API calls

2022-07-08  Charlie Zender  <zender@uci.edu>

	* Consider variable compressed (and thus requiring chunking) in	nco_cnk_sz_set_trv() whenever _any_ filters have been applied to it

	* Add NC_COMPACT to metadata printing

	* Add NC_EINVAL debugging to nco_def_var_chunking()

	* NCO 5.1.0-beta04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.1.0-beta04: Steerage';git push
	git tag -a 5.1.0-beta04 -m 'all: documentation, polishing, default levels, dns, blosc';git push --tags

	* Invoke known filters by generic nc_var_def_filter() when given ID as name in filter string

	* Clarify ncremap -m map-file usage in code and -G grd_sng usage in manual

2022-07-07  Charlie Zender  <zender@uci.edu>

	* Add Blosc examples to documentation

	* Pass unknown IDs through to invocation execution

	* Build cmp_sng_glb with filter ID as name when filter is unknown

	* Build nco_cdc_lst_glb using mostly nc_inq_filter_avail()

	* Tidy Blosc support

2022-07-06  Charlie Zender  <zender@uci.edu>

	* Realize that Blosc fails on benchmark EAM file, succeeds on simpler files, unsure why

	* Default Blosc to LZ, decode Blosc subcompressors in _Filter metadata

	* Reformulate implementation of default levels to include BLOSC filters

	* Rework listing of BLOSC filters

	* BLOSC filters work! Allow BLOSC Shuffle to pre-empt HDF5 Shuffle

2022-07-04  Charlie Zender  <zender@uci.edu>

	* Bump next version to 5.1.0 instead of 5.0.8

2022-07-03  Charlie Zender  <zender@uci.edu>

	* Merge CR figures with text more naturally

	* NCO 5.0.8-beta03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.8-beta03: Backslapper';git push
	git tag -a 5.0.8-beta03 -m 'all: documentation, polishing, default levels, dns';git push --tags

	* Add quantization/compression CR figures to documentation and to distribution

	* Add nco_flt_dns codec to do DEFLATE No Shuffle without recompilation

	* Incorporate feedback from E. Hartnett into documentation

2022-07-01  Charlie Zender  <zender@uci.edu>

	* Build/verify NCO with Intel on Cori

	* Build/verify NCO with GNU on Perlmutter

	* Merge three MSVC changes suggested by Pedro Vicente

2022-06-30  Charlie Zender  <zender@uci.edu>

	* Update homepage with recent presentations/pubs

	* Verify runtime executables (except ncap2) work on NERSC perlmutter

	* Prepare 5.0.8 release documentation

2022-06-29  Charlie Zender  <zender@uci.edu>

	* Document filter features and compression best practices

	* Add PPC default synonyms dfl, global, glb

	* Change name/acronym from BitGroomRound (RND) to BitGroomBitRound (BGB)

	* Add default levels for BitGroom, BitRound, and GranularBR

	* Re-order enum list to accord better with filter IDs

2022-06-28  Charlie Zender  <zender@uci.edu>

	* Add default level for Bzip2

	* Insert default in place of omitted levels for DEFLATE, Shuffle, Zstandard, regardless of filter location

	* Add debug message clarifying where/why coordinate-like variables not lossily compressed

	* Prepend _Filter help string with "Codec(s): "

	* Recognize codec names spelled with optional spaces and hyphens

	* Add --cmp_sng to usage, man pages

	* NCO 5.0.8-beta02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.8-beta02: Iron Champs';git push
	git tag -a 5.0.8-beta02 -m 'all: xcl cf crd_lk_var from lsy flt';git push --tags

2022-06-27  Charlie Zender  <zender@uci.edu>

	* Print filter names in CDL comments for _Filter when dbg >= 2

	* Remove DEFLATE, Shuffle, and Fletcher32 from Filter string. Always print them separately.

	* Prevent calling BLOSC filter on variables of storage type NC_CONTIGUOUS

	* Write nco_is_crd_var() and preserve full precision (prevent lossy filters) on bonafide 1D coordinates

	* Preserve full precision (prevent lossy filters) on CF bounds, climatology, coordinates, and grid_mapping variables

2022-06-26  Charlie Zender  <zender@uci.edu>

	* Reset rcd to NC_NOERR after non-fatal filter errors

	* Verify netCDF library quantization yields same CRs as NCO library quantization

	* Prevent attempted quantization of non-floating-point variables (to avoid bad return codes from netCDF)

2022-06-24  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.8-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.8-beta01: Rothaniel';git push
	git tag -a 5.0.8-beta01 -m 'Filterama';git push --tags

	* Prepare release notes

	* Clip erroneous trailing commas from inferred filter strings for filters with zero parameters (like Fletcher32)

	* Re-protect nco_flt_def_wrp() call within NETCDF4 ifdefs in nco_grp_utl.c

	* NCO 5.0.8-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.8-alpha06: Kai Elua';git push
	git tag -a 5.0.8-alpha06 -m 'improve nc_inq_filter_avail() stub, fix nco_flt_nm2enmid(), nco_flt_def_wrp(), nco_flt_def_out() bugs';git push --tags

	* netCDF 4.9.0 only lets quantize succeed with NETCDF4 files (possible netCDF bug)

	* netCDF 4.9.0 Zstandard and Bzip2 codecs fail when duplicate codecs with same API from CCR are also available

	* NUL-terminate flt_sng before strcat()

2022-06-23  Charlie Zender  <zender@uci.edu>

	* Ensure nco_flt_nm2enmid() always returns ID if requested

	* Ensure nco_flt_def_wrp() does not rely on command-line dfl_lvl being explicitly passed

	* Merge compression infrastructure into ncbo, ncecat, ncflint, ncpdq, ncra, ncwa

	* Move nc_inq_filter_avail() and HDF5 tokens from nco_flt.[ch] to nco_netcdf.[ch]

	* Move nc_inq_filter_avail() stub nco_flt.[ch] since it involves so many HDF5 tokens

	* Improve nc_inq_filter_avail() stub to handle DEFLATE, SHUFFLE, FLETCHER32

2022-06-21  Charlie Zender  <zender@uci.edu>

	* Fix NC_LIB_VER to be NC_LIB_VERSION

	* NCO 5.0.8-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.8-alpha05: Kahakai';git push
	git tag -a 5.0.8-alpha05 -m 'all: add hdn.cdl xmp; ncks Fletcher32.';git push --tags

	* Add extra test cases to hdn.cdl

	* For netCDF < 474 copy input deflate settings and skip nco_flt_def_out()

	* Print Fletcher32 keyword without printing _Filter as well

	* Allow nco_prn.c awareness of filter header

2022-06-19  Charlie Zender  <zender@uci.edu>

	* Never search NULL cmp_sng for "none"

	* Remove OpenMP default(none) on Clang: not helpful, breaks frazil

2022-06-17  Charlie Zender  <zender@uci.edu>

	* Provide nc_def_var_bzip() stub when necessary

	* NCO 5.0.8-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.8-alpha04: June Strawberry Moon';git push
	git tag -a 5.0.8-alpha04 -m 'all: support decompression, netCDF 4.9.0 compat; ncremap, ncclimo: cmp_sng; ncks fix sub-sgs rgr; ';git push --tags

	* Refactor BLOSC_ token definition

	* Tweak CMake searches for netcdf_filter.h NC_HAVE_RENAME_GRP

	* Algorithmatize decision to print DEFLATE, Shuffle separately or use _Filter

	* Add nco_inq_filter_avail_flg()

	* Adopt NC_HAS_QUANTIZE and NC_HAS_ZSTD tokens from netcdf_meta.h

	* Update to newer NC_ pre-processor tokens like NC_HAVE_NEW_CHUNKING_API, NC_HAVE_RENAME_GRP

	* Update release return codes to netCDF 4.9.2

	* Work on compatibility with netCDF 4.9.0, released 20220610

2022-06-16  Charlie Zender  <zender@uci.edu>

	* WTF with OpenMP and sub_sgs_frc_out_thr? Add remaining BLOSC sub-compressors.

	* Solution is to threshold normalization by sub_sgs_frc_out based on input sgs_frc precision

	* Rounding errors due to single precision landfrac CLM/ELM caused 2 bad temperatures in 180x360 regridding of vegetated-only gridcells

2022-06-15  Charlie Zender  <zender@uci.edu>

	* Fix normalization of multi-level sub-SGS variables (to be just like single-level variables)
	Expected this to completely solve vexing bug. Instead, it allowed regridding to complete,
	though temperatures near 0.0 indicate a	different bug remains.

	* Store output decompressed when specification includes "none" or synonyms

2022-06-14  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.8-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.8-alpha03: Sievierodonetsk';git push
	git tag -a 5.0.8-alpha03 -m 'Improve support for unknown HDF5 filter IDs, Shuffle, consistency with ncdump';git push --tags

	* Invoking Shuffle filter as shf,1 or 2,1 both seem to work

	* Refactor to allow invocation with unknown filter ID

2022-06-13  Charlie Zender  <zender@uci.edu>

	* Add --cmp to ncclimo

	* Standardize invocation as --cmp, --cmp_sng instead of --cdc

	* Add nco_inq_blk_sz() and BLOSC Snappy invocation option

2022-06-10  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.8-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.8-alpha02: adopt new filter handlers';git push
	git tag -a 5.0.8-alpha02 -m 'Vienna';git push --tags

	* Name-swap so nco_flt_def_out/wrp() is nco_flt_old_out/wrp(), nco_tst_def_out/wrp() is nco_flt_def_out/wrp()

	* Adopt nco_tst_def_out() in regridder and map routines

	* Refactor to eliminate dfl_lvl from nco_tst_def_wrp()

	* Make nco_cmp_sng_glb global variable with get()/set() accessor functions

	* Refactor so nco_tst_def_out() receives filter flag instead of superfluous dfl_lvl

	* nco_tst_def_out() uses nco_cmp_sng_glb if cmp_sng not passed

2022-06-09  Charlie Zender  <zender@uci.edu>

	* Fix ncap2 compression segfault by not free()'ing cmp_sng in main() (unsure why)

	* Do not print _DeflateLevel or _Shuffle if a non-DEFLATE filter was applied (print _Filter instead)

	* Draft filter handler works on old-style DEFLATE specification (e.g., -L 1)

2022-06-08  Charlie Zender  <zender@uci.edu>

	* Draft filter handler works on multiple variables

	* Filter handler applies CCR filters as requested, and copies filters used in input files on one variable

	* Completely re-write filter handling to copy generic filters from input files

2022-05-27  Charlie Zender  <zender@uci.edu>

	* Allow use of netCDF-defined APIs for BitGroom, GranularBR, BitRound

2022-05-26  Charlie Zender  <zender@uci.edu>

	* Allow use of netCDF-defined APIs for BZIP2, ZSTANDARD, BLOSC

	* Add netCDF 4.9.0 BLOSC filters to table

	* Implement nco_inq_filter_avail() and stubs for pre-4.9.0

	* Print info for multiple filters per variable separated by pipes

	* Remove extra quotes form multi-word format names in _Format attribute

2022-05-25  Charlie Zender  <zender@uci.edu>

	* Fix so CCR codecs work, including codec chains

2022-05-24  Charlie Zender  <zender@uci.edu>

	* Quiet hocus-pocus INFO message

	* Use nco_flt_glb_lss/lsl_alg/lvl values with CCR codecs

2022-05-23  Charlie Zender  <zender@uci.edu>

	* Add nco_flt_glb_lss/lsl_alg/lvl_get/set() helper functions

2022-05-22  Charlie Zender  <zender@uci.edu>

	* Update to MacOS 12.4

2022-05-18  Charlie Zender  <zender@uci.edu>

	* Compile/link (except ncap2) on perlmutter, runtime fails due to missing librca.so*

	* ncclimo/ncremap add draft NERSC Perlmutter settings

2022-05-04  Charlie Zender  <zender@uci.edu>

	* Complete refactoring to test more codecs with nco_tst_def_*() functions

	* Adopt nco_flt_def_*() in nco_var_utl.c

2022-05-03  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.8-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.8-alpha01: Functionally identical to 5.0.7';git push
	git tag -a 5.0.8-alpha01 -m 'QuickBlade';git push --tags

	* Adopt nco_flt_def_*() in nco_map.c, nco_cnv_arm.c, ncap_utl.c, nco_rgr.c, nco_s1d.c

2022-05-02  Charlie Zender  <zender@uci.edu>

	* Adopt nco_flt_def_wrp() in nco_grp_utl.c:nco_cpy_var_dfn_trv(),

	* NCO 5.0.7 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.7: all: bit_xpl_dbl=52, tkn rdf wrn; ncap2: where() mss_val; ncclimo: -P fix; ncremap: add_fll fix, sub-SGS nrm, sgs_nm_gnr wrn';git push
	git tag -a 5.0.7 -m 'Mariupol';git push --tags

	* Update allowed netCDF versions to include 4.9.0, 4.9.1

	* Add nco_flt_def() stub

2022-04-29  Charlie Zender  <zender@uci.edu>

	* Add stub global variables for separate lossless, lossy codec specifications

	* Tidy nco_mta.[ch]

	* NCO 5.0.7-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.7-alpha05: all: fix tkn rdf wrn, ncap2: where() mss_val; ncclimo: rgr#1; pynco prs';git push
	git tag -a 5.0.7-alpha05 -m 'Easter';git push --tags

	* Merge multiple PyNCO PRs from Luke Davis of CSU

2022-04-22  Charlie Zender  <zender@uci.edu>

	* Stubs to request quantization method by string not enum

	* Fix ncclimo regression test #1 to use -P cam so correct files found

	* Henry fixed ncap2 where() to allow mss_val=NC_FILL_INT

2022-04-18  Charlie Zender  <zender@uci.edu>

	* Fix duplicate definition warnings for RINTF, NEARBYINTF, ROUNDF, TRUNCF

	* Check that omitting #define NEED_XXXF in nco_rth_flt.[ch] builds everywhere

2022-04-17  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.7-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.7-alpha04: sub-sgs normalization for landunit-specific fields';git push
	git tag -a 5.0.7-alpha04 -m 'Poke Kai';git push --tags

	* nco_rgr_wgt() allows for missing values in fields with valid SGS area
	Previously, assumed SGS fields to be valid wherever sgs_frc > 0.0
	That low-biased fields like TSOI which are sub-SGS normalized to specific landunits
	Now sub-SGS values are extrapolated, incorrect though not crazy-bad like before
	No more temperatures near 0.0 for landunit-specific fields in ELM/CLM

2022-04-13  Charlie Zender  <zender@uci.edu>

	* ncremap fix --sgs_frc and prc_typ logic, introduce prc_sgs, fix sgs_nm_gnr logic

2022-04-03  Charlie Zender  <zender@uci.edu>

	* nco_bld_rec_dmn() call nco_lmt_init() on new limits

2022-03-25  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.7-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.7-alpha03: ncremap -P bugfix, SGS spot-check wrn';git push
	git tag -a 5.0.7-alpha03 -m 'Afterlife';git push --tags

	* Change ncremap test to use NCO weights so test succeeds when ERWG not available

	* Add synonyms preserve=gridcell, gridcell_mean, natural_values

2022-03-24  Charlie Zender  <zender@uci.edu>

	* ncremap warn when SGS not invoked despite presence of indicator variables

	* ncremap/ncclimo always enclose -n/-z shell variables in double quotes

	* Discover 5.0.6 (or earlier?) bug preventing ncremap from parsing -P prc_typ options
	However, ncclimo --sgs_frc=XXX options were passed and parsed correctly
	And ncclimo -P prc_typ was used correctly (and necessarily) for	name generation
	Thus commands of form ncclimo -P mdl_nm --sgs_frc=var_nm worked correctly

2022-03-20  Charlie Zender  <zender@uci.edu>

	* Build on updated Cori OS with netCDF 4.8.1.1

2022-02-25  Charlie Zender  <zender@uci.edu>

	* Add mss_val_dfl capability to nco_prn_var_val_cmt()

2022-02-24  Charlie Zender  <zender@uci.edu>

        * NCO 5.0.7-alpha02 release procedure:
        cd ~/nco;git commit -a -m 'Version 5.0.7-alpha02: all: bit_xpl_dbl=52 fix, config.sub/guess update';git push
        git tag -a 5.0.7-alpha02 -m 'Jack Ryan';git push --tags

	* First successful build/check on Apple silicon!

	* Update config.guess from timestamp='2019-07-24' to '2022-01-09' for arm64-apple M1 Max recognition

	* Update config.sub from timestamp='2019-07-24' to '2022-01-03' for arm64-apple M1 Max recognition

2022-02-23  Charlie Zender  <zender@uci.edu>

	* Fix compiler warnings for clang 13.0

2022-02-19  Charlie Zender  <zender@uci.edu>

	* No longer add additional bit to prc_bnr_xpl_rqr for BitGroom NC_DOUBLE
	Restores BG behavior to original Zen16, netcdf-c, CCR implementations

2022-02-18  Charlie Zender  <zender@uci.edu>

	* in.cdl add all tests in CCR tst_bitgroom.c and netcdf-c/tst_quantize.c

	* Set bit_xpl_nbr_sgn_dbl=52 not 53 since limits.h/climit DBL_MANT_DIG=53 (which includes implicit bit)

2022-02-07  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.7-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.7-alpha01: add_fll val fix';git push
	git tag -a 5.0.7-alpha01 -m 'Great Horned Owl';git push --tags

	* ncremap/nco_rgr.c: Use mss_val_cmp_dbl not NC_FILL_DOUBLE with --add_fll

2022-02-03  Charlie Zender  <zender@uci.edu>

	* tpt_brt.nco: Remove coordinates attribute in tpt_brt.nco so Panoply plots

2022-02-01  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.6 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.6: Alanis';git push
	git tag -a 5.0.6 -m 'ncclimo/ncremap E3SMU Conda PATH; ncclimo bs_nm fl_in[0] fix; ncremap sgs_frc_usr fix;';git push --tags

	* ncremap/ncclimo add HINT for when NCO binaries not found

	* ncclimo eliminate warnings when caseid and fml_nm not provided in timeseries mode

2022-01-31  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.6-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.6-alpha02: Chiang Rai';git push
	git tag -a 5.0.6-alpha02 -m 'ncclimo/ncremap add Conda PATH on login nodes when in E3SMU nvr; ncclimo basename fl_in[0] fix; ncremap sgs_frc_usr fix;';git push --tags

	* ncremap/ncclimo add Conda PATH when in E3SMU env to find NCO binaries on login nodes

2022-01-30  Charlie Zender  <zender@uci.edu>

	* ncclimo prevent basename() from operating on undefined fl_in[0] in inp_aut mode

2022-01-29  Charlie Zender  <zender@uci.edu>

	* ncremap keep user-specified and/or ncclimo-specified sgs_frc value, if any, intact

2022-01-25  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.6-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.6-alpha01: Blue Rondo a la Turk';git push
	git tag -a 5.0.6-alpha01 -m 'cxl -lm rqr. Functionally identical to 5.0.5';git push --tags

	* configure.ac remove -lm check for sin() to (try to) prevent search for -lm

	* configure.ac remove g95 check

2022-01-24  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.5 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.5: Heather';git push
	git tag -a 5.0.5 -m 'all: btr,bgr_btr,gbg=gbr; ncatted: fix modify mode when fll_val dne, prepend mode; ncclimo mpas inp_aut/std/psn, ppn_opt';git push --tags

	* Unsuccessfully searched for bug triggered by Spack NCO on Chrysalis compute nodes

2022-01-12  Charlie Zender  <zender@uci.edu>

	* ncremap change E3SMU_ROOT from 1.5.0 to 1.6.0

2022-01-11  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.5-beta03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.5-beta03: Bulleit';git push
	git tag -a 5.0.5-beta03 -m 'all: btr,bgr_btr,gbg=gbr; ncatted: fix modify mode when fll_val dne, prepend mode; ncclimo mpas inp_aut/std/psn, ppn_opt';git push --tags

	* ncclimo simplify and invoke ppn_opt block for all file input modes

2022-01-09  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.5-beta02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.5-beta02: Yellowstone';git push
	git tag -a 5.0.5-beta02 -m 'all: btr,bgr_btr,gbg=gbr; ncatted: fix modify mode when fll_val dne, prepend mode; ncclimo mpas inp_aut/std/psn, ppn_opt';git push --tags

	* nco.texi: Document prepend mode

2022-01-07  Charlie Zender  <zender@uci.edu>

	* ncatted: Add prepend mode

	* ncatted: Prevent modify mode netCDF4 _FillValue from trying to rename non-existing attribute

2022-01-04  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.5-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.5-beta01: Paddle to Beachcombers';git push
	git tag -a 5.0.5-beta01 -m 'btr, bgr_btr, gbg=gbr, ncclimo mpas inp_aut/std/psn, ppn_opt';git push --tags

	* Change external name of Granular BitGroom (GBG) to Granular BitRound (GBR).

	* nco_flt.h remove type qualifiers on return types to fix Intel	compiler warnings

2022-01-01  Charlie Zender  <zender@uci.edu>

	* nco.texi document BitRound/HalfShave changes

	* nco.texi clarify NaNf documentation

2021-12-31  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.5-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.5-alpha01: NYE';git push
	git tag -a 5.0.5-alpha01 -m 'all: separate btr from bgr_btr; ncclimo mpas inp_aut fix, ppn_opt for inp_std,inp_psn; otherwise functionally identical to 5.0.4';git push --tags

	* nco_ppc_bitmask() add pbxr/bxnz diagnostic

	* Allow only one explicit bit to be preserved (useful for NSB algorithms like BitRound)

	* nco_ppc_bitmask() fix mask initialization, insert missing break to fix quantization

	* ncclimo always use ppn_opt for input files provided via inp_std, inp_psn

	* ncremap add prc_typ=mpaso|mpasocean as valid synonyms for back-compatibility

2021-12-16  Charlie Zender  <zender@uci.edu>

	* Refactor nco_ppc_bitmask() to reduce redundant code, facilitate specifying NSD or NSB independently of BGR

2021-12-15  Charlie Zender  <zender@uci.edu>

	* Refactor baa_btr to be BitRound based on NSB and baa_bgr_btr to be BitRound with keepbits determined by BitGroom algorithm

	* nco_ppc.c nco_ppc_bitmask() fix msk_rst64 unsigned long long (was just long)

	* nco_ppc.c nco_ppc_around() fix int64/uint64 cast to be long long (was just long)

2021-12-08  Charlie Zender  <zender@uci.edu>

	* ncclimo/ncremap fix INFO message on MPI scheduling strategy

2021-12-07  Charlie Zender  <zender@uci.edu>

	* ncclimo ensure inp_std works for MPAS climos

	* ncclimo use inp_aut when nm_typ == mpas and clm_md == mth (as MPAS Analysis expects)

	* ncclimo clarify input filename construction/read method

2021-12-04  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.4 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.4: Potato Eaters';git push
	git tag -a 5.0.4 -m 'ncks -L 0 fix; ncclimo mth stdin clm, --split API, wnd_md; ncremap idw, mpas nfr, area_dgn, --pdq API, ERWG bilin/idavg; ncwa avg cmp fix';git push --tags

2021-12-02  Charlie Zender  <zender@uci.edu>

	* Xylar verifies beta01 builds with Conda

2021-12-01  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.4-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.4-beta01: Sinner';git push
	git tag -a 5.0.4-beta01 -m 'ncks -L 0 fix; ncclimo mth stdin clm, --split API, wnd_md; ncremap idw, mpas nfr, area_dgn, --pdq API, ERWG bilin/idavg; ncwa avg cmp fix';git push --tags

	* ncremap: Document --split option

2021-11-30  Charlie Zender  <zender@uci.edu>

	* ncremap: Document --area_dgn feature

	* ncremap: Document --permute API change

	* ncclimo: warn and hint when job_nbr > job_nbr_wrn = 150

2021-11-29  Charlie Zender  <zender@uci.edu>

	* ncclimo: add, implement, and successfully test --split flag

2021-11-19  Charlie Zender  <zender@uci.edu>

	* ncremap change API from --permute='-a time,lat,lon' to --permute=time,lat,lon

2021-11-18  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.4-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.4-alpha04: Ted Lasso';git push
	git tag -a 5.0.4-alpha04 -m 'all: put_att nc-safe nm;ncclimo wnt_md, stdin; ncremap bilin esmf_typ idavg';git push --tags

	* ncremap use nearestidavg extrapolation with bilinear algorithm by default
	Significantly improves frac_b avg, min, max, mbs, rms, sdn compared to esmf_typ=none

	* ncclimo implement stdin, positional, and globbing input methods for monthly climos

	* nco_put_att() re-try with safe name after NC_EBADNAME errors

	* nco_att_cpy() fix debug message order of file/attribute type string

2021-11-09  Charlie Zender  <zender@uci.edu>

	* ncclimo: change preferred name from december_mode to winter_mode or --wnt_md

2021-11-05  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.4-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.4-alpha03: Dizz\'s As Is';git push
	git tag -a 5.0.4-alpha03 -m 'ncclimo: mth stdin clm; ncremap: mpas nfr to_scrip(), area_dgn, nfr x,y, mbtempest loop;';git push --tags

	* nco_xtr_mk(): Quiet WARNING and HINT when regular expression does not match any variable/group

2021-11-04  Charlie Zender  <zender@uci.edu>

	* ncclimo: compute climos from (instead of split) monthly files provided via stdin/position/glob if clm_md=mth is explicitly specified

2021-11-03  Charlie Zender  <zender@uci.edu>

	* ncremap: use mbpart --recompute_rcb_box for Zoltan RCB algorithm per suggestion of Vijay/Iulian on Slack

	* ncremap: add -p 2 option to mbpart for source grids per suggestion of Iulian on Slack

	* ncremap: add imbalance option -i 1.002 to Zoltan recursive bi-section RCB partitions

2021-11-02  Charlie Zender  <zender@uci.edu>

	* nco_grd_nfr() always diagnose area from MPAS files

	* ncremap: duplicate mbtempest source-grid preprocessing in file loop

	* ncremap: isolate mbtempest destination-grid preprocessing from source grid

2021-10-31  Charlie Zender  <zender@uci.edu>

	* ncremap: add (temporary) informative error exit when mbtempest invoked with inferred source grid

	* nco_grd_nfr() try x,y for lon,lat coordinate names to work with Rignot (2013) ice melt dataset

	* nco_grd_nfr() change area units to sr when flg_dgn_area is true

	* ncremap add --area_dgn flag to diagnose (rather than copy) grid_area in inferred grids

	* nco_grd_nfr() replace inelegant homebrew MPAS-inferral algorithm with MPAS to_scrip() algorithm

2021-10-29  Charlie Zender  <zender@uci.edu>

	* nco_grd_nfr() print WARNING when area units are not steradians

	* NCO 5.0.4-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.4-alpha02: Rodrigo Amarante';git push
	git tag -a 5.0.4-alpha02 -m 'all regularize rgr msgs;ncks -L 0 fix; ncremap lon-lat, idw;ncwa avg cmp fix';git push --tags

	* NCO_rgr.pl fix (via a workaround) ncks issue #108 Unchunk variable with Shuffle flag set

	* NCO_rgr.pl regularize ERROR messages from ncks regression tests

	* nco_cpy_var_dfn_trv() call nco_def_var_deflate() when dmn_nbr_out (not dmn_nbr_in) > 0 (fixes ncwa issue)

	* Add Granular BitGrom = GBG to NCO filter list

	* Call nc_def_var_deflate() at most once per variable due to new netCDF behavior

	* ncremap fix alg_typ for nco_idw

	* ncremap nco_rgr_wgt() remove assumption that input horizontal dimensions for nco_rgr_grd_2D_to_1D are in lat-lon order (now can be lon-lat)

2021-10-28  Charlie Zender  <zender@uci.edu>

	* ncremap nco_grd_nfr() fix units attribute for output grid_center_lon variable

2021-10-21  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.4-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.4-alpha01: Courgette';git push
	git tag -a 5.0.4-alpha01 -m 'idw not dwe, ninja, Functionally identical to 5.0.3';git push --tags

	* #include <fcntl.h> for MacOS so ninja build-engine finds creat()

2021-10-20  Charlie Zender  <zender@uci.edu>

	* Use 0ULL in PPC for double precision

2021-10-19  Charlie Zender  <zender@uci.edu>

	* Change default key and documentation from dwe to idw

2021-10-13  Charlie Zender  <zender@uci.edu>

	* Add 'idw' (inverse-distance-weighted) synonym to NCO dwe weight algorithm

2021-10-06  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.3 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.3: Daikokuya';git push
	git tag -a 5.0.3 -m 'all: ppc dgr gbg, dsd att_nm; ncremap mpi_nbr_usr, E3SMU=SYSTEM, alg_typ=tempest fixes';git push --tags

	* Testing by Xylar confirms this condifies, relabel 5.0.3-beta01 as 5.0.3 and release

	* NCO 5.0.3-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.3-beta01: Daikokuya';git push
	git tag -a 5.0.3-beta01 -m 'all: ppc dgr gbg, dsd att_nm; ncremap mpi_nbr_usr, E3SMU=SYSTEM, alg_typ=tempest fixes';git push --tags

	* Update PPQ documentation

2021-10-03  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.3-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.3-alpha02: Infrastructure';git push
	git tag -a 5.0.3-alpha02 -m 'ppc dgr gbg, dsd att_nm';git push --tags

	* PPQ: Change default bit-adjustment-algorithm to GBG

	* PPQ: Change regression tests to use updated NSD attribute names

	* PPQ: Write quantize algorithm-specific attribute names like QuantizeBitGroomNumberOfSignificantDigits

	* PPQ: Implement double-precision GBG

	* PPQ: Tidy GBG. CR(GBG) ~ 9% better than DR. CR(Granular DR) ~3% better than GBG.

	* PPQ: DR and GBG pass Zen16 quantization checks, GBG significantly more accurate for NSD=1, otherwise comparable

	* PPQ: Harden quantization guarranty checks, GBG CR ~ DR CR

2021-10-02  Charlie Zender  <zender@uci.edu>

	* PPQ: Use BFB identical constants as DCG19 and code in NCO implementation

	* PPQ: Implement mnt_log10_tbl_prx in full 15-digit double precision for GBG

2021-10-01  Charlie Zender  <zender@uci.edu>

	* PPQ: Convert GBG from digit-based to bit-based, demonstrate viability

2021-09-30  Charlie Zender  <zender@uci.edu>

	* PPQ: Draft GBG from DR granularity, BG treatment of mss_val & 0, BR hshv

2021-09-28  Charlie Zender  <zender@uci.edu>

	* PPQ: change Juan's baa_gbg to baa_brt (Brute Force) and baa_bg2 to baa_gbg (Granular Bit Groom)

	* PPQ: fix <float.h> and promote mnt_log10_tbl to double for MSVC

2021-09-27  Charlie Zender  <zender@uci.edu>

	* PPQ: implement draft Digit Rounding procedure using DCG19 algorithm

	* NCO 5.0.3-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.3-alpha01: General Sherman';git push
	git tag -a 5.0.3-alpha01 -m 'ncremap mpi_nbr_usr, E3SMU=SYSTEM, alg_typ=tempest fixes, otherwise functionally identical to 5.0.2';git push --tags

2021-09-26  Charlie Zender  <zender@uci.edu>

	* ncremap add conda create environment hint for MOAB

	* ncremap might add 2&>1 to --devnull to quiet mbconvert output

	* ncremap fix mbconvert options for alg_typ='tempest'

	* ncremap fix false-positive test result due to unquoted mpi_nbr_usr

2021-09-25  Charlie Zender  <zender@uci.edu>

	* ncremap only replace TR with mbtempest if mpi_nbr is set, not	when E3SMU=SYSYEM

2021-09-24  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.2 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.2: moab, mem_mb=0, mss_val_cmp_dbl rgr/ntp, udu rcd, .h5m cnv/prt, mpi_nbr, nsx_alg, var_lst rx, ppq refactor, intel omp';git push
	git tag -a 5.0.2 -m 'Leptoukh';git push --tags

2021-09-23  Charlie Zender  <zender@uci.edu>

	* Fix ncoGrammer.g reference in Makefile.old

	* NCO 5.0.2-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.2-beta01: Zyrtec';git push
	git tag -a 5.0.2-beta01 -m 'fix wgt_opt, ncoGrammar.g, MOAB doc';git push --tags

	* ncremap document unsupported MOAB algorithms

	* ncremap print info messages when selected output type not available for map-file

	* ncremap remove excess MBT debugging information

	* Update nco.texi and documentation for MOAB

2021-09-23  henry Butowsky  <henryb@hush.com>

	* Rename ncoGrammer->ncoGrammar downstream mods in src/nco++, bld, doc

2021-09-22  Charlie Zender  <zender@uci.edu>

	* Fix bad wgt_opt for MOAB when fl_fmt invoked

2021-09-19  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.2-alpha08 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.2-alpha08: EdCo';git push
	git tag -a 5.0.2-alpha08 -m 'ncremap: no --mbt_flg, local_mean, global_integral';git push --tags

	* ncremap add synonyms 'local_mean' and 'global_integral'

2021-09-18  Charlie Zender  <zender@uci.edu>

	* Refactor grid converters to always use mbconvert -B

	* ncremap add ability to convert SCRIP grids to Exodus with ConvertSCRIPToExodus

	* Deprecate --mbt_flg

	* Specifying a TR algorithm and explicitly setting mpi_nbr implies MOAB

2021-09-16  Charlie Zender  <zender@uci.edu>

	* ncremap update help note on installing other regridders

	* NCO 5.0.2-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.2-alpha07: Swabby';git push
	git tag -a 5.0.2-alpha07 -m 'ncremap nsx_alg advfront, mpi_pfx, mpi_nbr%prt_nbr;';git push --tags

2021-09-15  Charlie Zender  <zender@uci.edu>

	* ncremap ensure partition number is a multiple of mpi_nbr

	* ncremap utilize mpi_pfx if user explicitly sets mpi_nbr or E3SMU MPI detected

	* ncremap increase default mpi_nbr from 1 to 8

2021-09-14  Charlie Zender  <zender@uci.edu>

	* ncremap add intersection algorithm option --nsx_alg for mbtempest

	* configure.ac tinkering/testing with Antlr, prior to major rewrite

2021-09-09  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.2-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.2-alpha06: Foo Fighters';git push
	git tag -a 5.0.2-alpha06 -m 'ncclimo: tpd nfr fix; ncclimo/ncremap: mem_mb=0, srun not salloc; ncremap: rgr/ntp	mss_val_cmp_dbl, has_mss_val if used, ncra: udu rcd;';git push --tags

	* Latest snapshot works on LANL ISMIP datasets

	* New missing value treatment part III: Define has_mss_val only when missing values, whether explicit or implicit, actually appear in input variable data

	* New missing value treatment part II: Compare and assign to mss_val_cmp_dbl for floats & ints

	* ncremap nco_rgr_wgt() new missing value treatment part I: BFB	with old treatment

2021-09-08  Charlie Zender  <zender@uci.edu>

	* ncremap nco_ntp_vrt() use NC_FILL_FLOAT/DOUBLE if _FillValue is not explicitly defined

	* ncremap nco_rgr_wgt() implement Hail Mary algorithm to allow logically 1D mapfiles to regrid logically 2D datasets

2021-09-07  Charlie Zender  <zender@uci.edu>

	* ncremap fix tolerance test that gave false negative for Gaussian grids
	Test worked for eqa and fv grids, not Gaussian grids
	Failed test was applied in nco_rgr_wgt(), nco_grd_mk(), and nco_grd_nfr()

2021-09-02  Charlie Zender  <zender@uci.edu>

	* ncclimo fix tpd_out inferral to work with single time-step input files

	* Add error diagnostics for UDUnits2 ut_read_xml() return codes

2021-09-01  Charlie Zender  <zender@uci.edu>

	* Add library/bm rcd support for upcoming netCDF versions 4.8.3, 4.8.4

	* Link to and successfully test newly released netCDF 4.8.1

	* ncclimo/ncremap update E3SMU paths to _latest and acme1 paths to /home/zender1

2021-08-31  Charlie Zender  <zender@uci.edu>

	* ncclimo change interactive compute node access from salloc to srun to avoid Compy issues

2021-08-30  Charlie Zender  <zender@uci.edu>

	* ncremap/ncclimo change mem_mb default from 20000 to 0 (indicates unlimited RAM)

2021-08-29  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.2-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.2-alpha05: HPV';git push
	git tag -a 5.0.2-alpha05 -m 'autoconf nco_c++=no; ncclimo/ncremap: /usr/bin/env bash, .h5m, p.h5m';git push --tags

	* ncremap HOSTNAME-dependent partition commands for compy, non

	* ncremap print sample map examination commands

	* ncclimo/ncremap: start scripts with #!/usr/bin/env bash instead of #!/bin/bash

	* ncremap partition .h5m to p.h5m

	* ncremap convert .g to .h5m

2021-08-27  Charlie Zender  <zender@uci.edu>

	* ncremap add stubs to convert .g to .h5m

2021-08-26  Charlie Zender  <zender@uci.edu>

	* configure.ac default --enable-nco_cxx to, remove have_valarray check, regain libnco_c++ build option

2021-08-25  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.2-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.2-alpha04: Gluten Free';git push
	git tag -a 5.0.2-alpha04 -m 'ncclimo: var_lst rx;ncks nfr west_east/south_north';git push --tags

	* nco.texi ANNOUNCE documentation for 5.0.2

2021-08-24  Charlie Zender  <zender@uci.edu>

	* nco_grd_nfr() add west_east and south_north to coordinate database

2021-08-23  Charlie Zender  <zender@uci.edu>

	* ncclimo: expand splitter var_lst if it contains a globbing character: ^$+?.*[]{}|

2021-08-18  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.2-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.2-alpha03: Goff Island';git push
	git tag -a 5.0.2-alpha03 -m 'ncclimo: dfl eam, hfs=sbs always';git push --tags

	* ncclimo: Turn-on splitter mode when clm_md=hfs and inp_glb=Yes

2021-08-15  Charlie Zender  <zender@uci.edu>

	* ncclimo: Change default model name from cam to eam

2021-08-11  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.2-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.2-alpha02: Manta Ray';git push
	git tag -a 5.0.2-alpha02 -m 'all: PPQ refactor, rgr fix Intel OpenMP';git push --tags

	* Refactor PPQ/BitGrooming routines to compare to explicit/implicit missing value in same loop

2021-07-26  Charlie Zender  <zender@uci.edu>

	* nco_rgr_wgt() add msk_out to shared OpenMP clause (Thanks to Matt Thompson of NASA)

2021-07-16  Charlie Zender  <zender@uci.edu>

	* PPC/BitGroom NC_FILL_FLOAT or NC_FILL_DOUBLE if _FillValue is not explicitly defined

	* NCO 5.0.2-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.2-alpha01: Accuss';git push
	git tag -a 5.0.2-alpha01 -m 'Functionally identical to 5.0.1, bgr mss_val_dfl';git push --tags

	* Do not PPC or BitGroom NC_FILL_FLOAT or NC_FILL_DOUBLE

2021-07-13  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.1 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.1: AshMart';git push
	git tag -a 5.0.1 -m 'ncremap mpi_nbr, mpi_pfx, ERWG vrs, E3SMU_MPI, E3SMU_ROOT';git push --tags

	* nco.texi document mpi_pfx, mpi_nbr

	* ncremap point E3SMU_ROOT to e3sm_unified_latest for generic machines and cori, 1.5.0_$hostname for anvil, chrysalis, and compy

2021-07-07  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.1-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.1-alpha02: Nomadland';git push
	git tag -a 5.0.1-alpha02 -m 'ncremap mpi_nbr, mpi_pfx, ERWG vrs';git push --tags

	* ncremap add mpi_nbr option for MPI-enabled weight generators

2021-07-05  Charlie Zender  <zender@uci.edu>

	* ncremap add default MPI prefixes when E3SMU_MPI=SYSTEM in E3SM-Unified environments

	* ncremap add mpi_pfx option for MPI-enabled weight generators

	* Avoid invoking ERWG to determine version unless actual algorithm requires ERWG

2021-07-04  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.1-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.1-alpha01: 245';git push
	git tag -a 5.0.1-alpha01 -m 'Functionally identical to 5.0.0, MACOS, omp_in_parallel()';git push --tags

	* ncrename check return value of omp_in_parallel() from old AIX	OpenMP linker hack

2021-06-21  Charlie Zender  <zender@uci.edu>

	* Change MACOSX to MACOS everywhere: Makefiles, pvmgetarch, configure.ac, ncoGrammer.g, NCO_rgr.pm, CMakeLists.txt, nco_mmr.c, nco_var_lst.h, nco_lst_utl.h

2021-06-18  Charlie Zender  <zender@uci.edu>

	* Add nco/data/zarr.cdl to experiment with ncZarr

	* NCO 5.0.0 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.0: Bend';git push
	git tag -a 5.0.0 -m 'ncks aux wrp; ncremap add_fll, E3SM-U pth, mask_a/b, MPI fix, msk_apl, msk_nm, no_prm, stdin, ttl, SSM/I';git push --tags

	* ncks eliminate debugging output

2021-06-17  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.0-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.0-beta01: Astoria';git push
	git tag -a 5.0.0-beta01 -m 'all: sls_chr win32; ncremap msk_apl, ttl';git push --tags

2021-06-16  Charlie Zender  <zender@uci.edu>

	* Document add_fll, msk_apl, no_permute, and update ANNOUNCE

2021-06-10  Charlie Zender  <zender@uci.edu>

	* Change nco_char_att_put() to use overwrite mode instead of create mode

	* Fix locations where path separator character sls_chr should be backslash for Windows

2021-06-09  Charlie Zender  <zender@uci.edu>

	* ncremap add global attribute title "Regridded version of XXX" to untitled regridded files

2021-06-08  Charlie Zender  <zender@uci.edu>

	* ncremap revert flg_rnr as shared for Cori, enable Homebrew LLVM to get OpenMP

	* ncremap cause --msk_apl to trigger --add_fll to ensure masked fields regridded with TR maps have _FillValue

2021-06-07  Charlie Zender  <zender@uci.edu>

	* ncremap add --flg_rnr to OpenMP shared clauses (patch had to be reverted for Cori)

	* ncremap --msk_apl applies msk_out (i.e., mask_b) to variables after regridding

	* nco.texi on sastrugi fix TeXInfo to come from Homebrew

2021-06-04  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.0-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.0-alpha04: Pichetti';git push
	git tag -a 5.0.0-alpha04 -m 'ncremap CDO stubs, add_fll, no_permute, msk_nm, fix map mask_a/b';git push --tags

	* ncremap --add_fll uses frac_b to initialize input fields without _FillValue to the default missing value in unmapped destination cells

	* nco_rgr_wgt() clarify renormalization INFO message

	* nco_rgr_wgt() correct buffer types/lengths used to read/write mask variable in netCDF I/O

	* nco_map_mk() allocate msk_in/out as integer not double so output mask is correct (potentially large bug for maps created with 4.9.9)

	* nco_rgr_wgt() search for, and output if requested, mask_b in maps from all weight generators

	* ncremap pass mask_out to mask_nm not mask_var so name gets used in regridded files

2021-06-02  Charlie Zender  <zender@uci.edu>

	* nco_mss_val.c add nco_mss_val_dfl_get()

	* ncks handle --add_fll request during file lay-out

	* ncremap add --add_fll flag to add _FillValue to fields with empty destination cells

	* ncremap add --no_permute flag to turn-off dimension permutation with MPAS

	* ncremap add "coordinates" attribute to area variable in inferred skeleton files

	* ncremap add CDO functionality for gencon (RLL with full grid vertice information only)

2021-05-26  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.0-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.0-alpha03: Electric Dreams';git push
	git tag -a 5.0.0-alpha03 -m 'ncks aux wrp fix; ncremap nfr SSM/I grd';git push --tags

	* nco_aux: handle branch cut rules correctly when WESN bounding	box wraps in longitude

	* nco-feedstock disable OpenMP to fix MacOS Conda regridder

	* configure.ac use *clang* instead of clang* to match compiler names

2021-05-25  Charlie Zender  <zender@uci.edu>

	* ncremap/ncclimo add hash -r HINT to mixed NCO location warning

	* configure.ac replace '-std=c99' with '-std=gnu11'

2021-05-24  Charlie Zender  <zender@uci.edu>

	* ncremap add xgrid, ygrid dimensions to support NOAA SSM/I, AMSR-E, SMMR

2021-05-21  Charlie Zender  <zender@uci.edu>

	* nco_cnv_ini() initialize all cnv members to defaults before dereferencing in nco_bld_trv_tbl()

	* in.cdl add pi1-pi7 arrays to test GBG

	* ncremap temporarily switch back to e3sm_unified_1.4.0

	* nco_ppc: Tidy GBG

2021-05-20  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.0-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.0-alpha02: Hangar24';git push
	git tag -a 5.0.0-alpha02 -m 'ncremap MPI fix, stdin fix, MBTR stubs, E3SM-U paths';git push --tags

	* ncremap change E3SM-U location to latest_e3sm_unified

2021-05-19  Charlie Zender  <zender@uci.edu>

	* nco_rgr_wgt() implement MBTR map-file type-specific checks

	* ncremap provide E3SM-U on binaries on all machines

	* ncremap check for mbconvert, ConvertSCRIPToExodus, mbpart

	* ncclimo/ncremap add mbtempest machine-specific paths for compy/chrysalis

	* ncclimo combine duplicated ncclimo mth_srt/end hfs code with default code

	* ncremap skip stdin check when -i in_fl used

2021-05-18  Charlie Zender  <zender@uci.edu>

	* ncclimo/ncremap deprecate rhea, aims4

	* ncremap fix MPI node-indexing on ncremap DOH!

2021-05-17  Charlie Zender  <zender@uci.edu>

	* ncclimo fix statement to print months beyond an integral year in splitter segment length

2021-05-16  Charlie Zender  <zender@uci.edu>

	* ncremap add stubs (prt_nbr) to configure various MOAB executables

2021-05-14  Charlie Zender  <zender@uci.edu>

	* NCO 5.0.0-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 5.0.0-alpha01: V for Victory';git push
	git tag -a 5.0.0-alpha01 -m 'Functionally identical to 4.9.9';git push --tags

	* Protect nco_map_var_min_max_ttl() from dereferencing NULL mask pointers from mbtempest

	* NCO 4.9.9 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.9: Gesundheit!';git push
	git tag -a 4.9.9 -m 'bld noyywrap, https DAP wnd; ncks chk_map msk_a/b dgn, msk no wrn min frac_a/b; ncclimo hfs mth_srt/end, nfr dpf, fix tpd; ncremap ccw_chk fix, msk fix, tr allow_no_overlap, rgr_wgt rint() int;';git push --tags

2021-05-13  Charlie Zender  <zender@uci.edu>

	* nco.texi clarify HDF4 ncgen names

	* nco-feedstock add llvm-openmp and libgomp to meta.yaml build and host sections

	* nco-feedstock add OpenMP diagnostic to run_test.[sh/bat]

	* NCO 4.9.9-beta04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.9-beta04: Gesundheit!';git push
	git tag -a 4.9.9-beta04 -m 'bld noyywrap, DAP https wnd; ncks chk_map msk_a/b dgn, msk no wrn min frac_a/b; ncclimo hfs mth_srt/end, nfr dpf, fix tpd; ncremap ccw_chk fix, msk fix, tr allow_no_overlap, rgr_wgt rint() int;';git push --tags

	* configure.ac change from autoconf-2.7.1 AC_PROG_LEX(yywrap) to 2.7.1 AC_PROG_LEX(noyywrap)

	* nco-feedstock shift to libnetcdf 4.8.0

2021-05-12  Charlie Zender  <zender@uci.edu>

	* run_test.bat remove regex test from Conda Winows pipeline

	* NCO 4.9.9-beta03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.9-beta03: Watson';git push
	git tag -a 4.9.9-beta03 -m 'https DAP wnd; ncks chk_map msk_a/b dgn, msk no wrn min frac_a/b; ncclimo hfs mth_srt/end, nfr dpf, fix tpd; ncremap ccw_chk fix, msk fix, tr allow_no_overlap, rgr_wgt rint() int;';git push --tags

	* docs: prepare 4.9.9 release docs

	* nco.texi: document dpf

	* nco.texi: distinguish tpd, tpd_in, and tpd_out

	* run_test.[sh,bat] add regex test for Conda

	* configure.ac fiddle with LEX macros to fix Linux pipeline (OSX, Windows are fine)

	* NCO 4.9.9.beta02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.9.beta02: Sherlock';git push
	git tag -a 4.9.9.beta02 -m 'https DAP wnd; ncks chk_map msk_a/b dgn, msk no wrn min frac_a/b; ncclimo hfs mth_srt/end, nfr dpf, fix tpd; ncremap ccw_chk fix, msk fix, tr allow_no_overlap, rgr_wgt rint() int;';git push --tags

	* nco.texi note more issues with HDF4 ncgen on in.cdl, hdf.cdl

	* meta.yaml use version names without hyphens (i.e., .beta02 not -beta02) to comply with conda rules

	* nco-feedstock meta.yaml switch to 4.9.9-beta01

	* index.shtml: move problems to problems_v4.2.4_2013_v4.9.9_2021.shtml

	* index.shtml: update Conda install package names, versions

2021-05-10  Charlie Zender  <zender@uci.edu>

	* Add ncks -r check for Conda

	* Add UDUnits checks for Conda

2021-05-09  Charlie Zender  <zender@uci.edu>

	* Add DAP-access checks to Conda nco-feedstock recipes/run_test.[sh/bat] for Linux, Windows

	* Fix https:// protocol DAP-access under Windows

	* NCO 4.9.9-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.9-beta01: Black in Back';git push
	git tag -a 4.9.9-beta01 -m 'ncks -M/m synonyms;ncremap mbtr stubs;';git push --tags

	* ncremap translate TR map-generation options to MBTR for all algorithms

2021-05-07  Charlie Zender  <zender@uci.edu>

	* ncremap remove gll_fl support

	* ncremap update custom paths on Cori for mbtempest

2021-05-04  Charlie Zender  <zender@uci.edu>

	* ncks add/distinguish mtd_glb/mtd_lcl metadata_global/metadata_local options

2021-04-28  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.9-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.9-alpha05: Back in Black';git push
	git tag -a 4.9.9-alpha05 -m 'ncremap tr allow_no_overlap, no wrn msk min(frac_a/b)';git push --tags

	* nco_map_chk() stop inappropriate WARNINGS for min(frac_a/b) when masks are used

	* Merge latest GBG code from Juan

2021-04-21  Charlie Zender  <zender@uci.edu>

	* ncremap add TR GenerateOverlapMesh option --allow_no_overlap for regional-to-regional grids like GrIS

2021-04-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.9-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.9-alpha04: Aliso Summit';git push
	git tag -a 4.9.9-alpha04 -m 'ncremap crv area wrn, ccw_chk fix, msk fix, chk_map msk';git push --tags

	* nco_chk_map() print full mask_a/b error diagnostics only at higher debug level

	* Tidy nco_ply_lst.c

2021-04-19  Charlie Zender  <zender@uci.edu>

	* Merge Henry's fixes that provide area for masked cells and fix borken masks

	* Tidy nco_kd.c and brethen

2021-04-17  Charlie Zender  <zender@uci.edu>

	* nco_chk_map() add mask_a/b error diagnostics

2021-04-15  Charlie Zender  <zender@uci.edu>

	* nco.texi clarify that nco_grd_nfr() converts floating point zeros to integer zero masks values

	* ncremap nco_grd_nfr() protect area <=4*pi assertion since area might be in, e.g., km2 (ELM, RACMO)

2021-04-11  Charlie Zender  <zender@uci.edu>

	* ncremap nco_ccw_chk() fix bug where quadrilateral vertex D was always overwritten by vertex A
	Since 2016 this bug divided all quadrilaterals in two, halving all inferred curvilinear grid areas?

	* ncremap nco_grd_nfr() WARNING when global grid has suspicious area

2021-04-08  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.9-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.9-alpha03: Modern Times';git push
	git tag -a 4.9.9-alpha03 -m 'nco.texi: ncvardmnlatlon; ncclimo hfs mth_srt/end; ncremap CISM glc msk, rint() integers';git push --tags

	* ncremap nco_ntp_vrt() add same rint() code as nco_rgr_wgt()

2021-04-07  Charlie Zender  <zender@uci.edu>

	* ncremap nco_rgr_wgt() always rint() regridded values before output when netCDF implicitly demotes them to integers

2021-04-06  Charlie Zender  <zender@uci.edu>

	* in.cdl change CDL type "long", now obsolete in netCDF 4.8.0, to "int" in CDL files

	* ncremap add LATIXY, LONGXY coordinates and lsmlat, lsmlon dimensions to internal database to support regridding CISM/CLM/ELM glacier masks

2021-03-31  Charlie Zender  <zender@uci.edu>

	* ncclimo implement mth_srt/end with clm_md=hfs for Yannick Peings who verifies it works

	* nco.texi add filters ncvardmnlst and ncvardmnlatlon for Jim Edwards

	* Add function name to nco_mss_val_get() WARNINGs

2021-03-30  Charlie Zender  <zender@uci.edu>

	* Regression tests look normal with netCDF 4.8.0-final, yay!

	* NCO 4.9.9-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.9-alpha02: Dented Fender';git push
	git tag -a 4.9.9-alpha02 -m 'all: workaround libnetcdf nc_inq_var_deflate() HDF4 regression; ncclimo infer dpf, fix tpd inferral';git push --tags

	* ncclimo infer dpf using second file, not first file, if present

2021-03-29  Charlie Zender  <zender@uci.edu>

	* ncclimo infer dpf when not supplied with --dpf, deprecate --dpf_dfl

	* ncclimo change print format used to infer tpd from %f to %25.15f to fix off-by-1 (or off-by-2!) errors

	* ncclimo print days-per-file (dpf) in output log to assist debugging

2021-03-27  Charlie Zender  <zender@uci.edu>

	* Workaround netCDF library 4.7.4 regression relative to version 4.3.3 where nc_inq_var_deflate() fails with ERROR code -111 on HDF4 files

2021-03-21  Charlie Zender  <zender@uci.edu>

	* Add -DHAVE_NC_SET_LOG_LEVEL to bld/Makefile for Cheyenne to fix double-define error

	* NCO 4.9.9-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.9-alpha01: Sitton Peak';git push
	git tag -a 4.9.9-alpha01 -m 'autoupdate configure.ac, acinclude.m4, aclocal.m4; ncclimo/ncremap e3sm-u 1.4.0 paths; functionally identical to 4.9.8';git push --tags

	* ncremap/ncclimo update paths to E3SM-Unified from 1.3.1.2 to 1.4.0

	* Hand-edit configure.ac to eliminate remaining autoconf warnings and obtain clean build

	* autoupdate updates configure.ac, acinclude.m4, aclocal.m4

	* NCO 4.9.8 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.8: Death Valley';git push
	git tag -a 4.9.8 -m 'ncap2: array(); ncclimo: mth_srt/end sbs, mali, xcl_var, srun, mem_mb; ncks: s1d pft mec; ncremap: tll fix sgs, s1d, fix nfr MALI, US/VS wrn, stg_grd';git push --tags

2021-03-20  Charlie Zender  <zender@uci.edu>

	* autoconf now complains about obsolete macros, will run autoupdate in 4.9.9-alpha01

	* Travis g++ builds now fail early in configure at -lnetcdf link test (Ubuntu Xenial)

	* NCO 4.9.8-beta02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.8-beta02: Death Valley';git push
	git tag -a 4.9.8-beta02 -m 'ncap2: array(); ncclimo: mth_srt/end sbs, mali, xcl_var, srun, mem_mb; ncks: s1d pft mec; ncremap: tll fix sgs, s1d, fix nfr MALI, US/VS wrn, stg_grd';git push --tags

	* configure.ac change obsolete AM_CONFIG_HEADER to AC_CONFIG_HEADERS

	* ncclimo/ncremap change megabytes of RAM per srun job in Cori SLURM in MPI mode from hardwired 20000 to (undocumented) user option with --mem_mb

	* ncremap turn-off staggered grid by default, add new --stg_grd flag to output staggered grid

2021-03-19  Charlie Zender  <zender@uci.edu>

	* ncclimo verify ncclimo MPI changes work on Cori, Compy, fxm

	* ncremap incorporate MPI changes for Cori from ncclimo

	* ncclimo/ncremap clarify MPI load scheduling messages

	* ncclimo add --gres=craynetwork:0 --mem=20000 to cmd_mpi on Cori to solve concurrent srun issue

	* Modify nc_set_log_level() stub in nco_netcdf.c to work with libnetcdf.a <= 4.6.1 and Travis CI

2021-03-11  Charlie Zender  <zender@uci.edu>

	* Provide stub for nc_set_log_level() in nco_netcdf.c

2021-03-10  Charlie Zender  <zender@uci.edu>

	* ncclimo MPI-mode define thr_nbr earlier for possible use in cmd_mpi

	* nco.texi update -P prc_typ documentation

	* ncclimo in MPI-mode do not override user-requested job_nbr in monthly climo mode anymore

2021-03-09  Charlie Zender  <zender@uci.edu>

	* nco.texi document new mth_srt/end options

2021-03-08  Charlie Zender  <zender@uci.edu>

	* ncclimo fix implementation of --xcl_var

2021-03-04  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.8-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.8-beta01: Moderna';git push
	git tag -a 4.9.8-beta01 -m 'ncremap mali nVertInterfaces, ncks fix s1d omp g++';git push --tags

	* S1D: fix OpenMP clause for g++

2021-02-26  Charlie Zender  <zender@uci.edu>

	* Pedro improves CMakeLists.txt to install nces.exe and ncrcat.exe on Windows

	* ncremap add nVertInterfaces, maxEdges to known MALI dimensions

2021-02-25  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.8-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.8-alpha04: Pernil';git push
	git tag -a 4.9.8-alpha04 -m 'ncap2: array() fix; ncclimo: mth_srt/end doc, mali; ncremap mali, mss_val';git push --tags

	* ncremap autoset mss_val=-1.0e36 for MALI

	* ncclimo/ncremap add mali as valid mdl_nm and prc_typ

	* ncap2 replace array() number generation algorithm to from iterative addition to multiplication to reduce round-off error

	* ncclimo fix empty mth_flg bug

2021-02-15  Charlie Zender  <zender@uci.edu>

	* ncclimo document --mth_[srt/end] internally, in man pages

2021-02-13  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.8-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.8-alpha03: Culloden';git push
	git tag -a 4.9.8-alpha03 -m 'ncclimo: mth_srt/end sbs; ncremap: tll fix sgs s1d, fix nfr MALI';git push --tags

	* ncclimo redo so initial segments are all multiples of 12 months

2021-02-12  Charlie Zender  <zender@uci.edu>

	* ncclimo fix mth_srt/end names, indexing, now appears to work!

2021-02-10  Charlie Zender  <zender@uci.edu>

	* ncatted better document nappend mode

2021-02-07  Charlie Zender  <zender@uci.edu>

	* ncremap add rlat, rlon to coordinate database for RACMO

2021-02-01  Charlie Zender  <zender@uci.edu>

	* ncclimo fix usage message

2021-01-28  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt: Add lengthy warning about impending doom when attempting to vertically interpolate variables named US or VS

2021-01-23  Charlie Zender  <zender@uci.edu>

	* ncclimo mth_srt/end work for monthly subsetting

2021-01-22  Charlie Zender  <zender@uci.edu>

	* ncclimo add stubs like mth_srt/mth_end for splitting on month boundaries

2021-01-21  Charlie Zender  <zender@uci.edu>

	* Add nfo_prn() definitions to ncap2, change one WARNING to INFO when dbg_lvl >= 1

2021-01-15  Charlie Zender  <zender@uci.edu>

	* Eliminate mention of GODAD on GitHub homepage

2021-01-13  Charlie Zender  <zender@uci.edu>

	* ncremap load NCL 6.5.0 instead of 6.4.0 to agree with new defaults

	* nco_grd_nfr() do not query for units attribute of non-existant area variable (fixes RRG mode for Po-Lun Ma)

2021-01-05  Charlie Zender  <zender@uci.edu>

	* nco_grd_nfr() fix MALI grid inferral by improving empty cell corner algorithm

2021-01-03  Charlie Zender  <zender@uci.edu>

	* nco_rgr_wgt() eliminate bogus tally in SGS-weighted fields without missing values

	* S1D: crd_typ_out := crd_typ_in instead of NC_DOUBLE (so ELM/CLM crds remain NC_FLOAT)

	* NCO 4.9.8-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.8-alpha02: Reef Point Shrine';git push
	git tag -a 4.9.8-alpha02 -m 's1d crop+nat pft works';git push --tags

	* S1D: Process sub-subgridcell fraction pfts1d_wtgcell with crop variables

2021-01-02  Charlie Zender  <zender@uci.edu>

	* S1D: Process pfts1d for crop variables like GPP

2021-01-01  Charlie Zender  <zender@uci.edu>

	* S1D: Write 2D coordinate grid variables to output file

	* S1D: Write 1D coordinate grid variables to output file

2020-12-31  Charlie Zender  <zender@uci.edu>

	* S1D: Write all (still unprocessed) arrays to output file

	* S1D: Put output in data mode, enable OpenMP loop

	* S1D: Allocate all variable resources within OpenMP loop

	* S1D: Determine sparse type for unpacking within OpenMP loop

	* S1D: Only define needed dimensions in output file

2020-12-29  Charlie Zender  <zender@uci.edu>

	* S1D: Define all column-packed variables in output file

	* nco_def_dim() helpful error message information

	* S1D: Define first column-packed variable in output file

2020-12-28  Charlie Zender  <zender@uci.edu>

	* S1D: Working through defining S1D variables in output file

	* NCO 4.9.8-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.8-alpha01: Alleles';git push
	git tag -a 4.9.8-alpha01 -m 'Functionally identical to 4.9.7';git push --tags

2020-12-27  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.7 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.7: Oculus';git push
	git tag -a 4.9.7 -m 'S1D progress, nvcc, Andes, Chrysalis, nco_flt_enm; ncks, ncap2 --ccr; ncremap nfr MPAS; ncclimo fix tpd bug, glb_avg wait()';git push --tags

	* BitGroom: revert quantizing two additional bits based on my tests

2020-12-23  Charlie Zender  <zender@uci.edu>

	* BitGroom: quantize two additional bits based on Juan's tests

	* S1D: Determine pft_nbr_out and clm_nbr_out based on generic tests

	* S1D: interrogate both ELM crop model history file and ELM/MALI history/restart files

2020-12-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.7-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.7-alpha03: Bona';git push
	git tag -a 4.9.7-alpha03 -m 'nco_flt_enm; ncks, ncap2 --ccr; ncclimo/ncremap Chrysalis; ncremap nfr MPAS; ncclimo fix 4.9.6 tpd bug';git push --tags

	* Fix ncclimo date/time bug: %g not %f in tpd-inferral format yields tpd=10 not tpd=8 for 3-hourly EAM data

	* Add long_name attribute to grid_dims variable

	* nco_grd_nfr() implement Fortran-based vertex indexinng, validate MPAS grid inferral

2020-12-19  Charlie Zender  <zender@uci.edu>

	* nco_grd_nfr() found error in MPAS restart for QU120_zach.nc

	* nco_grd_nfr() add logic to convey correct units (radians, m2)	for MPAS angles and area

2020-12-18  Charlie Zender  <zender@uci.edu>

	* nco_grd_nfr() add logic to retrieve MPAS bounds-related variables from restart files

	* ncap2 accept negative Zstandard compression levels

	* Merge "Add all NetCDF/HDF5 dependencies to CMAKE_REQUIRED_LIBRARIES" by Kyle Gerheiser

2020-12-17  Charlie Zender  <zender@uci.edu>

	* ncap2 now uses --ccr to invoke CCR filters on all unchanged variables!

	* ncclimo update interactive compute node procedures

	* libnco add nco_dfl_case_flt_err()

	* ncap2 support --ccr via nco_var_dfn()

	* ncclimo/ncremap add chrlogin* and compute nodes to chrysalis support

2020-12-16  Charlie Zender  <zender@uci.edu>

	* Create global variable to hold user-specified filter enum

	* Add nco_flt_sng2enm() to convert user-specified string to ID/enum

	* ncclimo clarify error message encountered when cam names are assumed and eam names are desired

	* Create nco_ccr.[ch] for CCR, filter, and codec-related code

2020-12-15  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.7-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.7-alpha02: Pork Butt';git push
	git tag -a 4.9.7-alpha02 -m 'andes, S1D infrastructure, CCR detection; ncclimo --glb_avg wait() fix';git push --tags

	* ncclimo implement wait() section for --glb_avg

	* autoconf support for CCR detection/linking

	* nco.texi document caseid meaning in high-frequency modes

2020-12-13  Charlie Zender  <zender@uci.edu>

	* Start to define horizontal grid in output file

	* Inspect variables for sparse-1D dimensions

2020-12-10  Charlie Zender  <zender@uci.edu>

	* Detect version of Nvidia nvc compiler

	* Built on Cori with Nvidia HPC compilers version 11.1

	* Rename lmt_cln to cln_typ

	* Tidy calendar routines while looking for HFC calendar bug

	* Define OPENMP_TARGET and OPENMP_HOST tokens

2020-12-09  Charlie Zender  <zender@uci.edu>

	* S1D stubs determine file, IDs, and shape of input/output horizontal grid

2020-12-08  Charlie Zender  <zender@uci.edu>

	* Add Andes configuration to ncremap ncclimo, build on andes.olcf.ornl.gov

2020-12-01  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.7-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.7-alpha01: Late to School';git push
	git tag -a 4.9.7-alpha01 -m 'Functionally identical to 4.9.6';git push --tags

2020-11-30  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.6 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.6: Windsor';git push
	git tag -a 4.9.6 -m 'netCDF-4.8.0 compatible; ncclimo mdl_nm=MOSART, var_xtr, cmem nodes, prc_typ; ncremap fix mpi nd_fl bug, msk_in/msk_out fix, nfr n2s rll, UDUNITS2_XML_FILE hints; ncra -N';git push --tags

	* Change rgr structure/prototypes to support fl_hrz as horizontal template file for S1D

2020-11-29  Charlie Zender  <zender@uci.edu>

	* Add skeleton code to nco_s1d.[ch] for gathering dimension, coordinate information

2020-11-28  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.6-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.6-alpha05: Iliza';git push
	git tag -a 4.9.6-alpha05 -m 'ncclimo mdl_nm=MOSART, tpd %g, var_xtr; ncremap vrb_lvl=3; nco_s1d stubs';git push --tags

	* Add nco_s1d.[ch] to Makefile and CMake build-engines

2020-11-27  Charlie Zender  <zender@uci.edu>

	* Create nco_s1d.[ch] files for handling sparse-1d packed (S1D) CLM/ELM variables

	* ncks add --sparse, --s1d option to unpack CLM/ELM variables

	* ncks perform Terraref attribute manipulation with nco_char_att_put()

	* ncclimo add var_xtr option for extra variables in each timeseries

2020-11-25  Charlie Zender  <zender@uci.edu>

	* ncclimo add MOSART to models that append area_nm variable to output unless --no_cll_msr is invoked

2020-11-20  Charlie Zender  <zender@uci.edu>

	* Add UDUNITS2_XML_FILE instructions as HINT to more run-time WARNINGs

	* ncremap add cmd_sng and completion time to vrb_lvl=3

2020-11-18  Charlie Zender  <zender@uci.edu>

	* Build on macOS 11

2020-11-13  Charlie Zender  <zender@uci.edu>

	* ncclimo infer tpd using %g not %f format

	* Quiet long filename warnings unless dbg >= 1

	* NCO 4.9.6-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.6-alpha04: Osiris Rex';git push
	git tag -a 4.9.6-alpha04 -m 'all: bgr 64bit fix; ncremap fix esmf bug, mpi nd_fl bug, add cmem, msk_in, msk_out fix, UDUNITS2_XML_FILE hints;ncclimo cmem nodes';git push --tags

2020-11-11  Charlie Zender  <zender@uci.edu>

	* ncremap check for map-type by examining att_cnv_val, att_ttl_val, and att_gnr_val

	* ncremap fix bone-headed MPI indexing error on Cori

	* ncremap write node-file to drc_out not local directory

	* ncremap change default parallelism from Background to Serial

2020-11-03  Charlie Zender  <zender@uci.edu>

	* Clarify SDD and SCD distinction for ncclimo

2020-11-01  Charlie Zender  <zender@sastrugi.local>

	* Add UDUNITS2_XML_FILE instructions as HINT to run-time WARNING

2020-10-30  Charlie Zender  <zender@sastrugi.local>

	* nco.texi clarify precedence/usage of UDUNITS2_XML_FILE

2020-10-29 Henry Butowsky  <henryb@hush.com>

	* nco_msh_mk() msk_in and msk_out no longer modified regardless of frc_in and frc_out

2020-10-27  Charlie Zender  <zender@sastrugi.local>

	* ncclimo warn when GAA string is empty (because e3sm_diagnostics depends on it)

2020-10-26  Charlie Zender  <zender@sastrugi.local>

	* ISO8601-compliant number of leading zeros prior to last decimal point

2020-10-20  Charlie Zender  <zender@uci.edu>

	* nco_ppc_bitmask() fix pointer union type for u64_ptr and msk_f64*

	* ncremap set wgt_typ=esmf for relevant algorithms

2020-10-16  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.6-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.6-alpha03: Octopus teacher';git push
	git tag -a 4.9.6-alpha03 -m 'netCDF 4.8.0 filter mods; ncremap fix rll bnds; ncclimo docs v2, -P prc_typ';git push --tags

	* ncclimo add --prc_typ option and pass through to regridder, supercedes mdl_nm

	* ncclimo call ncremap rather than ncks for splitting

	* ncclimo call ncremap rather than ncks for climo regridding

	* ncremap generalize GenerateOverlapMesh as variables wgt_exe_tps, cmd_msh_tps

2020-10-14  Charlie Zender  <zender@uci.edu>

	* Verify future-compatibility with upcoming 4.8.0 on glace

	* Remove nc_var_filter_remove(), change nc_var_filterx() to nc_var_filter_ccr() (in case useful)

	* Change nc_inq_var_filterids() to nc_inq_var_filter_ids() unless NC_LIB_VERSION == 474

	* Update Confluence, help screens to v2 options

2020-10-09  Charlie Zender  <zender@uci.edu>

	* Assignment of final interface latitude/longitude in regridder no longer assumes specific origin vertex for CCW ordering

	* Use NCO RLL storage convention (ul,ll,lr,ur) to determine final lat_ntf/lon_ntf

	* NCO 4.9.6-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.6-alpha02: Superspreader';git push
 	git tag -a 4.9.6-alpha02 -m 'autotools libudunits2.dylib; ncremap nfr n2s rll nobnds, lat_d/lon_d; ncra -N';git push --tags

	* Fix grid inferral error for last interface boundary (grid_corner_lat) of N2S RLL grids without coordinate bounds

2020-10-08  Charlie Zender  <zender@uci.edu>

	* Replace old benchmark case famipc5_ne30_v0.3_00003 by 20180129.DECKv1b_piControl.ne30_oEC.edison

	* Add lat_d, lon_d, area_d, area_p, ncol_d, ncol_p to regridding database

2020-10-02  Charlie Zender  <zender@uci.edu>

	* Improve regression tests for ncra -N, mostly working

2020-10-01  Charlie Zender  <zender@uci.edu>

	* configure.ac check for UDUnits2 library in /opt/local/lib/libudunits2.dylib

	* Merge fixes from Henry to enable better regridding of	problematic input grid cells

2020-09-29  Charlie Zender  <zender@uci.edu>

	* Remove UDUnits1 documentation from nco.texi

2020-09-26  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.6-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.6-alpha01: Blown Glass';git push
 	git tag -a 4.9.6-alpha01 -m 'Functionally identical to 4.9.5';git push --tags

	* ncra add NRM_BY_DNM infrastructure to implement integration capability similar to ncwa

2020-09-23  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.5 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.5: RBG';git push
 	git tag -a 4.9.5 -m 'intel cmp fix; ncatted prn mlt flt prms; ncclimo area_nm hrz_dmn; ncremap nsx fix RLL;';git push --tags

	* nco_def_var_filterx() prototype fix for netCDF 4.8.0 forward compatibility

2020-09-22  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.5-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.5-beta01: Elderflower';git push
 	git tag -a 4.9.5-beta01 -m 'nco_inq_varname() dgn; ncclimo area_nm fix; ncremap nsx fix RLL';git push --tags

	* nco_def_var_filterx() prototype uses char ** not unsigned int *

	* nco_inq_var_filter() error diagnostics

	* Attempt to improve autoconf/automake generation of etags

	* nco_inq_varname() error diagnostics

	* Merge two fixes by Henry for RLL grid intersections, one for edg_typ=sph

2020-09-18  Charlie Zender  <zender@uci.edu>

	* ncclimo brown paper bag fix quoting of area_nm

2020-09-17  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.5-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.5-alpha03: PurpleAir';git push
 	git tag -a 4.9.5-alpha03 -m 'icc, icpc builds; ncks prn flt fix, nco_flt_prs(); ncclimo area_nm, hrz_dmn';git push --tags

	* ncclimo add --area_nm and --hrz_dmn to support datasets with area_p, area_d, ncol_d, lat,lon

	* nco_flt_prs() support all filter-types suffixes except byte

2020-09-16  Charlie Zender  <zender@uci.edu>

	* nco_flt_prs() understands NC_parsefilterspec() API for non-(unsigned int) parameter types

2020-09-14  Charlie Zender  <zender@uci.edu>

	* ncks nco_prn_att() test for multiple filters, WARN if found because not handled properly yet

	* ncks nco_prn_att() fix printing of multi-element filter parameter lists

	* Add bgr.cdl and zstd.cdl to test BitGrooming and Zstandard filters

2020-09-11  Charlie Zender  <zender@uci.edu>

	* Add _FillValue to filter test datasets

2020-09-10  Charlie Zender  <zender@uci.edu>

	* ncclimo make dec_md option scd==djf and sdd=jfd synonyms

	* Add dr.cdl to test DigitRounding quantization

2020-09-09  Charlie Zender  <zender@uci.edu>

	* Intel compiler compatibility fully restored

	* nco_ply_lst.c fix kdtree/weight generation OpenMP to work with Intel icc

2020-09-08  Charlie Zender  <zender@uci.edu>

	* nco_cmp_get() result in Intel compiler on MacOSX even if __clang__ defined

	* NCO 4.9.5-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.5-alpha02: Aquashavasana';git push
 	git tag -a 4.9.5-alpha02 -m 'nco_flt.[ch], compression filter stubs, dpr esmf';git push --tags

	* Deprecate configure.ac ESMF options and improve examples

2020-09-07  Charlie Zender  <zender@uci.edu>

	* Protect pragma omp simd with compiler-version ifdef's for GCC	and Clang

 	* Add nco_def_var_filterx() wrapper for netCDF 4.8.0+

 	* Add nco_inq_var_filterids(), nco_inq_var_filter_info(), nco_inq_var_filter_remove() wrappers for netCDF 4.7.4+

	* Add nco_flt.c, nco_flt.h for compression filter utilities

	* ncclimo/ncremap add future-compatible clauses for andes+chrysalis

	* ncks add --flt and --filter options to provide filter string

	* Add solution to HDF5 errors caused by no HDF5_PLUGIN_PATH environment variable

2020-09-05  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.5-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.5-alpha01: Relaxed Pigeon';git push
 	git tag -a 4.9.5-alpha01 -m 'Functionally identical to 4.9.4;';git push --tags

	* nco_sph.h clean up headers and file-scope variables

	* nco_rth_utl.h add prototype nco_zero_double()

	* nco_sph.h add prototypes for nco_sph_cross_chk(), nco_sph_seg_int_1(), Sin(), Cos()

	* Tidy nco_sph.c

	* Install 4.9.4 everywhere

2020-09-04  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.4 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4: Gooseneck Spout';git push
	git tag -a 4.9.4 -m 'all: simd, baa bit rnd, uio/NC_SHARE; autoconf: enable-gpu; ncclimo: kll rph kdz, hfc/hfs, sdd dfl; nces: per-fl-wgt; ncks: vrt fix, dt_fmt json/xml; ncra clm_nfo ilv prm_ints prw; ncremap no_amwg, si bgc, nco_dwe, xtr_xpn, xtr_nsp';git push --tags

	* Fix typo in ncrcat regression test #23 so it once again succeeds

	* ncremap add new global attribute NCO_regrid_method, based on ESMF_regrid_method, to describe actual weight generation algorithm

	* ncremap change handling of map_method attribute to support DWE maps as "Bilinear"

2020-09-03  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.4-beta03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-beta03: Devastating Shavasana';git push
	git tag -a 4.9.4-beta03 -m 'ncap2 clang tidy;ncclimo eam elm; ncremap dwe chk_map;';git push --tags

	* nco.texi document prw, dwe, prm_int, ilv, hfc/hfs, dt_fmt

2020-09-02  Charlie Zender  <zender@uci.edu>

	* ncclimo future-proof mdl_nm option to accept 'eam' instead of	'cam' and 'elm' instead of 'clm2'

2020-09-01  Charlie Zender  <zender@uci.edu>

	* ncremap allow mask_a/b_zro == sz and print warning so chk_map	works on DWE map-files

	* Tidy Clang warning messages due to sloppy ncap2 code, comment-out all _flg_dbg class members

	* NCO 4.9.4-beta02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-beta02: Reanimated Umbrella';git push
	git tag -a 4.9.4-beta02 -m 'ncra --prm_ints; ncremap xtr_xpn, xtr_nsp, nni->dwe';git push --tags

	* ncra set output type of all fix/prc variables in nco_set_prm_typ_out() with PROMOTE_INTS

	* ncremap add long_name attributes to map-file src_grid_dims, dst_grid_dims

	* nco_rgr_wgt() clarify that ERROR messages come from "the regridder"

2020-08-31  Charlie Zender  <zender@uci.edu>

	* ncra add/call nco_set_prm_typ_out() to support --promote_ints --prm_int option

2020-08-28  Charlie Zender  <zender@uci.edu>

	* ncremap rename Nearest Neighbor Interpolation (_nni) to Distance-Weighted Extrapolation (_dwe)

2020-08-27  Charlie Zender  <zender@uci.edu>

	* ncremap workaround to prevent multi-arguments from becoming separate global metadata attributes

	* ncremap fix lat_nbr regression introduced in beta01

	* ncremap genericize xtr_nsp and xtr_xpn arguments for both ESMF and NCO nco_nni

	* NCO 4.9.4-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-beta01: Uncle Leroy';git push
	git tag -a 4.9.4-beta01 -m 'ncremap/ncks nco_nni, xtr_nsp, xtr_xpn; ncra doc prw, clm_nfo->cb;';git push --tags

	* ncks/ncremap add stubs for nco_nni, xtr_nsp, xtr_xpn

	* Finish draft clm_bnd documentation

	* nco_rgr.c: add synonyms con, nni, bln (and longer) to wgt_con, wgt_nni, wgt_bln

	* Henry verifies build-compliance of --disable-udunits

	* Change --cb from flag into --clm_nfo/--clm_bnd synonym

2020-08-26  Charlie Zender  <zender@uci.edu>

	* Make --dbg_lvl synonym to -D for all binary executables

	* ncbo re-add one set of SIMD timers for debugging use

2020-08-25  Charlie Zender  <zender@uci.edu>

	* index.shtml: add MD5, SHA hashes to Windows self-extracting tarball on homepage

	* ncra add --prw synonym to --per_record_weights

	* NCO 4.9.4-alpha15 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha15: Madelines';git push
	git tag -a 4.9.4-alpha15 -m 'nco_vrt_ntp fix;ncclimo drn cf cnv works';git push --tags

	* nco_vrt_ntp() assign grd_sz_in (from input file) := grd_sz_out (from template file)
	This fixes vertical interpolation when PS is in vrt_fl, a regression introduced in 4.9.2

2020-08-24  Charlie Zender  <zender@uci.edu>

	* Informational error message when vertical interpolation horizontal/temporal grids mismatched

	* Start to utilize tpd=0 for monthly mean data thanks to clm_nfo bugfix

2020-08-23  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.4-alpha14 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha14: Fiscalini';git push
	git tag -a 4.9.4-alpha14 -m 'ncclimo clm_nfo to ncra, deprecate	c2b, add cb_tst.nco;ncremap nni';git push --tags

	* Always define unt_val and cln_val, fix DJF clm_nfo interpretation, results look valid

2020-08-21  Charlie Zender  <zender@uci.edu>

	* Re-write ncra to use unified cb structure based on clm_nfo argument

	* Fix new link error with extern double hav(double x1, double x2)

	* Merge Henry's nearest neighbor distance weighted interpolation algorithm

2020-08-20  Charlie Zender  <zender@uci.edu>

	* Nicefy and commit climatology bounds test script cb_tst.nco

2020-08-19  Charlie Zender  <zender@uci.edu>

	* ncclimo monthly dates good though seasonal and annual climo dates are borken

	* ncclimo annotate seasonal and annual climos with clm_nfo, fix double-free()'s

	* Coordinate and bounds values work well for climatological monthly means

2020-08-18  Charlie Zender  <zender@uci.edu>

	* Merge Henry's nco_clm_nfo_to_tm_bnds() and write nco_clm_nfo_get()

2020-08-16  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.4-alpha13 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha13: Kamala & Krall';git push
	git tag -a 4.9.4-alpha13 -m 'nco_xtr_xcl_chk; ncra per-record wgt fix, no cll_mth for bnds; ncrename rgr github;';git push --tags

	* Change regression test to expect new behavior

	* Add nco_xtr_xcl_chk() to die with hint if extraction rules lead to retaining user-excluded variables

	* ncrename add GitHub issue to expected failures for regression tests #28, #31

2020-08-13  Charlie Zender  <zender@uci.edu>

	* ncclimo update documentation for hfcs, both on Confluence and in nco.texi

	* ncra drop cell_methods from climatology_bounds, time_bounds variables

2020-08-12  Charlie Zender  <zender@uci.edu>

	* ncclimo turn-on bnd2tpdclm in single- and multi-file input hfc modes

	* ncra, nces add cb->bnd2tpdclm to convert time bounds to diurnal climatology bounds

	* ncra, nces cell_methods for diurnal climatology bounds works

	* Clarify rules for exclusion of coordinate-like variables

2020-08-11  Charlie Zender  <zender@uci.edu>

	* ncra reset wgt_sum after each ssc during MRO to fix per-record weighting

	* NCO 4.9.4-alpha12 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha12: Dry Rot';git push
	git tag -a 4.9.4-alpha12 -m 'autoconf gpu token; nco_rgr_wgt() gpu directives;';git push --tags

	* Do not nest SIMD within existing SIMD region

	* Hand-merge Sahil's GPU directives and autoconf token, add SIMD branch

2020-08-10  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.4-alpha11 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha11: Homemade Sushi';git push
	git tag -a 4.9.4-alpha11 -m 'autoconf link to alpha10 not alpha01 error; ncclimo hfc mpi fl_nbr=1; ncra --per_record_weights;';git push --tags

	* autoconf link to alpha10 not alpha01

	* ncra investigate per-record weighting anomalies spotted by PJCS

2020-08-09  Charlie Zender  <zender@uci.edu>

	* ncra --per_record_weights applies command-line numeric weights to records

	* nco_rgr_wgt() clarify HINT when spatial dimension hard to find

2020-08-07  Charlie Zender  <zender@uci.edu>

	* ncclimo add mpi mode to hfc for fl_nbr == 1

	* Deprecate unreleased splitter code for sub-averages and (time,tpd,space) shapes

	* nco_rgr_wgt() add 5.0e-15 tolerance to area checks, check only 2D grids

2020-08-06  Charlie Zender  <zender@uci.edu>

	* ncclimo tpd_out inferral valid for any time-coordinate named "time" (EAM and ELM, not yet MPAS)

	* NCO 4.9.4-alpha10 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha10: Splashdown';git push
	git tag -a 4.9.4-alpha10 -m 'autoconf enable-gpu, enable-optimize; ncks dt_fmt json/xml; ncclimo ia mlt fl hfc, sdd dfl, nfr tpd, no_amwg;';git push --tags

	* ncclimo remove extraneous 's' (typo/command) from MPI section

	* ncclimo infer tpd_out from first file if not user-specified with hfc or hfs

2020-08-05  Charlie Zender  <zender@uci.edu>

	* ncclimo fix yyyy_clm_end string in December for scd, sdd modes

	* ncclimo kill remaining children after bad interleave before exiting parent

	* ncclimo kill remaining children after bad cull before exiting parent

	* Add exit() hints for many NC_EDAP* errors from remote DAP servers

	* Parallelize diurnal climo generation from multiple input files

	* Turn-off AMWG links by default (enable old behavior with --amwg_links)

	* Default December mode is sdd (enable old behavior with --dec_md=scd)

2020-08-04  Charlie Zender  <zender@uci.edu>

	* Generalize order of specification of --dt_fmt and --cal, tidy code

2020-08-04 Henry Butowsky  <henryb@hush.com>

	* Expand usage of ncks --dt_fmt switch to JSON (--json) and XML (--xml) output

2020-08-03  Charlie Zender  <zender@uci.edu>

	* ncclimo use ISO8601 time format to eliminate whitespace and quotes

	* Multi-file high-frequency climos appear to work, need optimization

	* Workaround ILV-setting by restricting ilv failure checks to ilv > 1

2020-08-02  Charlie Zender  <zender@uci.edu>

	* Test file famipc5_ne30_v0.3_00003.cam.h0.1979-01.nc area is corrupt in last ~100 values

2020-08-01  Charlie Zender  <zender@uci.edu>

	* Merge and tidy Sahil Katrekar configure GPU-offloading and enable-optimize options

2020-07-31  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.4-alpha09 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha09: Marble';git push
	git tag -a 4.9.4-alpha09 -m 'ncbo: simd vectorization; ncclimo: drn sgl fl; nces wrn; ncra/ncrcat: mso stubs ;';git push --tags

	* Investigate why FLG_ILV spuriously set despite no ilv argument

2020-07-30  Charlie Zender  <zender@uci.edu>

	* Merge and tidy Sahil Katrekar vectorization directives

	* Diurnal climos work for single file input

2020-07-29  Charlie Zender  <zender@uci.edu>

	* Temporarily disable cb for high-frequency climos

2020-07-28  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.4-alpha08 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha08: Ella by Starlight';git push
	git tag -a 4.9.4-alpha08 -m 'ncclimo: mrg hfc mth, fl_nbr=1 ; nces cb, mso ; ncra/ncrcat: ilv warnings, tidy; nco_gsl.ch rename';git push --tags

	* nces turn-on cb machinery for ncfe exactly as for ncra

	* Stubs for --mso to allow turning on/off multi-subcycle output

	* ncra/nces die when user-specified wgt_nbr and fl_nbr are unequal

2020-07-26  Charlie Zender  <zender@uci.edu>

	* Merge clm_md=hfc with clm_md=mth climo code

2020-07-24  Charlie Zender  <zender@uci.edu>

	* Check ilv with valgrind on e3sm, no anomalies seen

	* Warn when interleaved input ends on incomplete sub-cycle

	* Change diagnostic rec_rmn_prv_ilv to 0 if no FLG_ILV

2020-07-23  Charlie Zender  <zender@uci.edu>

	* Create simple ILV regression tests that all pass so far

	* Exit with error when interleaved sub-cycle crosses file boundary

	* Turn-off "Intra-file non-monotonicity" WARNINGs for interleaved files

	* Change nco_gsl.[c/h] to nco_gsl.[cc/hh] so broken MSVC compiles it as C++ and eliminates "restrict" keyword

	* Fix ILV record counters when multiple SSCs within one file

2020-07-22  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.4-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha07: Interleave';git push
 	git tag -a 4.9.4-alpha07 -m 'ncra/ncrcat: ILV API;ncks baa 5,6 = ppc bit round, half-shave;';git push --tags

	* Update NSD=3 regression test to select Bit Grooming

	* New interleave API appears to work for ncrcat/ncra single and multiple files!

2020-07-21  Charlie Zender  <zender@sastrugi.local>

	* Eliminate deprecated or un-used MRO specification via 'm' or 'M' as sixth hyperslab argument

	* Change interleave API from --ilv -d dmn,srt,cnt,ilv=srd=ssc to -d dmn,srt,cnt,srd,ssc,ilv

2020-07-19  Charlie Zender  <zender@uci.edu>

	* Re-consider ilv implementation and final diurnal strategy

	* ncra interleave (flg_ilv) always implies multi-record-output (flg_mro)

2020-07-17  Charlie Zender  <zender@uci.edu>

	* Adjust diagnostic count (cnt) for interleaving (do not divide span by stride)

	* ncrcat interleaving invoked as either stride-only and stride-ssc work identically for multiple files

	* Merge Kouznetsov's implementation of Milan Klower's integer-math-only version of nearest neighbor rounding into the new default bit-adjustment-algorithm (BAA) #5

2020-07-16  Charlie Zender  <zender@uci.edu>

	* ncra/ncrcat: Implement stride resets over interleaved dimension, works for multiple files!

2020-07-15  Charlie Zender  <zender@uci.edu>

	* Change default Bit-Adjustment Algorithm from Bit Grooming to Bit Rounding

	* Merge Kouznetsov's bit-adjustment-algorithm (BAA) #6 half-shaving quantization algorithmw

2020-07-13  Charlie Zender  <zender@uci.edu>

	* Implement double precision version of Kouznetsov's round-to-nearest quantization

2020-07-11  Charlie Zender  <zender@uci.edu>

	* Merge Rostislav Kouznetsov (rkouznetsov) bit-adjustment-algorithm (BAA) #5 bit-rounding quantization algorithm

2020-07-09  Charlie Zender  <zender@uci.edu>

	* Add flg_ilv to lmt_sct so srt and end can depend on srd

	* Clean-up and move nco_rgd_arr_lst_free() and nco_rgd_arr_lst_chk() to nco_lst_utl.c/h

	* ncra/ncrcat add --ilv, --interleave_output flags and stubs to interleave output data

2020-07-08  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.4-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha06: Missoula';git push
 	git tag -a 4.9.4-alpha06 -m 'all: NC_SHARE on read; nces -w wgt; ncks revert nc_inq_var_filter() workaround';git push --tags

	* Add per-file weight logic to nces, works with command-line weights not wgt_nm weights

	* Add 'if(SHARE_OPEN) md_open=md_open|NC_SHARE;' to all main.c files

2020-07-01  Charlie Zender  <zender@uci.edu>

	* Dennis Heimbigner reverted 4.7.4 nc_inq_var_filter() change in 4.8.0-develop, so revert workaround in nco_prn_att()

2020-06-30  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.4-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha05: SpaceForce';git push
 	git tag -a 4.9.4-alpha05 -m 'ncclimo align mth, hfc clm';git push --tags

	* Change clm_md to hfc for climos, hfs for splitting

2020-06-28  Charlie Zender  <zender@uci.edu>

	* ncclimo HFCs successfully aligned with months

	* ncclimo add stubs for high-frequency climos (HFCs)

2020-06-27  Charlie Zender  <zender@uci.edu>

	* ncclimo deconvolve two time dimensions by isolating each tpd in separate ncrcat step

	* ncclimo hfs fix stride, set to tpd

	* ncclimo hfs instead of hf, add dpf input option, change output to (time,hour,space) to ease regridding

2020-06-26  Charlie Zender  <zender@uci.edu>

	* ncclimo uses MRO, ncecat to create timeseries of annual mean diurnal cycles

	* ncclimo hf respects specified tpd_out

2020-06-25  Charlie Zender  <zender@uci.edu>

	* ncclimo improve clm_md documentation

	* ncclimo fix daily off-by-one error due to CAM/EAM time-stamps at averaging interval end

	* NCO 4.9.4-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha04: 5 Oaks';git push
 	git tag -a 4.9.4-alpha04 -m 'ncclimo hgh_frq yr bnd xct';git push --tags

	* ncclimo fix high-frequency off-by-one error due to CAM/EAM time-stamps at averaging interval end

	* ncclimo optimize fuzziness of input file-list to work with longer time-series

2020-06-24  Charlie Zender  <zender@uci.edu>

	* ncclimo high-frequency mode creates exact, year-aligned output files

	* ncclimo create pruned yet fuzzy file-lists for timeseries segments

2020-06-19  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.4-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha03: Da 5 Bloods';git push
 	git tag -a 4.9.4-alpha03 -m 'ncclimo uio; ncremap pdq_opt, si bgc, uio';git push --tags

	* ncclimo add stubs to correctly date-hyperslab high-frequency time-series

	* ncremap document --ppc and --pdq

2020-06-18  Charlie Zender  <zender@uci.edu>

	* ncremap add nZBGCTracers,nBioLayersP1,nAlgaeIceLayers,nDisIronIceLayers,nIceLayers
	BGC dimensions to preset pdq_opt for mpasseaice

	* ncremap add --pdq_opt to override internal presets and allow MPAS-SI BGC workaround

2020-06-15 Henry Butowsky  <henryb@hush.com>

	* Introduce wgt_sct, a lightweight version of poly_sct used when overlap mesh is not requested
	  nco_ply_lst_mk_vrl_sph() returns and nco_msh_mk() understands overlap list of wgt_sct**

2020-06-14  Charlie Zender  <zender@uci.edu>

	* Add --uio flag to ncclimo, mainly for splitter, and to ncremap (still not used internally by regridder, though)

2020-06-11  Charlie Zender  <zender@uci.edu>

	* Document --uio, --share

2020-06-10  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.4-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha02: Hangover Run';git push
 	git tag -a 4.9.4-alpha02 -m 'NC_SHARE via --share, --uio';git push --tags

	* Implement getopt_long() processing for NC_SHARE, add synonyms uio and unbuffered_io

2020-06-09  Charlie Zender  <zender@uci.edu>

	* Add NC_SHARE mask to open and create mode in nco_fl_utl.c

	* Implement initialization, and argument passing for for SHARE_CREATE/SHARE_OPEN

	* Fix comments for RAM_CREATE/RAM_OPEN

2020-06-02  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.4-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.4-alpha01: Monkey see, monkey do';git push
 	git tag -a 4.9.4-alpha01 -m 'Mostly identical to 4.9.3;ncks quiet warnings when area_a==0.0';git push --tags

	* ncks chk_map: Do not warn about frac_a when area_a is not provided or is all zero (e.g., bilinear maps)

2020-05-31  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.3 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.3: Outlander';git push
 	git tag -a 4.9.3 -m 'ncap2 ess_rmt demos planck.nco;ncks cmp vrs clang;ncremap cxl --volumetric, default cell_area_nco, rgr_opt fix, experimental GPU offloads';git push --tags

	* Add GSL flags to bld/Makefile and test on grele

	* Change account names from acme to e3sm

	* nco_rgr_wgt() set and compute timers only when reporting them, quiet reporting

2020-05-29  Charlie Zender  <zender@uci.edu>

	* Test GPU offload pragmas for possible inclusion in 4.9.3 release

	* NCO 4.9.3-alpha09 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.3-alpha09: Rib Eye';git push
 	git tag -a 4.9.3-alpha09 -m 'ncap2 ess_rmt demos planck.nco;ncks cmp vrs clang;ncremap cxl --volumetric, default cell_area_nco, rgr_opt fix, experimental GPU offloads';git push --tags

2020-05-29 Henry Butowsky  <henryb@hush.com>

	* Set rgr->area_mth default to cell_area_nco

2020-05-28  Charlie Zender  <zender@uci.edu>

	* nco_rgr_wgt() add GPU offloading to 3D variable loops without	missing values

2020-05-27  Charlie Zender  <zender@uci.edu>

	* Pass ${rgr_opt} (e.g., "--rgr edg_typ=smc") to NCO map-generation commands

2020-05-25  Charlie Zender  <zender@uci.edu>

	* Update nco.texi with latest TR options

	* Remove "--volumetric" from fv2se_mono per Mark Taylor modifying Confluence instructions

2020-05-21  Charlie Zender  <zender@uci.edu>

	* Regridding target data construct interferes with OpenMP and only writes data from one thread

	* Demonstrate that clang autovectorizes simplest regridding loop

	* Add timers to nco_rgr.c/h

2020-05-20  Charlie Zender  <zender@uci.edu>

	* ncks change --var_val to --val_var to avoid getopt() abbreviation ambiguity with --var

2020-05-19  Charlie Zender  <zender@uci.edu>

	* Construct and identify clang and GCC compiler library numeric versions

2020-05-18  Charlie Zender  <zender@uci.edu>

	* Insert first GPU directives, modified from Dhruv Seth

2020-05-17  Charlie Zender  <zender@uci.edu>

	* Improve ncap2 planck.nco demo for ESS 138

	* ncap2 print usage when invoked without any options or arguments

2020-05-13  Charlie Zender  <zender@uci.edu>

	* Change default build from clang-9.0 to clang-10

	* Correctly identify modern clang compiler versions

2020-05-02  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.3-alpha08 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.3-alpha08: Olive Bread';git push
	git tag -a 4.9.3-alpha08 -m 'nco_get_att() NC_ENOTATT branch; ncclimo inp_glb w/sbs_flg';git push --tags

	* ncclimo/ncremap always check that user-specified drc_in exists for all input types

2020-05-01  Charlie Zender  <zender@uci.edu>

	* ncclimo/ncremap warn when input directory for globbing DNE

	* ncclimo simplify and disambiguate determination of sbs_flg and inp_glb

2020-04-30  Charlie Zender  <zender@uci.edu>

	* ncclimo allow clm_md='hf' to use input from globbing directory when inp_glb='Yes'

	* ncremap when inp_psn='Yes', set std_chk='No'

	* ncremap clean-up unique suffix algorithm

2020-04-29  Charlie Zender  <zender@uci.edu>

	* Clarify hyperslabbing syntax for integer-valued coordinates

	* Print var_id, var_nm, att_nm when nco_get_att() returns NC_ENOTATT

2020-04-22  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.3-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.3-alpha07: Squidgy Squeegy Squishy';git push
	git tag -a 4.9.3-alpha07 -m 'nco.texi chk_map doc; ncks TR area quadrature option --cell_area_quad;ncremap eliminate frac_a/frac_b bias trick';git push --tags

	* Merge TempestRemap area quadrature area method, intersection updates

2020-04-18  Charlie Zender  <zender@uci.edu>

	* Add nc_inq_var_filter_flg() to workaround netCDF 4.7.4 backwards incompatibility in nc_inq_var_filter()

	* Test with GCC 10.0.1 (emits many new warnings) on Fedora 32-beta with netCDF 4.8.0-development

	* Update return codes in nco_ctl.c and NCO_rgr.pl for netCDF 4.8.0, 4.8.1

2020-04-16  Charlie Zender  <zender@uci.edu>

	* Edit map-file documentation

2020-04-15  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.3-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.3-alpha06: Holy Fire';git push
	git tag -a 4.9.3-alpha06 -m 'ncap2 nco_gsl.c/h deprecated;ncclimo clm_md=hgh_frq;ncrcat rbs int tm;ncremap cross-product';git push --tags

	* Henry merges cross product treatment that improves accuracy on high resolution grids

2020-04-10  Charlie Zender  <zender@uci.edu>

	* nco_netcdf.c Add hint for possible explanation of NC_EACCESS (-77) due to old DAP server

	* ncap2 final patch for nco_gsl.c/h for when GSL not enabled

2020-04-08  Charlie Zender  <zender@uci.edu>

	* ncks alter nco_prn_att() to debug netCDF 4.7.4 changes in nc_inq_var_filter()

	* ncap2 incomplete patch nco_gsl.c/h for when GSL not enabled

2020-04-07  Charlie Zender  <zender@uci.edu>

	* ncclimo hgh_frq works for PRECT with ragged dates, non-integral years

	* ncrcat correctly rebase time values not stored in floating point

2020-04-06  Charlie Zender  <zender@uci.edu>

	* ncclimo add new clm_md='hf' type for high-frequency (hgh_frq) datasets

	* NCO 4.9.3-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.3-alpha05: Ozark';git push
	git tag -a 4.9.3-alpha05 -m 'ncrcat: quiet nfo; nco_gsl.c/h; ncremap kdtree parallel';git push --tags

2020-04-05  Charlie Zender  <zender@uci.edu>

	* nco_att_utl.c shift INFO/WARNING message from dbg_lvl == 0 to 1 to quiet annoying message

2020-04-03  Henry Butowsky  <henryb@hush.com>

	* Turn nco_gsl_fit_linear(), nco_gsl_stats_mean(), nco_gsl_stats_covariance() in nco_gsl.c/h into stubs to comply with separation of GSL GPL code and NCO BSD code

2020-04-02  Charlie Zender  <zender@uci.edu>

	* Fix typo in ncclimo HINT reported by Sterling

	* Merge Henry's modifications to parallelize kdtree

2020-03-31  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.3-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.3-alpha04: Quarrantine';git push
	git tag -a 4.9.3-alpha04 -m 'ncrcat: rbs nc_int rgr tst ncremap/ncks: pg2 all work;';git push --tags

	* ncremap: curvilinear regional NCO grids that worked with ESMF	now work with NCO weight generator

2020-03-21  Charlie Zender  <zender@uci.edu>

	* Quiet HINT on -C -x -v crd combination per user request

2020-03-17  Charlie Zender  <zender@uci.edu>

	* Add time_int_udunits to test rebasing integer-valued UDUnits time coordinate

	* NCO 4.9.3-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.3-alpha03: SDHalf';git push
	git tag -a 4.9.3-alpha03 -m 'ncremap/ncks: intersection precision, GSL, pg2<->RLL';git push --tags

2020-03-17  Henry Butowsky <henryb@hush.com>

	* Use GSL library to solve matrix in nco_mat_int_pl()

	* nco_seg_intersect() fixes to detection and handling of parallel arcs

	* nco_sph_parallel() check if identical vertices

	* nco_sph_seg_int() change some fundamental constants

2020-03-16  Charlie Zender  <zender@uci.edu>

	* ncks: --frac_b_nrm and --area_wgt both automatically imply --chk_map

2020-03-04  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.3-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.3-alpha02: Loss Prevention';git push
	git tag -a 4.9.3-alpha02 -m 'ncks --frac_b_nrm;ncremap --correct_areas, RLL edg_typ, smc areas; nco.texi chk_map, job_nbr, par_typ, SGS, unq_sfx';git push --tags

	* nco_msh_mk() allow user to override edg_typ for RLL intersections

	* nco_rgr_ini() default to edg_typ_nil so user can change it

2020-03-03  Charlie Zender  <zender@uci.edu>

	* nco.texi --par_typ documentation

2020-03-02  Charlie Zender  <zender@uci.edu>

	* nco.texi more --frac_b_nrm documentation

2020-03-01  Charlie Zender  <zender@uci.edu>

	* ncremap/ncclimo: Re-formulate --par_typ option parsing to use	regular expressions

	* Update --unq_sfx documentation

2020-02-28  Charlie Zender  <zender@uci.edu>

	* nco_rgr.c allow polar caps in small-circle code (which now finally runs to completion)

	* nco.texi Add (over past week) long-winded documentation for --chk_map and SGS

2020-02-21  Charlie Zender  <zender@uci.edu>

	* ncremap add --correct_areas on the four conservative TR maps with destination FV grids

	* Update OpenMP update shared() clause in nco_ply_lst.c for thr_quota,thr_quota_step for Intel Compilers

2020-02-20  Charlie Zender  <zender@uci.edu>

	* Update Zen of Regridding documentation on Confluence

2020-02-18  Charlie Zender  <zender@uci.edu>

	* Recompute and store new frac_a as well as frac_b when	re-normalizing weights

	* Change ncks --map_fix option (ambiguous with ncks --map) to --fix_map or --frac_b_nrm

2020-02-17  Charlie Zender  <zender@uci.edu>

	* ncks nco_map_fix() add --map_fix option to fix self-overlaps

2020-02-14  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.3-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.3-alpha01: VD';git push
	git tag -a 4.9.3-alpha01 -m 'Functionally identical to 4.9.2';git push --tags

	* Change malingering gpl.html URLs to BSD3 URLs

	* NCO 4.9.2 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.2: Delirium';git push
	git tag -a 4.9.2 -m 'Re-license from GPL3 to BSD;ncks chk_map, lz4.cdl;ncpdq -U -v lat fix;ncremap prs->hyb, crv axis/crd atts, fv2fv opt, ne1024pg2, NaN area, fl_fmt/hdr_pad, sml_crc;';git push --tags

	* Shrink homepage logo, fix banner

	* ncremap/ncclimo document HDF5_FILE_LOCKING

	* ncremap document --devnull

	* NCO 4.9.2-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.2-beta01: Recently and Nearby';git push
	git tag -a 4.9.2-beta01 -m 'Re-license from GPL3 to BSD;ncks chk_map, lz4.cdl;ncpdq -U -v lat fix;ncremap prs->hyb, crv axis/crd atts, fv2fv opt, ne1024pg2, NaN area, fl_fmt/hdr_pad, sml_crc;';git push --tags

	* Change license from GPL3 to BSD 3-clause

2020-02-13  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() add ERROR and HINT when prs->hyb lacks PS

	* NCO 4.9.2-alpha09 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.2-alpha09: Absinthe';git push
	git tag -a 4.9.2-alpha09 -m 'ncremap unify [prs,hyb]->hyb, fix toowzh prs->prs bug; chk ovr area -> swap';git push --tags

	* nco_ntp_vrt() verify toowzh bug fixed and that prs->prs ntp is _exact_

	* ncremap, ncclimo, acme1, rhea update paths to e3sm_unified_1.3.0

	* nco_sph_plg_area() Quiet area messages for isoceles and skinny triangles

2020-02-13 Henry Butowsky  <henryb@hush.com>

	* nco_ply_lst_mk_vrl_sph() if overlap area exceeds src or dst cell area then swap src and dst, recalculate

2020-02-12  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() unify treatment of PS in hyb_in and prs_in files

	* nco_ntp_vrt() investigating prs->hyb interpolation

	* nco_map_chk() add warning about self-overlapping source grids

2020-02-11  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.2-alpha08 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.2-alpha08: Vasisthasana';git push
	git tag -a 4.9.2-alpha08 -m 'ncks eliminate alarmist WARNINGs on regional grids, EASE area == 0.0 WARNINGS;ncremap -P mpas --prs_stt=integral works hydro1k almost, vrt prs->hyb PS';git push --tags

	* ncremap add vertical regrid examples to default usage

	* nco_map_chk() only issue WARNINGs for min(frac_a/b) cells when grid_b/a tiles sphere

2020-02-07  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() pure pressure input may now provide PS for use in interpolating to output hybrid files

2020-02-06  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() set horizontal grd_sz_in, grd_sz_out correctly for grd_in_prs

	* ncremap allow --prs_stt=integral to work with -P mpas

	* Clarify treatment of PS during vertical interpolation

2020-02-05  Charlie Zender  <zender@uci.edu>

	* nco_inq_varnatts() emit variable ID on error

	* nco_chk_map() check and WARNING for area_a/b == 0.0 prior to normalization to prevent unexpected divide-by-zero for EASE grid areas

	* nco_chk_map() eliminate some WARNINGs for grids not within 99% of tiling sphere

	* NCO 4.9.2-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.2-alpha07: Dandasana';git push
	git tag -a 4.9.2-alpha07 -m 'ncks chk_map msk_a/b; ncremap SAS needles+isoceles, use canonical ngl, cosine formula, crv axis/coordinates atts; ncks cori fix';git push --tags

	* Regrid (and plot with Panoply) EASE grid with aave though nco weight-generation has issues

	* nco_rgr_wgt() add "coordinates" attributes to output fields on curvilinear output grids

	* nco_rgr_wgt() omit "axis" attributes from 2-D coordinate variables per CF Conventions

	* ncremap as implemented, multiple -R options lose all but last	option. Aargh.

2020-02-04  Charlie Zender  <zender@uci.edu>

	* nco_var_min_max_ttl() change ttl_ip to ttl_dp to support large grids (this may have been unnecessary)

2020-02-03  Charlie Zender  <zender@sastrugi>

	* Unify treatment of needle-shaped and flat isoceles-shaped triangle areas (and set to zero)

	* Until today SAS formula wrongly used actual not canonical angles A, B for canonical formula

2020-01-31  Charlie Zender  <zender@sastrugi>

	* Add mask_a/b evaluations to nco_map_chk()

	* Print reason(s) for failed L'Huilier's formula

2020-01-28  Charlie Zender  <zender@sastrugi>

	* NCO 4.9.2-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.2-alpha06: Supta Baddha Konasana';git push
	git tag -a 4.9.2-alpha06 -m 'ncks chk_map dgn;ncremap ne30np2, NaN area = 0.0;index.shtml';git push --tags

	* Print WARNING and set area of weird triangles to 0.0 instead of NaN

2020-01-25  Charlie Zender  <zender@sastrugi>

	* Update Homepage so ACCESS proposal reviewers see latest publications/presentations

	* Modifications mysteriously/dramatically slowed-down ncks --chk_map (on MBP) then it fixed itself

	* Check var_mask_a/b before printing WARNINGs

	* nco_map_chk() prints gridcells where row/column totals errors exceed tolerance

2020-01-21  Charlie Zender  <zender@sastrugi>

	* nco_map_mk() add grid_file_src/dst attributes, remove quotes from version

2020-01-20  Charlie Zender  <zender@sastrugi>

	* nco_map_chk() fix mistaken values of perfection for frac_b

	* nco_map_mk() add thr_nbr attribute

2020-01-19  Charlie Zender  <zender@sastrugi>

	* ncremap fix --devnull to use --dvn_flg

	* NCO 4.9.2-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.2-alpha05: HRH';git push
	git tag -a 4.9.2-alpha05 -m 'ncremap dbg_lvl fl_fmt to ncks, no remap_command, hdr_pad';git push --tags

	* ncremap create alg_typ=nco map-files and mesh-files with hdr_pad=10k so that annotating them is quicker

	* ncremap deprecate passing gaa for remap_command to ncatted as it causes breakage

	* ncremap pass '${nco_opt}' to ncks when alg_typ=nco

2020-01-18  Charlie Zender  <zender@sastrugi>

	* nco_map_mk() more legible diagnostics

	* ncremap --devnull=No flag redirects regridder output to terminal instead of /dev/null

	* NCO 4.9.2-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.2-alpha04: Chow-Mein';git push
	git tag -a 4.9.2-alpha04 -m 'ncpdq -U -v lat fix; ncremap sml_crc mrg, ne1024pg2';git push --tags

	* nco_map_mk() add ignored weight diagnostic, and RAM/format INFO

	* nco_map_mk() define arrays dimensioned by n_s last to help evade netCDF3-classic file format limits

2020-01-17  Charlie Zender  <zender@sastrugi>

	* ncremap/ncclimo fix printing of multi-word NCO version names

	* ncpdq -U now always unpacks all variables, including packed grid variables

	* Create infrastructure to address bug where ncpdq -U strips attributes from packed grid variables yet does not unpack them

	* Merge new intersection code that handles small circles

2020-01-16  Charlie Zender  <zender@sastrugi>

	* nco_sph_plg_area() and edg_typ=sml_crc works with RLL grids

	* nco_sph_plg_area() ignore small circle correction for degenerate triangles (geodesics)

	* nco_sph_plg_area() weed-out degenerate polar points

2020-01-15  Charlie Zender  <zender@sastrugi>

	* NCO 4.9.2-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.2-alpha03: Alta-Vista';git push
	git tag -a 4.9.2-alpha03 -m 'ncks chk_map() NaN fixes; ncremap fv2fv options, TR pg2 compatibility';git push --tags

	* ncclimo and ncremap now export HDF5_USE_FILE_LOCKING='FALSE'
	Qi Tang reported 20200110 that his batch scripts on Cori that use netCDF4 map-files fail unless he sets this

	* nco_map_mk() if Tempest pg grid-files that lack "grid_dims" variables are unstructured then skip sanity check otherwise bail

	* nco_chk_map() report differences in order cmp_dsk_dff not dsk_cmp_dff

	* ncremap disambiguate synonyms for fv2fv and fv2fv_stt, though they are now equivalent

	* ncremap replace "--mono3 --noconserve" in fv2fv with "--in_np 2" per recommendation of Mark Taylor

	* nco_chk_map() more compact format for weight index

	* nco_chk_map() fix index in NaN printing

2020-01-14  Charlie Zender  <zender@sastrugi>

	* nco_chk_map() check for and report NaNs in weight array

	* NCO 4.9.2-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.2-alpha02: Big Horn';git push
	git tag -a 4.9.2-alpha02 -m 'ncks chk_map() fixes; ccr lz4.cdl';git push --tags

	* nco_chk_map() fix flaws in setting has_frac_a/b flags

	* nco_chk_map() report computed not disk values, thus preventing frac_a min/max values for both frac_a and frac_b values when frac_b variable not present on disk

	* Tidy nco_rgr.c, nco_map.c while hunting chk_map errors

2020-01-09  Charlie Zender  <zender@sastrugi>

	* Adjust area reported to calling code by small-circle area correction

2020-01-04  Charlie Zender  <zender@uci.edu>

	* Add lz4.cdl to test CCR LZ4 filter

2020-01-02  Charlie Zender  <zender@uci.edu>

	* Update copyright year

2019-12-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.2-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.2-alpha01: Hatha';git push
	git tag -a 4.9.2-alpha01 -m 'Functionally identical to 4.9.1';git push --tags

2019-12-19  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.1 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.1: Skyglow';git push
	git tag -a 4.9.1 -m 'autoconf EXTERNL netcdf_mem.h;automake libnco.la;ncclimo --glb_avg;ncpdq flt_dbl;ncremap vrt_ntp fix, nco_con dfl;nco_copy_att() _NCProperties;';git push --tags

	* Always set lev_out_min to fix uninitialized error (identified by valgrind) that caused errorneous behavior in mss_val extrapolation in nco_ntp_vrt() with some compilers (compy, cori defaults)

	* Change ps_sz from double to size_t

	* Fix nco_rgr.c CEWI's and outfit for bug-hunting why _FillValue not requested or created

2019-12-18  Charlie Zender  <zender@uci.edu>

	* Print WARNING when nco_ntp_vrt() fails to create _FillValue attribute

	* Document --glb_avg

	* Implement and document ncpdq flt_dbl map

2019-12-17  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.1-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.1-alpha03: Ignite';git push
	git tag -a 4.9.1-alpha03 -m 'automake libnco.la;ncclimo glb_avg';git push --tags

	* Correct automake syntax from -lnco to -l../nco/libnco.la (per bug #118 from Daniel Macks)

	* ncclimo global average timeseries working prototype with --glb_avg

2019-12-16  Charlie Zender  <zender@uci.edu>

	* Add stubs for ncclimo global average timeseries

	* Tweak _NCProperties message

2019-12-12  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.1-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.1-alpha02: Utthita Trikonasana';git push
	git tag -a 4.9.1-alpha02 -m 'autoconf EXTERNL netcdf_mem.h;nco_copy_att() _NCProperties;ncremap nco_con dfl;';git push --tags

	* Modify configure.ac to define EXTERNL from netcdf.h during autoconf check of netcdf_mem.h
	Thanks to Matthew Thompson and Dave Allured for reporting and solving the issue

	* Surgically prevent nco_copy_att() from attempting to copy _NCProperties

	* Henry restored functionality to edg_typ and ply_tri_mth options

2019-12-10  Charlie Zender  <zender@uci.edu>

	* Print names of attribute and variables/groups when nco_copy_att() fails

2019-12-08  Charlie Zender  <zender@uci.edu>

	* ncremap add stubs for MOAB-Tempest executable mbtempest

2019-12-06  Charlie Zender  <zender@uci.edu>

	* Re-do logic for invoking small circle triangles

2019-12-05  Charlie Zender  <zender@uci.edu>

	* ncremap change default regridder algorithm from ESMF bilinear to NCO nco_con

	* NCO 4.9.1-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.1-alpha01: Massage';git push
	git tag -a 4.9.1-alpha01 -m 'Functionally identical to 4.9.0';git push --tags

2019-12-04  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.0 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.0: Balasana';git push
	git tag -a 4.9.0 -m 'ncremap att_flg, centroid opt, fv2fv_flx/stt, gss n2s nfr fix, HRRR, IFS, MPAS BGC, msh_fl, ntp_mth rhea SLURM, rnr=0.0 == destonly, SGS rewrite/parallelize, TR MWF SCRIP, TR volumetric, vrt_nm, vrt prs tm_nbr fix;ncks area_wgt, chk_nan, chk_map, json dcm pnt fix;ncap2 -O fix';git push --tags

	* nco_map_chk() always print computed frac_a/b statistics

	* Improve bit-grooming documentation

2019-12-03  Charlie Zender  <zender@uci.edu>

	* Document --chk_map, --area_wgt, --chk_nan

	* Eliminate renormalize_threshold since it never worked, support renormalize and renormalization_threshold

2019-12-02  Charlie Zender  <zender@uci.edu>

	* NCO 4.9.0-beta03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.0-beta03: Baddha Ko·πáƒÅsana';git push
	git tag -a 4.9.0-beta03 -m 'ncremap att_flg, centroid opt, fv2fv_flx/stt, gss n2s nfr fix, HRRR, IFS, MPAS BGC, msh_fl, ntp_mth rhea SLURM, rnr=0.0 == destonly, SGS rewrite/parallelize, TR MWF SCRIP, TR volumetric, vrt_nm, vrt prs tm_nbr fix;ncks area_wgt, chk_nan, chk_map, json dcm pnt fix;ncap2 -O fix';git push --tags

	* Support netCDF 4.7.3

2019-11-30  Charlie Zender  <zender@uci.edu>

	* nco_map_chk() print ncks helper commands to examine S,frac_a/b extrema iff dbg >= 1

2019-11-29  Charlie Zender  <zender@uci.edu>

	* nco_map_chk() add minima/maxima cell location to S, frac_a/b

2019-11-28  Charlie Zender  <zender@uci.edu>

	* Add helpful error and HINT when chk_map invoked on unsupported files

	* Round weights between down to 1.0 if overlap fraction in (1.0,1.0+1.0e-10]

2019-11-21  Charlie Zender  <zender@uci.edu>

	* Change to bin_min < weight <= bin_max. Now agrees with TR AnalyzeMap.

	* NCO 4.9.0-beta02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.0-beta02: Uttanasana';git push
	git tag -a 4.9.0-beta02 -m 'ncremap att_flg, centroid opt, fv2fv_flx/stt, gss n2s nfr fix, HRRR, IFS, MPAS BGC, msh_fl, ntp_mth rhea SLURM, rnr=0.0 == destonly, SGS rewrite/parallelize, TR MWF SCRIP, TR volumetric, vrt_nm, vrt prs tm_nbr fix;ncks area_wgt, chk_nan, chk_map, json dcm pnt fix;ncap2 -O fix';git push --tags

	* Add weight histogram in TR format

2019-11-19  Charlie Zender  <zender@uci.edu>

	* nco_map_chk() gracefully handles map-files (often bilinear) with area_a/b=0, frac_a/b=0

	* Add area-weighting option --area_wgt to nco_map_chk()

2019-11-18  Charlie Zender  <zender@uci.edu>

	* Re-design statistics format, handle TR se2se maps, allow for missing mask_a/b

	* Include mbs,rms,sdn statistics in nco_map_chk() output

2019-11-17  Charlie Zender  <zender@uci.edu>

	* Improve nco_map_chk() output formatting

2019-11-16  Charlie Zender  <zender@uci.edu>

	* Add complements to nco_map_chk() output

2019-11-15  Charlie Zender  <zender@uci.edu>

	* Support new fv2fv_flx, fv2fv_stt algorithms

2019-11-14  Charlie Zender  <zender@uci.edu>

	* Re-format chk_map output

	* NCO 4.9.0-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.9.0-beta01: Uttanasana';git push
	git tag -a 4.9.0-beta01 -m 'ncremap att_flg, centroid opt, gss n2s nfr fix, HRRR, IFS, MPAS BGC, msh_fl, ntp_mth rhea SLURM, rnr=0.0 == destonly, SGS rewrite/parallelize, TR MWF SCRIP, TR volumetric, vrt_nm, vrt prs tm_nbr fix ;ncks chk_nan, chk_map, json dcm pnt fix;ncap2 -O';git push --tags

	* ncremap allows altering mss_val without invoking -P mpas

2019-11-13  Charlie Zender  <zender@uci.edu>

	* Update ncremap TR documentation and hint on obtaining TR

2019-11-12  Charlie Zender  <zender@uci.edu>

	* Hook-up and clean-up nco_map_chk()

2019-11-10  Charlie Zender  <zender@uci.edu>

	* Add hooks for nco_map_chk()

	* Document --preserve=mean,integral

2019-11-08  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.2-alpha10 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.2-alpha10: Pranayama';git push
	git tag -a 4.8.2-alpha10 -m 'ncremap TR MWF scrip, dpr eps_ill_cnd, --preserve;ncks json dcm pnt fix';git push --tags

	* Add --preserve=mean,integral option to simplify weight application

2019-11-07  Charlie Zender  <zender@uci.edu>

	* Pass rgr structure into nco_sph_plg_area()

2019-10-23  Charlie Zender  <zender@uci.edu>

	* NERSC incident INC0143724: ncremap/ncclimo Cori module load ncl/6.4.0 not 6.5.0

2019-10-21  Charlie Zender  <zender@uci.edu>

	* ncremap accepts -W (--wgt_opt) = 'tempest' to use TR for MWF-mode with .nc files (requested by Qi Tang)

	* ncremap warn when -a tempest used without -W wgt_opt_usr

2019-10-19  Charlie Zender  <zender@uci.edu>

	* Improve documentation of -a tempest

2019-10-16  Charlie Zender  <zender@uci.edu>

	* Install/benchmark ESMF 8.0.0 which performs slightly worse than 7.1.0r

	* Successfully built NCO including ncap2 with clang-mp-9.0 on MacOS 15 Catalina

2019-10-14 Henry Butowsky  <henryb@hush.com>

        * Fix --json output of NC_FLOAT and NC_DOUBLE. Eliminate trailing '.' (illegal in JSON), e.g., '1234567.' is now output as '1234567'

2019-10-13  Charlie Zender  <zender@uci.edu>

	* Test and reject hypothesis that aggregating formulae into one	line improves accuracy

	* Introduce eps_ill_cnd and demonstrate that triangular ill-condition branch never helps
	Set eps_ill_cnd = 1.0e-15 for now, this significantly improves ne30 and ne120 accuracy

2019-10-12  Charlie Zender  <zender@uci.edu>

	* Quantify bias reduction after normalizing by ratio of	true-to-computed area
	This worsens global statistics, so do not turn this on by default

	* Re-compute area_a, area_b for map-file output, even if present in grid-files

2019-10-11  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.2-alpha09 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.2-alpha09: Malasana';git push
	git tag -a 4.8.2-alpha09 -m 'ncremap vrt_nm, CMIP6 metadata, rnr=0.0 == destonly, centroid decomposition, fix n2s gss nfr, HRRR, cap fix';git push --tags

	* Merge Henry's fix for Cap grids

	* Clarify 1-based indexing rule in map-file metadata

2019-10-09  Charlie Zender  <zender@uci.edu>

	* Add rgr->cf_units and rgr->erwg_units flags to ensure NCO produces ERWG 7.1.0r-compliant SCRIP-format grid files, which currently only means that 'units' must be 'degrees' not CF-compliant 'degrees_north' and 'degrees_east'

	* Add NWS HRRR variables gridlat_0, gridlon_0, and dimensions xgrid_0, ygrid_0 to regridder database

2019-10-08  Charlie Zender  <zender@uci.edu>

	* Fix nco_grd_nfr() to report/provide accurate latitude bounds for n2s Gaussian grids

	* Fix nco_grd_nfr() to produce positive areas for n2s Gaussian grids

	* Increase matching tolerance for Gaussian grid inferral from 1.0e-7 to 1.0e-6 to recognize T62 grids in NCEP/DOE I & II reanalyses

2019-10-07  Charlie Zender  <zender@uci.edu>

	* Allocate extra boundary to store centroid information only if necessary

2019-10-05  Charlie Zender  <zender@uci.edu>

	* Full working implementation of centroid method

2019-10-04  Charlie Zender  <zender@uci.edu>

	* Debugging centroid method (currently borken)

	* Add ply_tri_mth and tri_arc_typ to regridder database

	* Implement centroid method for polygonal decomposition into triangles

	* Case-insensitive matching for map-file attributes

2019-10-03  Charlie Zender  <zender@uci.edu>

	* Ensure non-ESMF map-files perform same re-normalization as ESMF "destonly" map-files

	* Rewrite nco_rgr_wgt(), nco_grd_nfr(), nco_grd_mk() metadata code with new function nco_char_att_get()

	* Implement applicable required and suggested metadata in map-file as per CMIP6 Specifications for Regridding Weights

	* Rewrite map-file metadata code with new function nco_char_att_get()

2019-10-02  Charlie Zender  <zender@uci.edu>

	* Replace all nco_inq_att_flg calls in regridder with cleaner nco_char_att_get()

	* Rewrite map-file ID code using new function nco_char_att_get()

	* Add ncremap --vrt_nm option to specify vertical coordinate input/output name for pure pressure grids

	* Output interpolated to pure pressure grid defaults to same vertical coordinate name as input

	* Massive merge of Henry's improved map algorithms

2019-10-01  Charlie Zender  <zender@uci.edu>

	* Prevent plev_nm_in definition in output file when plev_nm_in != lev_nm_out

	* Update ANNOUNCE, document ilev_nm, lev_nm, and plev_nm in nco.texi

	* Deprecate ALM from ncremap/ncclimo options

2019-09-30  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.2-alpha08 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.2-alpha08: Svadhyaya';git push
	git tag -a 4.8.2-alpha08 -m 'MacOS 10.14.6 xcode 11 macports 2.6.0 gcc 9.2 issues;ncremap sgs back-compatability, vrt prs tm_nbr fix ilev fix;nco.texi rgr';git push --tags

	* Account for vertical layers in clever interface pressure memory allocation, then deprecate it as too clever

	* Prevent taking double logarithm if input and output interface pressures

	* Change default vertical interpolation back from linear to logarithmic

	* Add vrt_ntp, vrt_xtr synonyms to ncks

2019-09-29  Charlie Zender  <zender@uci.edu>

	* Allow users to specify pressure coordinate name with plev_nm_in

	* Always define prs_ntf in case no prs_mdp variables are extracted in vertical interpolation

2019-09-27  Charlie Zender  <zender@uci.edu>

	* Ensure ilev name and size match lev name and size for	pure-pressure vertical grids

	* Ensure tm_nbr >= 1 for pure-pressure vertical grids

	* Define and check-for ilev_nm_in == NULL to fix interpolation to pressure-levels

	* Clarify ncks -H == --data option in nco.texi

	* ncremap do not enter file loop for map-only invocations: fl_nbr=0 so bch_nbr=0

2019-09-26  Charlie Zender  <zender@uci.edu>

	* Document simultaneous vertical/horizontal regridding

	* Document ncremap vertical interpolation algorithm options vrt_ntp=lin|log

2019-09-24  Charlie Zender  <zender@uci.edu>

	* Implement landfrac and landmask defaults with -P sgs for back-compatibility

	* Deprecate last vestiges of old-SGS and GSG code from ncremap

2019-09-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.2-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.2-alpha07: XTerra/Sukhasana';git push
	git tag -a 4.8.2-alpha07 -m 'ncremap/ncclimo bch/job loops;ncremap sgs_frc external, re-do SGS, parallelize all, simultaneous hrz vrt;nco.texi rgr';git push --tags

	* Allow simultaneous horizontal/vertical regridding invocation in ncremap

	* Parallelize ncremap main loop except map generation so any single invocation of ncremap should now regrid multiple files simultaneously via background and MPI parallelism, and multiple ncremap invocations will not conflict. Previously that was only true for input files that required no special handling. Now MPAS, RRG, D2F, PDQ blocks are all parallel-safe.

	* Add HDF5_USE_FILE_LOCKING=FALSE solution to NC_EHDFERR documentation

2019-09-18  Charlie Zender  <zender@uci.edu>

	* Remove most impediments to simultaneous vertical/horizontal regridding

	* Parallelize SGS post-processing

	* Replace convoluted SGS implementation (juggling grids/maps) with elegant GSG method.
	Continue to use SGS naming, so existing SGS users must change calling syntax.

2019-09-17  Charlie Zender  <zender@uci.edu>

	* Allow sgs_frc_nm to contain external local filename, then slash, then actual sgs_frc_nm

	* Streamline batch loops in ncremap, ncclimo sbs and sbs rgr, and ncclimo clm dly loops

2019-09-12  Charlie Zender  <zender@uci.edu>

	* Document regridding algorithm in nco.texi

	* NCO 4.8.2-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.2-alpha06: XTerra';git push
	git tag -a 4.8.2-alpha06 -m 'rhea SLURM;ncremap GSG ELM/MPAS-SI, ntp_mth;ncks chk_nan';git push --tags

	* Make "ESMF renormalization" of fields without missing values (i.e., "destarea") opt-in rather than default
	"destarea" and frac_b = frc_dst together set flg_frc_nrm
	Formerly flg_frc_nrm triggered ESMF renormalization by default
	Users must now explicitly set --rnr_thr to a value in [0.0,1.0]	(and have flg_frc_nrm be true) to trigger it
	This keep conservative maps conservative by default
	NB: This "ESMF renormalization" normalizes by frac_b == frc_dst regardless of rnr_thr

2019-09-10  Charlie Zender  <zender@uci.edu>

	* GSG regridding works for MPAS Seaice. Yay!

	* Re-do GSG normalization to allow for sgs_frc_out == 0.0 because MPAS-Seaice timeMonthly_avg_iceAreaCell is time-mean area-fraction of sea ice and is usually zero

	* ncremap make -P mpasseaice exactly synonymous with -P mpascice which now always calls GSG regridding

	* Cause nco_chk_nan() to exit noisily with nco_exit(EXIT_FAILURE)

	* MPAS GSG timeMonthly_avg_absorbedShortwaveFluxInitialArea has NaNs, why?

	* Eliminate wgt_vld_out from GSG algorithm for variables with missing values

	* MPAS GSG ice-fraction now borken, why? Fixed (was skipping that one variable)

	* Fix uninitialized cnv structure

	* Multi-level ELM GSG with threads works well. Yay!

	* GSG fails on ELM with --thr=2, SGS succeeds, why? FIXED out-of-bounds idx issue

	* Implement GSG for all combinations of levels and missing values

2019-09-09  Charlie Zender  <zender@uci.edu>

	* Fix GSG by double-weighting (by sgs_frc_in and overlap weight) input values, normalized by sgs_frc_out

	* In GSG, pass sgs_msk_nm through ncremap

2019-09-08  Charlie Zender  <zender@uci.edu>

	* In GSG, compute sgs_msk (when requested) based on sgs_frc

	* In GSG, normalize all variables (except sgs_frc and sgs_msk) by wgt_vld_frc

2019-09-07  Charlie Zender  <zender@uci.edu>

	* Check for _FillValue in sgs_frc_in (e.g., ELM landfrac) in GSG regridding

2019-09-06  Charlie Zender  <zender@uci.edu>

	* Expose linear/logarithmic vertical interpolation option to user control with --ntp_mth=lin|log

2019-09-02  Charlie Zender  <zender@uci.edu>

	* Update rhea queue to SLURM

2019-08-27  Charlie Zender  <zender@uci.edu>

	* Build on rhea with bld/Makefile, deprecate old rhea modules

	* NCO 4.8.2-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.2-alpha05: Oceanside';git push
	git tag -a 4.8.2-alpha05 -m 'ncremap: OpenMP5.0	work;blues,cheyenne,rhea updates';git push --tags

	* Update MANIFEST, annotate libnco.h

	* Use /gpfs/alpine not /lustre/atlas1 as ~/data on rhea and restore grids/maps contents there

	* Fix bld/Makefile by deprecating ncap.h reference in mpncwa.c

2019-08-23  Charlie Zender  <zender@uci.edu>

	* Quiet debugging output in nco_rgr_wgt()

	* Add stubs for OpenMP5.0 support to exploit GPUs on GCC >= 9.0

2019-08-21  Charlie Zender  <zender@uci.edu>

	* Add ERWG to ncremap on blues via NCO_PATH_OVERRIDE=Yes and module load ncl

	* Remove 'soft' command from blues NCO_PATH_OVERRIDE code since	CentOS7 partition uses 'module'

2019-08-20  Charlie Zender  <zender@uci.edu>

	* Merge Henry's patch to allow SCRIP grids without grid_imask or grid_area variables

	* Fix handling of fnc_nm and fp_stderr by Intel Compiler in nco_ply_lst.c

2019-08-14  Charlie Zender  <zender@uci.edu>

	* Add config.sub and workaround Linux-issue that hangs on config.guess

2019-08-13  Charlie Zender  <zender@uci.edu>

	* Switch cheyenne build from Intel to GNU, update to 9.1.0 compilers in ncremap/ncclimo

2019-08-12  Charlie Zender  <zender@uci.edu>

	* Update config.guess from ~2013 version to GNU 20190103 version to fix Cheyenne hang

2019-08-09  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.2-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.2-alpha04: BrainCamp';git push
	git tag -a 4.8.2-alpha04 -m 'Mesh-generation re-write accurate for ~ne120 with OpenMP enhancement';git push --tags

	* Massive changeset by Henry to improve intersection mesh generation including new functions nco_sph_seg_int_nw(), pre-intersect scan in nco_sph_intersect_pre(), nco_poly_vrl_do(), nco_sph_centroid(), and nco_sph_inside_mk(), new nco_sph_seg_int() algorithm, nco_poly_vrl_do(), nco_sph_centroid(), and nco_sph_inside_mk(), moved kd tree creation from nco_poly_lst_mk_vrl_sph() to nco_msh_mk(), new interpolation and nco_sph_metric() functions, refined DIST_TOLERANCE, OpenMP, #define code paths to allow for compiler-specific OpenMP implementations

2019-08-08  Charlie Zender  <zender@uci.edu>

	* Clarify in nco.texi when msk_src/msk_dst/msk_out are used

2019-08-07  Charlie Zender  <zender@uci.edu>

	* Use libnetcdf11 instead of libnetcdfc7 in .travis.yml to fix TravisCI breakage

2019-08-06  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.2-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.2-alpha03: Kanaka';git push
	git tag -a 4.8.2-alpha03 -m 'ncremap MPAS BGC';git push --tags

	* nco.texi update ncremap -P mpas documentation for PDQ issues

	* ncremap improve error message when spatial dimensions are not most-rapidly-varying (MRV)

	* Tweak Cori build to find UDUnits

	* Patch ncremap to work with MPAS Ocean files that contain BGC dimensions: R3, FOUR

2019-08-01  Charlie Zender  <zender@uci.edu>

	* Revamp Cori build script to work with GCC 8.2

2019-07-26  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.2-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.2-alpha02: Molokini';git push
	git tag -a 4.8.2-alpha02 -m 'ncremap bilin UKMO, TR output formats, drop --volumetric from fv2se_stt;ncap2 --output fix';git push --tags

	* Propagate format flags to TR for Classic|Offset64Bits|Netcdf4|Netcdf4Classic

	* Reformat Henry's changes to nco_fl_utl.c, restore nco_sntz_sng() comment for possible reactivation

	* Henry fixed ncap2 --output to once again work with single command-line files

	* Allow "none" normalization type for bilinear regridding which	UKMO SCRIP files set to "none" as per Craig MacLachlan

2019-07-18  Charlie Zender  <zender@uci.edu>

	* Propagate "--out_format offset64bits" to TR when netCDF 64BIT_OFFSET format selected

2019-07-16  Charlie Zender  <zender@uci.edu>

	* Remove "--volumetric" from fv2se_stt per Mark Taylor and Paul Ullrich

2019-07-09  Charlie Zender  <zender@uci.edu>

	* Update to GCC9 on MacOS X

2019-07-02  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.2-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.2-alpha01: Giant Baby Step';git push
	git tag -a 4.8.2-alpha01 -m 'Functionally identical to 4.8.1';git push --tags

2019-07-01  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.1 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.1: INDICES';git push
	git tag -a 4.8.1 -m 'ncclimo job_nbr csn;ncremap msh_fl, n2s CCW gss nfr, IFS, vrt_xtr mss_val;ncap2 -O;copyright';git push --tags

	* Fix ncap2 use of single-file with -O if file already exists

	* Add --no_amwg synonym

2019-06-22  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.1-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.1-beta01: Iron Champs Elys√©e';git push
	git tag -a 4.8.1-beta01 -m 'ncclimo job_nbr csn;ncremap msh_fl, n2s CCW gss nfr, IFS, vrt_xtr mss_val';git push --tags

	* When foo.nc already exists, "ncap2 -O -s 'one=1' ~/foo.nc" works and "ncap2 -s 'one=1' ~/foo.nc" is borken

2019-06-15  Charlie Zender  <zender@uci.edu>

	* ncremap/ncclimo print NCO_PATH_OVERRIDE HINT when ncks fails due to link error

	* nco_ntp_vrt() correct prs_min/max_in/out idx_fst when detecting extrapolation

	* NCO 4.8.1-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.1-alpha07: Kahakai';git push
	git tag -a 4.8.1-alpha07 -m 'ncremap/ncclimo vrt_xtr;ntp_vrt mss_val min max';git push --tags

	* ncclimo print correct regridded filename at end when no_ntv_tms requested

	* ncclimo incorporate vertical extrapolation type vrt_xtr option

	* nco_ntp_vrt() set flag to add _FillValue based on both maximum and minimum midpoint pressure

	* nco_ntp_vrt() set flag to add _FillValue based on maximum midpoint pressure not surface pressure

	* ncremap incorporate vertical extrapolation type vrt_xtr option

2019-06-14  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.1-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.1-alpha06: School of Rock';git push
	git tag -a 4.8.1-alpha06 -m 'ncremap --msh_fl, rename ESMF xtr_* to esmf_*, IFS vrt_fl w/lev, n2s CCW;Cori GCC not Intel;ncks xtr_mth mss_val;update Makefile/libnco.h; add copyright/license to msh code';git push --tags

	* Add copyright/license to new regridding files nco_ply.c/h, nco_crt.c/h, nco_sph.c/h, nco_ply_lst.c/h, nco_kd.c/h

	* Always use n2s algorithm during Newton-Raphson construction of s2n latitudes (later flipped to n2s)

2019-06-13  Charlie Zender  <zender@uci.edu>

	* Add CW->CCW filter to nco_grd_mk() and nco_grd_nfr() so n2s grids work with TR

2019-06-12  Charlie Zender  <zender@uci.edu>

	* Rename ESMF extrapolation options from "xtr_xyz" to "esmf_xyz"

	* Correctly read lev dimension name from vrt_fl during ECMWF IFS processing

2019-06-08  Charlie Zender  <zender@uci.edu>

	* Move nco_nmn_get() and nco_lbr_vrs_prn/() from nco_ctl.c to nco_scm.c, re-jigger version banner

	* nco_ntp_vrt() handle xtr_mth option with rgr parameter database

	* nco_ntp_vrt() add _FillValue attributes if necessary when missing value extrapolation requested

	* nco_ntp_vrt() pre-screen to determine whether extrapolation necessary

2019-06-07  Charlie Zender  <zender@uci.edu>

	* ncremap outputs intersection meshfile with --msh_fl

	* Cori add '-C knl' to interactive queue requests

	* Remove gsl and udunits modules from NCO_PATH_OVERRIDE actions on Cori

	* NCO 4.8.1-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.1-alpha05: Tampa Mockingbird';git push
	git tag -a 4.8.1-alpha05 -m 'ncremap MWF w/o tempest, blues MPI, xtr_fll_msv, AppVeyor fix';git push --tags

	* ncremap skip Tempest alg_typ 'tempest' in MWF mode when called with .nc grids

	* ncclimo/ncremap choose correct batch and MPI type for	blues/anvil, requested by Balwinder Singh

	* nco_ntp_vrt() missing value extrapolation works, still need to add _FillValue attribute and option

	* nco_ntp_vrt() add hooks to create _FillValue attribute after extrapolating to missing values

2019-06-06  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() add stubs for extrapolation to missing value

2019-06-05  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() re-use existing dmn_ids_out array to fix new AppVeyor breakage

	* Merge Filipe's patch to fix old AppVeyor breakage

2019-06-04  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.1-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.1-alpha04: Taco Al Pastor';git push
	git tag -a 4.8.1-alpha04 -m 'ncremap --amwg_links, gss ntf n2s,	ECMWF IFS vrt ntp;ncks msh_fl';git push --tags

	* Verify vertical interpolation of ECMWF now works

	* Compensate for different definitions of hya? between ECMWF and CAM/EAM

	* Fix Newton-Raphson computation of Gaussian grid interfaces for n2s grids (including ECMWF)

2019-06-03  Charlie Zender  <zender@uci.edu>

	* Interpolation of hybrid grids from ECMWF IFS input files appears to work

2019-06-02  Charlie Zender  <zender@uci.edu>

	* Change --lnk_flg to true option with argument, add --amwg_links antonym flag to --no_amwg_links

	* nco_rgr.c print absolute convergence at last iteration step for failed Gaussian calculations

	* Add stubs to understand and interpolate hybrid grids from ECMWF IFS input files

	* Address warnings found by Pedro with MSVC Studio Version 19

2019-05-31  Charlie Zender  <zender@uci.edu>

	* Allow ncremap to work when ERWG is not found and not needed

2019-05-30 Henry Butowsky  <henryb@hush.com>

        * ncks --rgr msh_fl=msh.nc for SCRIP-formatted netCDF overlap mesh

2019-05-29  Charlie Zender  <zender@uci.edu>

	* Fix mis-formatted fprintf() statements

2019-05-27  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.1-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.1-alpha03: Compy';git push
	git tag -a 4.8.1-alpha03 -m 'ncremap/ncclimo compy, job_nbr csn;';git push --tags

	* nco_ntp_vrt() add stubs for depth coordinate

2019-05-26  Charlie Zender  <zender@uci.edu>

	* ncclimo use job_nbr in seasonal climos

	* Prevent automatic writing of output grid to nco_map_tst_out.nc

	* Ensure compy MPI mode uses srun

	* Deprecate edison and hopper from ncremap/ncclimo scripts

2019-05-25  Charlie Zender  <zender@uci.edu>

	* Add compy to ncremap/ncclimo HPC database

2019-05-22  Charlie Zender  <zender@uci.edu>

	* Expand HINT when GenerateOverlapMesh fails

2019-05-19  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.1-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.1-alpha02: Knee Wrench';git push
	git tag -a 4.8.1-alpha02 -m 'ORourke BSD license/copyright;ncclimo vrt_fl';git push --tags

	* ncclimo MPAS branch passes vertical interpolation arguments

2019-05-18  Charlie Zender  <zender@uci.edu>

	* Plumb ncks and nco_rgr_ini() to accept vrt_fl directly

	* Pass vertical interpolation arguments from ncclimo to ncremap

	* Insert copyright for Joseph O'Rourke and BSD License into nco_crt.c and nco_sph.c

	* NCO 4.8.1-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.1-alpha01: Salted Pig';git push
	git tag -a 4.8.1-alpha01 -m 'Nearly functionally identical to 4.8.0;ncclimo/ncremap -p serial';git push --tags

	* ncclimo/ncremap -p serial is synonym for -p nil

2019-05-15  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.0 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0: Becoming';git push
	git tag -a 4.8.0 -m 'ncremap se2se/fv2fv, no_stdin, vrt_fl, xcl_var;ncclimo job_nbr, OMP_PROC_BIND;ncap2 no foo.nc;ncks chk_nan';git push --tags

	* Add --vrt_fl stubs to ncclimo

	* Merge Henry's latest RLL weight-generation code

2019-05-12  Charlie Zender  <zender@uci.edu>

	* Change tst-wrt-map*.nc to nco_map_tst*.nc

	* Change --no-crd, --no-coords to --no_crd, --no_coords

	* Add synonyms --xcl_ass_var, --xtr_ass_var

2019-05-11  Charlie Zender  <zender@uci.edu>

	* Document NCO regridding algorithm

	* ncremap invoke NCO weight-generation with alg_typ=nco_xxx :)

	* NCO 4.8.0-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0-beta01: Spaghetti';git push
	git tag -a 4.8.0-beta01 -m 'vrt ntp timeseries';git push --tags

	* Update documentation for time-varying vertical grids

	* nco_ntp_vrt() Verify that time-series interpolation works for	hybrid grids

	* nco_ntp_vrt() Move pressure calcuations into time loop

	* nco_ntp_vrt() Copy non-vertical variables only once (on first timestep)

2019-05-10  Charlie Zender  <zender@uci.edu>

	* Read/write vertical variables in single timeslices when output vertical grid time-varies

2019-05-09  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.0-alpha12 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0-alpha12: UCLA';git push
	git tag -a 4.8.0-alpha12 -m 'ncclimo no_stdin, aims4/acme1 NCO_PATH_OVERRIDE';git push --tags

	* Document --no_stdin

	* Add --no_stdin to ncclimo to prevent false-positive stdin detection in CWL code

2019-05-06  Charlie Zender  <zender@uci.edu>

	* Add stubs for input vertical grid timeseries

	* Add cf_grp.cdl as template/test file for CF Conventions

2019-04-30  Charlie Zender  <zender@uci.edu>

	* ncremap/ncclimo add paths for aims4/acme1 to NCO_PATH_OVERRIDE section

2019-04-24  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.0-alpha11 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0-alpha11: Jazz Fest';git push
	git tag -a 4.8.0-alpha11 -m 'NCO_PATH_OVERRIDE opt-in;job_nbr=12,OMP_PROC_BIND ncks,ncra;ncclimo/ncremap --xcl_var;documentation';git push --tags

	* ncremap --vrt_fl now obeys --vars=var_lst

	* Document --xcl_var

	* ncremap/ncclimo Fix --nco_opt to not overwrite filetype choice

	* ncremap/ncclimo --xcl_var toggles extraction list to exclusion list

2019-04-23  Charlie Zender  <zender@uci.edu>

	* ncremap, ncclimo set OMP_PROC_BIND=false as script environment variable to prevent MPI breakage

2019-04-22  Charlie Zender  <zender@uci.edu>

	* Change default job_nbr from 2 to var_nbr in splitter

	* Document --job_nbr in nco.texi

	* Document --vrt_fl in nco.texi

2019-04-21  Charlie Zender  <zender@uci.edu>

	* Change NCO_PATH_OVERRIDE override default from opt-out to opt-in

2019-04-20  Charlie Zender  <zender@uci.edu>

	* ncremap, ncclimo set OMP_PROC_BIND=false when calling ncks, ncra to speed-up Cori KNL Intel builds

	* NCO_rgr.pm, nco_exit_lbr_rcd() handle netCDF libraries 4.6.3,	4.6.4, 4.7.0

	* nco_rgr_wgt() re-arrange initialization code to suit layer-by-layer regridding, use memset()

	* nco_rgr_wgt() remove ~150 lines of unused/unfinished Non-MRV and extensive variable (!flg_mrv, flg_xtn) code

2019-04-19  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.0-alpha10 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0-alpha10: Hanna';git push
	git tag -a 4.8.0-alpha10 -m 'ncks --chk_nan;OMP_PROC_BIND=false ncrcat';git push --tags

	* ncclimo set OMP_PROC_BIND=false when calling ncrcat to speed-up Cori KNL Intel builds

	* Pass thr_nbr into OpenMP loops as shared variable, avoid omp_get_thread_num() when thr_nbr < 2

	* ncra.c only call nco_omp_ini() when thr_nbr > 1

	* ncclimo splitter defaults to 1 OpenMP thread

	* ncclimo print OpenMP thread request in output header

	* Re-unify Windows/UNIX block in nco_netcdf.h to #include <netcdf_mem.h> and define ncmemio struct

	* Deprecate NC_HAVE_META_H from CMakeLists.txt

2019-04-18  Charlie Zender  <zender@uci.edu>

	* ncks add --chk_nan option to check input file for NaNs and exit(EXIT_FAILURE) if found
	Feature requested by Matthew Thompson of NASA

2019-04-17  Charlie Zender  <zender@uci.edu>

	* Noel Keen solves Cori-KNL slowness issue, reduces Min Xu benchmark time from ~27m30s to ~2m30s

	* Appveyor errors are due to CMakeLists.txt flaw that overrides	correct NC_LIB_VERSION

2019-04-16  Charlie Zender  <zender@uci.edu>

	* Fail to solve Appveyor errors on Windows by never defining NC_memio for Windows for netCDF <= 4.6.1

2019-04-15  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.0-alpha09 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0-alpha09: Boulder Bay Proposal';git push
	git tag -a 4.8.0-alpha09 -m 'ncap2 allows no input file;ncremap --no_stdin';git push --tags

	* ncap2 uses FORCE_OVERWRITE to decide on append mode vs. dummy	input file in nco_fl_lst_mk()

2019-04-14  Charlie Zender  <zender@uci.edu>

	* Changes to kd.h and nco_crt.h suggested by Pedro for Windows compatibility

	* ncremap add option --no_stdin flag to explicitly turn-off checking stdin for input file list.
	Xylar realized this is necessary for ncremap to work in build environments that co-opt stdin for other purposes.

	* Allow ncap2 to have no positional arguments when no input filename and output specified by -o fl_out

2019-04-10  Charlie Zender  <zender@uci.edu>

	* Add stubs for ncap2 to use nco_fl_dmm_mk() to circumvent required input file argument

	* NCO 4.8.0-alpha08 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0-alpha08: Whiskey Ginger Beer';git push
	git tag -a 4.8.0-alpha08 -m 'ncremap --vrt_fl pure pressure, CMIP ta & zg, mnt ncr/dcr';git push --tags

	* nco_ntp_vrt() Fix and validate increasing and decreasing input/output vertical grids

2019-04-08  Charlie Zender  <zender@uci.edu>

	* ncremap: Correct bug introduced in 4.8.0-alpha08 that only regrids when dbg_lvl > 1 (DOH!) noticed by Min Xu

2019-04-04  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() allow monotonically decreasing input or output grids

2019-04-03  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() Plumb for pure pressure grids

	* nco_ntp_vrt() Treat variables named "ta" and "zg" with temperature and geopotential height extrapolation rules, respectively

2019-04-01  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.0-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0-alpha07: Bond-o';git push
	git tag -a 4.8.0-alpha07 -m 'ncremap --vrt_fl features and optimizations';git push --tags

2019-03-31  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() allocate and define only needed pressure grids,	reduce memory consumption by 2x if ilev not needed

	* nco_ntp_vrt() extrapolate geopotential height using hypsometric equation on LHS and RHS, fixes Z3

	* nco_ntp_vrt() implement poor subterranean geopotential extrapolation for variables named Z3

	* nco_ntp_vrt() implement and validate subterranean temperature extrapolation for variables named T

	* nco_ntp_vrt() re-factor extrapolation flags into structures with an enumerated constant for each type

	* nco_ntp_vrt() isolate log(pressure) assumption

	* nco_ntp_vrt() allow possibility that PS has time dimension > 1

2019-03-30  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.0-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0-alpha06: Marathon Man';git push
	git tag -a 4.8.0-alpha06 -m 'ncremap --vrt_fl';git push --tags

	* nco_ntp_vrt() verify interpolation works on cami dataset

	* nco_ntp_vrt() verify interpolation looks OK (i.e., nearest neighbor above model top) on EAM L30->L72

	* nco_ntp_vrt() verify identity interpolation is BFB on EAM L30->L30

	* nco_ntp_vrt() use 1D interpolation code from CSZ's libcsz.a library source code ~/sw/c++/vec.hh

2019-03-29  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() compute ilev_out and lev_out if not supplied in	vertical grid file

	* nco_ntp_vrt() use horizontal grid from input dataset if vertical grid file does not have horizontal grid

2019-03-28  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() adjust OpenMP pragmas to work on old compilers

	* nco_ntp_vrt() swap _in and _out from file-based to grid-based meanings to increase code clarity

2019-03-27  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() defines all variables and copies their metadata to output file

	* nco_ntp_vrt() fill-in output file with hybrid coordinate vertical grid data and metadata

2019-03-26  Charlie Zender  <zender@uci.edu>

	* nco_ntp_vrt() compute midpoint and interface pressures on input and output grids

	* ncremap call vertical OR horizontal interpolation routines. ncks add skeleton nco_ntp_vrt().

	* ncremap add stubs for vertical coordinate file

	* NCO 4.8.0-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0-alpha05: Dawn Wall';git push
	git tag -a 4.8.0-alpha05 -m 'ncemap SGS MPAS-SeaIce, GSG protoype; ncclimo Cori KNL bms, orphans';git push --tags

	* ncremap -P mpascice can employ old SGS mode to evaluate new GSG mode

	* ncremap nco_rgr_wgt() remove extraneous test on sum total of sgs_frc_out

2019-03-25  Charlie Zender  <zender@uci.edu>

	* ncap2 more precise ERROR message that allows output filename to equal input filename

	* Use fp_stdout not stdout in OpenMP regions

2019-03-24  Charlie Zender  <zender@uci.edu>

	* ncremap -P mpascice now invokes sgs_frc normalization

	* ncremap print more accurate description of pre-processing

	* Splitter prints more explicit description of parallelism/looping

2019-03-23  Charlie Zender  <zender@uci.edu>

	* ncclimo when parent dies, kill instead of orphan or reap children

	* Simplify sgs_frc_out regridding, add has_mss_val branch to sgs_frc normalization

2019-03-22  Charlie Zender  <zender@uci.edu>

	* Add stubs to read sgs_frc in nco_rgr.c

	* Allow nco_rgr_wgt() to work with nco_rgr_mpf_typ=unknown

2019-03-21  Charlie Zender  <zender@uci.edu>

	* Annotate nco_rgr_wgt() major loops

2019-03-15  Charlie Zender  <zender@uci.edu>

	* nco_rgr_wgt() read mask_b, if present, from Tempest maps

	* ncclimo/ncremap print details of parallelism strategy in header

	* Re-learn and document in code ncclimo and ncremap node-allocation rules

	* ncremap fix cmd_mpi assignment on cooley

2019-03-14  Charlie Zender  <zender@uci.edu>

	* Diagnose and explain when ERWG is found yet cannot run due to, e.g., dynamic linking errors

	* NCO 4.8.0-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0-alpha04: Sand';git push
	git tag -a 4.8.0-alpha04 -m 'ncclimo --job_nbr, cooley, Henry regridding';git push --tags

	* Clean-up compiler warnings

	* Merge Henry's regridding code

2019-03-13  Charlie Zender  <zender@uci.edu>

	* Use correct home bin/lib path when on cooley compute nodes

	* ncclimo fine-grain parallelism in monthly loop of regular monthly climos

	* Deprecate ACME from ncclimo/ncremap

2019-03-12  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.0-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0-alpha03: 55';git push
	git tag -a 4.8.0-alpha03 -m 'nco_mpf_typ_nco, mpirun -hosts cooley, SAS formula';git push --tags

	* Add NCO map-file type to nco_rgr_mpf_typ in nco_rgr.c so we can eat our own dogfood

2019-03-11  Charlie Zender  <zender@uci.edu>

	* Change Cooley DATA from ClimateEnergy_2 to OceanClimate_2

2019-03-10  Charlie Zender  <zender@uci.edu>

	* Cooley mpirun now uses -hosts instead of -H for hostname option

2019-03-05  Charlie Zender  <zender@uci.edu>

	* Use surface angle not interior angle in SAS formula

	* Implement SAS formula where L'Huilier's formula is ill-conditioned

2019-03-03  Charlie Zender  <zender@uci.edu>

	* Add stubs for TR quasi-equal-area mode

2019-02-28  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.0-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0-alpha02: 300-degree Club';git push
	git tag -a 4.8.0-alpha02 -m 'ncremap fv2fv MPI;ncks JSON deprecate type;ncclimo fix drc_out nd_fl bug';git push --tags

	* Insert MPI parallelism commands for cheyenne, constance, theta from ncclimo into ncremap

	* ncclimo/ncremap Add proper error diagnostics to mkdir failures

	* ncclimo create drc_out before using for nd_fl, fixes bug introduced in 4.7.9

2019-02-27  Charlie Zender  <zender@uci.edu>

	* Add HINT to parallelism error in ncclimo/ncremap

	* Add --mono to se2se and --mono3 --nonconserve to fv2fv

2019-02-26  Charlie Zender  <zender@uci.edu>

	* Omit JSON variable "type" clause when jsn_var_fmt=0

	* Add JSON stubs to distinguish between attribute and variable format levels

2019-02-24  Charlie Zender  <zender@uci.edu>

	* Explain how EHDFERR can be caused by un/mis-configured HDF5_PLUGIN_PATH

	* ncremap add Tempest alg_typ fv2fv/rll2rll for finite volume to finite volume

2019-02-22  Charlie Zender  <zender@uci.edu>

	* NCO 4.8.0-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.8.0-alpha01: Thin Mints';git push
	git tag -a 4.8.0-alpha01 -m 'Functionally identical to 4.7.9;ncremap se2se';git push --tags

	* ncremap add Tempest alg_typ se2se/cs2cs for spectral element cube-sphere to cube-sphere

2019-02-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.9 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.9: Guru Benji';git push
	git tag -a 4.7.9 -m 'ncremap sgs fix, sgs --map, lat/lon_dmn_nm, whitespace ok, mpas depth, add_depth.py;ncclimo nd_fl, nd_nbr fix;ncrcat rec_apn rbs;ncatted --hdn';git push --tags

	* Update release metadata

	* NCO 4.7.9-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.9-beta01: Waterfalls';git push
	git tag -a 4.7.9-beta01 -m 'CDL _NoFill, _Filter, _Endianness fixes;ncremap/ncclimo die+report linker errors';git push --tags

2019-02-18  Charlie Zender  <zender@uci.edu>

	* Always build split.nc so ncks regression test #120 can pass

	* ncremap/ncclimo die sooner when NCO is found but cannot run due to, e.g., dynamic linking errors

	* Replace $? by "$?" since $? can be undefined, e.g., when command failed due to link error
	Then conditions like "if[ $? -eq 0 ];" cause syntax error that obscures initial error

2019-02-17  Charlie Zender  <zender@uci.edu>

	* Print _Endianness for floating point types not just integers as before

	* Print _Filter values not number of values

	* Print _Filter filter ID

	* Emulate changes to netCDF and print _NoFill (not _NOFILL) values as true or false not 1 or 0

	* Add bzip2.cdl for filter testing

	* ncclimo exit with error if --dpt_fl invoked without regridder

2019-02-16  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.9-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.9-alpha07: Ed';git push
	git tag -a 4.7.9-alpha07 -m 'ncremap lat/lon_dmn_nm, clm_flg, alg_opt';git push --tags

	* Update ncremap documentation accordingly

	* ncremap use lat_dmn_nm/lon_dmn_nm for lat_dmn_nm_out/lon_dmn_nm_out

2019-02-15  Charlie Zender  <zender@uci.edu>

	* ncremap make --clm_flg a true flag with same meaning as -C

	* ncremap refactor to always define algorithm diagnostic alg_opt for six Tempest-types

2019-02-14  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.9-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.9-alpha06: Trash bags';git push
	git tag -a 4.7.9-alpha06 -m 'ncclimo nd_fl, nd_nbr fix;ncremap sgs --map, whitespace ok;GCC9 default(none) removal;clarify NC_EHDFERR, NC_EBADCHUNK errors;DGR, BG2 progress';git push --tags

	* ncremap double-quote all filenames used in command strings and verify whitespace works

	* ncremap double-quote input, output, and map-file names to allow white-space in filepaths

2019-02-12  Charlie Zender  <zender@uci.edu>

	* Merge patch by Orion Poplawski to eliminate default(none) pragma for GCC9 OpenMP 5.0

2019-02-07  Charlie Zender  <zender@uci.edu>

	* Correct some (of many) compiler warnings for GCC 4.8.2 (rhea)

	* Add netcdf.h error codes to nco_netcdf.c

2019-02-06  Charlie Zender  <zender@uci.edu>

	* in.cdl add time_rpt to test sub-cycle hyperslabs

	* ncremap prevent spurious exit when computing named SGS maps when vrb_lvl >= 3

2019-02-05  Charlie Zender  <zender@uci.edu>

	* Cause ncclimo MPI-mode to exit when nd_nbr=0

	* Ensure ncclimo writes nd_fl to writable directory

	* ncclimo print cmd_sbs not cmd_rgr for generated files

	* ncclimo output more explicit information about parallelism job_nbr, var_nbr, nd_nbr

2019-02-03  Charlie Zender  <zender@uci.edu>

	* Differentiate Digit Rounding (DGR, baa=3) from Bit Grooming 2	(BG2, baa=4)

	* Remove default(none) clause to prevent GCC9 errors on missing declaration for fp_stderr

2019-02-02  Charlie Zender  <zender@uci.edu>

	* Add more verbose information for NC_EHDFERR errors

2019-02-01  Charlie Zender  <zender@uci.edu>

	* Add more verbose information for NC_EBADCHUNK errors

2019-01-31  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.9-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.9-alpha05: Kubasek';git push
	git tag -a 4.7.9-alpha05 -m 'd2f doc, ncremap SGS ELM fix';git push --tags

2019-01-30  Charlie Zender  <zender@uci.edu>

	* ncremap implement and verify that Min Xu's modification conserves fields not land area
	Previous ncremap SGS implementation conserved land area not fields
	Conserving fields (slightly) more important so changing to that
	Expect most non-conservation of area will disappear once ELM archives area/landfrac in DP
	My original conservation diagnostic for raw files used an unreliable identity remap
	Dianostic conservation tests should be turned into regression tests

2019-01-28  Charlie Zender  <zender@uci.edu>

	* Investigate _FillValue behavior described by John Wilkin

	* Add stubs for PPC Digit Rounding algorithm of DCG19 and/or Bit Grooming 2 (BG2)

2019-01-25  Charlie Zender  <zender@uci.edu>

	* ncremap rename internal variables as with 'sgs' instead of 'lnd'

	* Add E3SM material on Manual Grid Generation to ncremap documentation

	* Add E3SM material on SGS and RRG options to ncremap documentation

2019-01-23  Charlie Zender  <zender@uci.edu>

	* Add ncra SSC MRO regression test to NCO_rgr.pm

	* ncremap SGS mode fails conservation tests at 10^-4 level
	  Min Xu warns that conv_remap conserves values while ncremap SGS conserves area

2019-01-22  Charlie Zender  <zender@uci.edu>

	* Add stubs for PPC BG2, Bit Grooming version 2 which features dynamic masks

	* Document --d2f in manual and man pages

2019-01-21  Charlie Zender  <zender@uci.edu>

	* ncremap add SGS procedures for mpascice, change prc_typ='mpas' to prc_mpas='Yes'

	* ncremap advertise PPC in usage

2019-01-20  Charlie Zender  <zender@uci.edu>

	* Audit ncremap and add comments on treatment of land vs. sea-ice data

2019-01-19  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.9-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.9-alpha04: Shutdown';git push
	git tag -a 4.7.9-alpha04 -m 'ncremap add_depth.py';git push --tags

	* ncclimo add synonyms, update climo tests to use CMIP6 PI files

	* ncclimo add --dpt_fl option and pass to ncremap

2019-01-15  Charlie Zender  <zender@uci.edu>

	* Fix ncremap flg_grd_only definition to work in SGS mode

2019-01-12  Charlie Zender  <zender@uci.edu>

	* Finish infrastructure for add_depth.py. ncremap --add_depth appears to work.

2019-01-11  Charlie Zender  <zender@uci.edu>

	* Add stubs for MPAS depth coordinate option

2019-01-06  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.9-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.9-alpha03: AOC';git push
	git tag -a 4.7.9-alpha03 -m 'MPAS depth';git push --tags

	* ncremap allow for MPAS depth coordinate after processing by add_depth.py

2019-01-02  Charlie Zender  <zender@uci.edu>

	* End binary source code copyright notice with "--present" to nearly eliminate annual updates

2018-12-12  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.9-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.9-alpha02: Unconventional Diner';git push
	git tag -a 4.7.9-alpha02 -m 'splitter timestamps;mpas no_stg_grd;ncap2 exit_gracefully;get/put_var1 fix;ncrcat rec_apn rbs';git push --tags

	* ncra/ncrcat: Rebase in rec_apn mode using calendar units from destination not source file

2018-12-06  Charlie Zender  <zender@uci.edu>

	* Prevent redefinition of struct NC_memio on Windows

	* Add --msa to man pages, reformat long-options after first in nco_usg_prn()

2018-12-04  Charlie Zender  <zender@uci.edu>

	* ncclimo: Add timestamped notices after each timeseries segment completes

	* ncclimo: Add timestamped notices after completing all full batches and partial batch if any

2018-11-30  Charlie Zender  <zender@uci.edu>

	* Synchronize ncremap and ncclimo host-specific blocks

2018-11-29  Charlie Zender  <zender@uci.edu>

	* Always use --no_stg_grd for prc_typ='mpas'

2018-11-24  Charlie Zender  <zender@uci.edu>

	* ncap2 exit gracefully when no output file specified with netCDF4 input file

	* ncap2 exit gracefully when no -s or -S argument given

2018-11-20  Charlie Zender  <zender@uci.edu>

	* Correctly dereference pointer zero (i.e., NULL) passed as value of srt argument to nco_get/put_var1()

2018-11-19  Charlie Zender  <zender@uci.edu>

	* ncremap order shell commands in tempest history attribute cmd_msh, cmd_map not cmd_map, cmd_msh

2018-11-16  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.9-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.9-alpha01: Palm Desert';git push
	git tag -a 4.7.9-alpha01 -m 'Functionally identical to 4.7.8';git push --tags

	* NCO 4.7.8 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.8: Paradise Lost';git push
	git tag -a 4.7.8 -m 'ncremap/ncclimo CMIP6 features, d2f, no frac_b, deprecate USE_NC4_SRD_WORKAROUND; ERWG no_log; ncks byte-swap; ncatted typ_mch fix';git push --tags

	* ncremap annotate map-file after cmd_trn for monotr transpose maps
	NB: GenerateTransposeMap does not propagate metadata from input map

2018-11-15  Charlie Zender  <zender@uci.edu>

	* ncremap add ${unq_sfx} to ${d2f_fl}

2018-11-14  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.8-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.8-beta01: Paradise Lost';git push
	git tag -a 4.7.8-beta01 -m 'ncclimo mdl_nm=mpas, pass ${nco_opt}, ${spl_opt}, ${spl_rgr_opt} not -C, pass; ncremap explicit -O, ERWG --no_log, ntl dfl nil not 0';git push --tags

	* ncclimo add ${spl_opt} and ${spl_rgr_opt} to MPAS ncremap call

	* ncremap/ncclimo initialize dfl_lvl to '' not '0'

	* ncremap --no_log to prevent ERWG write attempts to (possibly write-protected) working directory

	* ncclimo pass ${nco_opt} through to ncremap so, e.g., --no_tmp_fl -7 --dfl_lvl=2

	* ncremap move -O outside of ${nco_opt} and make it explicit in all commands
	Reduces chances that overriding ncremap default nco_opt with nco_opt from ncclimo causes disaster

	* ncclimo remove '-C' argument from ncremap invocation for MPAS splitter only
	This ensures CMIP6 MPAS timeseries will have _FillValue

	* ncclimo add 'mpas' as valid model name mdl_nm (it was already a valid mdl_typ)

	* NCO 4.7.8-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.8-alpha04: Potomac';git push
	git tag -a 4.7.8-alpha04 -m 'CMIP6 tweaks: no frac_b, ncclimo --d2f';git push --tags

2018-11-08  Charlie Zender  <zender@uci.edu>

	* Implement --d2f in ncclimo to pass to ncremap

2018-11-04  Charlie Zender  <zender@uci.edu>

	* Use htonl(), htons() instead of __builtin_bswap??() when unavailable

	* Add frac_b exceedance diagnostic to stdout but remove frac_b from netCDF output (for CMIP6)

2018-10-30  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.8-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.8-alpha03: Tony\'nDonna';git push
	git tag -a 4.7.8-alpha03 -m 'ncremap --d2f;ncks byte-swap ordering option;ncbo conformity clarity';git push --tags

	* Add variable uint32_var to in_grp.nc and successfully test byte-swapping

	* Fix c_typ_nm() to return correct C-language type of netCDF type based on nco_typ.h tokens

	* Clarify dimension ordering issue when ncbo's variable conformity checks fail

2018-10-24  Charlie Zender  <zender@uci.edu>

	* Finish byte-swap function. Still need front-end option invocation mechanism.

2018-10-23  Charlie Zender  <zender@uci.edu>

	* Add byte-swap option infrastructure

	* Successfully built/tested on GCC 8.2 on MacOS 10.14

2018-10-11  Charlie Zender  <zender@uci.edu>

	* Fix typo so we have NCO_GSL_VERSION >= 110 in fmc_gsl_cls.cc

2018-10-06  Charlie Zender  <zender@uci.edu>

	* Pedro Vicente corrected a WIN64 size_t issue by replacing ‚Äúlong‚Äù with ‚Äúsize_t‚Äù in nco_lmt_evl_dmn_crd()

2018-09-27  Charlie Zender  <zender@uci.edu>

	* Add --d2f option to ncremap to convert double-precision to single-precision

2018-09-25  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.8-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.8-alpha02: Imua MVB';git push
	git tag -a 4.7.8-alpha02 -m 'Deprecate USE_NC4_SRD_WORKAROUND for netCDF >= 4.6.2;Add nc_*_memio() functions; Fix nc_set_log_level(); ncatted allow --typ_mch searches to fail; ncremap add mss_val to NC_FLOAT';git push --tags

	* ncremap add missing values to single-precision MPAS variables as well as double

	* ncatted do not return error when -t specified and no matching	variables found

2018-09-23  Charlie Zender  <zender@uci.edu>

	* Define NC_LIB_VERSION prior to using in #include <netcdf_mem.h>

	* Add nco_create_memio(), nco_open_memio(), nco_close_memio() and their stubs

2018-09-21  Charlie Zender  <zender@uci.edu>

	* Allow USE_NC4_SRD_WORKAROUND only for netCDF <= 4.6.1 since 4.6.2 fixes issue https://github.com/Unidata/netcdf-c/pull/1001

	* Convert log_lvl to int before passing to nc_set_log_level() to fix breakage with netCDF 4.6.2-RC1

	* NCO 4.7.8-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.8-alpha01: Nitrous';git push
	git tag -a 4.7.8-alpha01 -m 'Functionally identical to 4.7.7;';git push --tags

	* NCO 4.7.7 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.7: Bravura';git push
	git tag -a 4.7.7 -m 'theta;ilev;doc dap dep wht_lst;ignore_degenerate;rgr n2s, doc, gss sym ntf;ncpdq dbl_flt;ncremap skl_fl cnv_mpas';git push --tags

2018-09-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.7-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.7-beta01: BC Tanager';git push
	git tag -a 4.7.7-beta01 -m 'theta;ilev;doc dap dep wht_lst;ignore_degenerate;rgr n2s, doc, gss sym ntf;ncpdq dbl_flt;ncremap skl_fl cnv_mpas';git push --tags

	* Document new features

 	* Disable filename sanitization until further review of https://github.com/nco/nco/issues/104

	* Add nco_xtr_ilev_add() to extract ilev, when present, whenever lev is extracted (requested by Qi Tang)

2018-09-19  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.7-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.7-alpha06: Vacuum Leak';git push
	git tag -a 4.7.7-alpha06 -m 'MPAS exception harmony;docs';git push --tags

	* nco.texi document regridder omitted variable lists

	* Convert ncremap usg_prn() and nco.texi to use canonical argument format in.nc out.nc

	* nco.texi document MPAS fixed variable lists

	* Harmonize MPAS lists between nco_rgr_wgt() and nco_var_is_fix()

2018-09-18  Charlie Zender  <zender@uci.edu>

	* Reduce MPAS exclusion list to allow regridding areaCell, maxLevelCell, xCell, yCell, zCell

	* Add angleEdge, meshDensity, weightsOnEdge to MPAS fix list

	* Tweak MPAS "fixed" list to apply only to size and rank preserving arithmetic operators and to cellsOnCell

2018-09-17  Charlie Zender  <zender@uci.edu>

	* Designate MPAS grid variables as "fixed" not "processed"

2018-09-16  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.7-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.7-alpha05: Field Marshall Von Stoldt';git push
	git tag -a 4.7.7-alpha05 -m 'rgr num_wgts fix;mpas xcl;cnv sct;rgr xcl_lst mpas;cmd_pdq<->cmd_att;CDF5 stt';git push --tags

	* Fix MPAS exclusion list for regridder

	* Tidy configure.ac brackets

	* Address Flex version issues discovered by Daniel Neumann in ncap_lex.l

	* Accurately report CDF5 support

	* Improve NC_ENOTBUILT error to explain CDF5 support

2018-09-14  Charlie Zender  <zender@uci.edu>

	* Perform cmd_pdq before cmd_att in ncremap so any sub-setting reduces cmd_att time

	* Remove MPAS MOC exception from ncks.c

	* Hook-up MPAS exclusion list for regridder

	* Finally delete ncap.c

	* Replace CNV_CCM_CCSM_CF with convention structure cnv

2018-09-13  Charlie Zender  <zender@uci.edu>

	* Tolerate ESMF map-files that lack num_wgts dimension due to post-processing

	* NCO 4.7.7-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.7-alpha04: Mailbox';git push
	git tag -a 4.7.7-alpha04 -m 'ncpdq dbl_flt, gss grd';git push --tags

2018-09-12  Charlie Zender  <zender@uci.edu>

	* Add stubs to implement CNV_MPAS exceptions

2018-09-10  Charlie Zender  <zender@uci.edu>

	* Relax assumption that ERWG always has --netcdf4 option

2018-09-09  Charlie Zender  <zender@uci.edu>

	* Finish ncpdq implementation of nco_pck_map_typ == nco_pck_map_dbl_flt (still needs MPAS exception list)

	* Fix relative convergence test for Gaussian grids in nco_grd_nfr()

	* Add stubs for ncpdq dbl_flt conversion

	* ncremap put UGRID option in correct inferral block

2018-09-05  Charlie Zender  <zender@uci.edu>

	* Increase debugging threshold to print info like prm_nbr for netCDF dynamic compression filters

2018-09-04  Charlie Zender  <zender@uci.edu>

	* Increase round-off error tolerance from 1.0e-14 to 1.0e-12 to	accomodate highrez Gaussian grids like ECMWF O1280

	* NCO 4.7.7-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.7-alpha03: Sober September';git push
	git tag -a 4.7.7-alpha03 -m 's2n/n2s, gss ntf symmetric, obviate ttl tilde';git push --tags

	* Grid diagnosis in nco_rgr_wgt() now recognizes n2s for all rectangular grids

	* Verified nco_grd_nfr() and nco_grd_mk() produce symmetric Gaussian interfaces for s2n and n2s

2018-09-03  Charlie Zender  <zender@uci.edu>

	* Re-implement Gaussian iteration loops so all Gaussian interfaces are symmetric

	* ncremap revert tilde replacement in favor of re-quoting grd_sng

2018-09-02  Charlie Zender  <zender@uci.edu>

	* Expose skl_fl functionality to ncremap

	* Pass flg_s2n to nco_lat_wgt_gss() to allow N->S Gaussian grids

	* ncremap replace spaces in user-defined grid strings (e.g., ttl) with tildes

	* Fix lat_typ for n2s in nco_grd_nfr()

2018-08-31  Charlie Zender  <zender@uci.edu>

	* Implement lat_drc=n2s inferral in nco_grd_nfr()

	* Implement lat_drc=n2s option in nco_grd_mk() for ERAI, ERA5 grids

	* Allow backslash to quote tilde in ttl strings

2018-08-30  Charlie Zender  <zender@uci.edu>

	* Change special grd ttl character from carat to tilde, like LaTeX and NCL

2018-08-30  Charlie Zender  <zender@aerosol>

	* NCO 4.7.7-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.7-alpha02: Kya Party of 8';git push
	git tag -a 4.7.7-alpha02 -m 'ttl carats;--ignore_degenerate;theta;tags';git push --tags

	* Eliminate ncap.h from nco/src/nco/Makefile.am to fix Tags generation

	* Add ncremap ERWG ignore_degenerate HINT/option for ESMF >= 7.1.0r

2018-08-28  Charlie Zender  <zender@uci.edu>

	* Replace carats with spaces so ncremap users can put carats in place of spaces in ttl

2018-08-23  Charlie Zender  <zender@aerosol>

	* Keep xmllint regression test from writing a file named ":"

	* Include theta.alcf.anl.gov in ncclimo/ncremap paths

2018-08-22  Charlie Zender  <zender@aerosol>

	* Noticed that ncremap -G cannot support whitespace in ttl argument

	* Document DAP whitelist

2018-08-11  Charlie Zender  <zender@aerosol>

	* NCO 4.7.7-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.7-alpha01: Dana TopBoat';git push
	git tag -a 4.7.7-alpha01 -m 'Functionally identical to 4.7.6;HAVE_NC_RENAME_GRP,nco_map_mk() changes,CEWI';git push --tags

	* Fix gcc 4.8.2 compiler warnings on rhea, and 4.9.0 on titan

	* Traditional build engine assume netCDF >= 4.3.1 CPP_TKN_OS += -DHAVE_NC_RENAME_GRP

	* NCO 4.7.6 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.6: Honaunau';git push
	git tag -a 4.7.6 -m 'ncremap RRG, MWF, -d&-g, -g&-G;aux w/o std_nm;HPSS_TRY';git push --tags

	* Fix nco_map_mk() map-file creation by allocating space for var_nm

2018-08-07  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.6-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.6-beta01: Sawdust';git push
	git tag -a 4.7.6-beta01 -m 'ncremap allow -d && -g, and -g && -G;aux rgr fix clang bld;document rrg, mwf, tps';git push --tags

	* Fix syntax, indentation, and compiler warnings in nco_bld_crd_nm_aux()

	* Remove comparisons to undefined is_1D_crd and is_1D_rec_crd. Regression test now passes with clang.

	* Document RRG, TempestRemap, and MWF in confluence

2018-08-06  Charlie Zender  <zender@uci.edu>

	* Fix logic of grid arguments diagnostic errors

2018-08-03  Charlie Zender  <zender@uci.edu>

	* ncremap -g grd_dst.nc -G grd_sng now works in "grid-only" mode

2018-08-02  Charlie Zender  <zender@aerosol>

	* Add --dmm_fl_mk, --fl_dmm to create dummy input file fl_in before ncks opens it

2018-08-02  Charlie Zender  <zender@uci.edu>

	* When ncremap receives both -d dat_dst and -g grd_dst, then infer grd_dst from dat_dst

2018-07-29  Charlie Zender  <zender@aerosol>

	* Use HPSS_TRY to create better hints for finding missing files

	* Fix ncap2 build on aerosol/firn: discard MacPorts antlr, build antlr from scratch, eliminate getopt.h getopt_bsd.h from ~/include (to fix undefined references to _my_getopt, _my_optind, etc.)

2018-07-28  Charlie Zender  <zender@aerosol>

	* NCO 4.7.6-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.6-alpha06: Drag';git push
	git tag -a 4.7.6-alpha06 -m 'MWF MPI fvfv fvse .g = SE;cnk wrn;ncremap timers;HPSS_TRY';git push --tags

	* Add HPSS_TRY option

	* Add per-map timers to MWF output for dbg_lvl >= 1

	* MWF mode calls appropriate algorithms for FVFV and FVSE requests, assumes SE file if grd_dst ends with .g

2018-07-27  Charlie Zender  <zender@aerosol>

	* NCO completes when chunking into non-netCDF4 files (previously it dumped core)

	* Only print one WARNING about user-specified chunk size for record dimension being too big

	* Support --wgt_cmd in ncremap MWF mode, e.g., 'mpirun -np 12 ESMF_RegridWeightGen'

	* NCO 4.7.6-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.6-alpha05: Roux';git push
	git tag -a 4.7.6-alpha05 -m 'aux w/o std_nm;docs;Tempest in MWF';git push --tags

	* Henry added -X support for auxiliary coordinates without standard_name attributes

2018-07-23  Charlie Zender  <zender@uci.edu>

	* Add 'Parallelism Mode = ${par_sng}' to output

2018-07-18  Charlie Zender  <zender@aerosol>

	* Implement E3SM v2 Tempest algorithm strings in ncremap MWF mode

2018-07-16  Charlie Zender  <zender@uci.edu>

	* Rename NC_HAVE_RENAME_GRP to HAVE_NC_RENAME_GRP

	* Obtain NC_HAVE_RENAME_GRP from CMake and autoconf macros rather than netcdf.h

2018-07-15  Charlie Zender  <zender@uci.edu>

	* Document nm_src, nm_dst, dt_sng

	* Add Tempest v2 maps to ncremap MWF mode

	* Add ending comma to JSON types block

2018-07-11  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.6-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.6-alpha04: Blue';git push
	git tag -a 4.7.6-alpha04 -m 'ncremap -P mwf;RRG prs dat_rgn';git push --tags

	* Initial implementation of MWF mode

	* Add optional/required inputs for MWF mode: nm_src, nm_dst, dt_sng

	* Add ncremap alg_typ synonyms patc, ndtos, nstod, blin to support MPAS make_weight_files (mwf) workflow

2018-07-08  Charlie Zender  <zender@uci.edu>

	* ncremap RRG examine dat_rgn to create rnm_sng

	* ncremap RRG parse rnm_sng to create bb_wesn string

	* Add mlt_rcd.cdl to test multiple record coordinate concatentation

	* Change if thr_nbr > 0 to if thr_nbr > 1 for nco_thr_att_cat()

2018-07-06  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.6-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.6-alpha03: Repaint';git push
	git tag -a 4.7.6-alpha03 -m 'ncremap RRG works;xmllint compliance;ncap2 pack() fix';git push --tags

	* Implement rgn_rnm.sh and rgn_rgr.sh in ncremap

2018-07-05  Henry Butowsky <henryb@hush.com>

	* pack() now works correctly double-parsed code blocks, fixes regession tests

2018-07-02  Henry Butowsky <henryb@hush.com>

	* Validating XML output against ncml-2.2.xsd with xmllint revealed two issues now fixed:
	1. In element "ncml:variable", child element "values" also requires namespace prefix "ncml"
	2. Attribute "type" was incorrect for unsigned types

	* NB: Schema ncml-2.2.xsd for ncml:attributes has XML attribute	"isUnsigned" and ncml:variable lacks this attribute

2018-07-01  Charlie Zender  <zender@uci.edu>

	* Fix xmllint regression tests stdout

	* NCO 4.7.6-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.6-alpha02: Amsterdam';git push
	git tag -a 4.7.6-alpha02 -m 'rgn_rnm.sh,rgn_rgr.sh;rgr XML,xmllint;nVertLevelsP1;ncremap --rrg_*';git push --tags

	* Adopt RRG TLA for Regional Regridding syntax

	* Designed API for merging rgn_rnm.sh and rgn_rgr.sh into ncremap

	* Add original (Amsterdam) scripts for two-step regional regridding, rgn_rnm.sh + rgn_rgr.sh

2018-06-28  Henry Butowsky <henryb@hush.com>

	* Add regression tests for ncks --xml using xmllint tool
	Currently it simply parses the XML, though it can do much more

2018-06-26  Charlie Zender  <zender@uci.edu>

	* Clean-up debug messages co-printed with sanitize workaround -D 73

2018-06-24  Charlie Zender  <zender@uci.edu>

	* Draft rgn_rnm.sh and rgn_rgr.sh to regrid regional ESM output

2018-06-22  Charlie Zender  <zender@uci.edu>

	* Add nVertLevelsP1 to ncremap MPAS permution list

2018-06-19  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.6-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.6-alpha01: Ybor';git push
	git tag -a 4.7.6-alpha01 -m 'Nearly functionally identical to 4.7.5;ntm->udt;no lat/lon crd';git push --tags

	* Remove self-referential "coordinates" attribute from unstructured lat/lon coordinates

	* Tidy nco.texi

2018-06-17  Charlie Zender  <zender@uci.edu>

	* Change semantics from "ntm" for non-atomic types to "udt" for user-defined types

2018-06-10  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.5 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.5: Salient Detail';git push
	git tag -a 4.7.5 -m 'Fix ncremap 4.7.4 CLM PJCS bug;ncml:XML;CDL/XML/JSN ENUM/VLEN;dap4://;ncap2 pack();mpassi';git push --tags

2018-06-09  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.5-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.5-alpha07: Ventura Paddle';git push
	git tag -a 4.7.5-alpha07 -m 'Fix ncremap 4.7.4 CLM bug;ncml:XML;safe CDL ENUM;complete XML ENUM';git push --tags

	* Prefix or postfix XML tags with ncml: and :ncml

2018-06-08  Charlie Zender  <zender@uci.edu>

	* Add enum type to XML variable definition as per toolsUI output

	* CDL'ize ENUM types and values before printing. Round-trip dump/gen now works!

2018-06-05  Charlie Zender  <zender@uci.edu>

	* Fix algorithm to always check sizes of candidate unstructured	dimensions even if from database
	Failures then fall-back to PJCS mechanism of searching for dimension with expected size

	* CDL print dimension ID for dbg_lvl >= 2

2018-06-04  Charlie Zender  <zender@uci.edu>

	* Remove "gridcell" from list of column dimensions in nco_rgr_wgt() to fix ELM SGS rgr problem encountered by Sterling

	* NCO 4.7.5-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.5-alpha06: Fire on the Mountain';git push
	git tag -a 4.7.5-alpha06 -m 'VLEN, ENUM _FillValue';git push --tags

	* Support NC_ENUM missing values

	* Fix format so VLEN missing values work for NC_INT, too

2018-06-03  Charlie Zender  <zender@uci.edu>

	* nco_free_vlens() temporary _FillValue VLEN memory

	* Correct nco_mss_val_get() for VLEN

2018-06-01  Charlie Zender  <zender@uci.edu>

	* Add --trd to more nco.texi printing examples

2018-05-31  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.5-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.5-alpha05: SLOtime';git push
	git tag -a 4.7.5-alpha05 -m 'rgr fix';git push --tags

	* Add http://github.com/nco/nco to version attribute

2018-05-14  Charlie Zender  <zender@uci.edu>

	* Ensure VLEN mss_val returned as scalar value of type bs_typ in nco_mss_val_get()

2018-05-09  Charlie Zender  <zender@uci.edu>

	* Fix C++ compiling error by avoiding calls to cast_nctype_void() and nco_val_cnf_typ() with user-defined argument types

	* NCO 4.7.5-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.5-alpha04: Carne Asada Tacos';git push
	git tag -a 4.7.5-alpha04 -m 'vlen var;enum att, var;RAM diags;ncap2 pck';git push --tags

	* Revert immediate return from nco_val_cnf_typ() if typ_in == typ_out to fix regressions

	* Adjust memory diagnostics for VLEN printing

2018-05-09  Henry Butowsky <henryb@hush.com>

	* Add optional scale_factor/add_offset arguments to ncap2 packing routines

2018-05-07  Charlie Zender  <zender@uci.edu>

	* CDL enum printing works for all types

2018-05-06  Charlie Zender  <zender@uci.edu>

	* CDL vlen variable printing works except for base type char and string

	* Add first-draft VLEN printing to nco_prn_var_val_trv()

	* Allow user-defined types in nco_prn_var_val_trv()

	* Return from nco_val_cnf_typ() if typ_in == typ_out

	* Support user-defined types and class types in nco_get_var*() functions

2018-05-05  Charlie Zender  <zender@uci.edu>

	* Complete VLEN attribute CDL printing support for all base-types except NC_CHAR and NC_STRING

2018-05-04  Charlie Zender  <zender@uci.edu>

	* Re-order vlen attribute loop to distill common operations

	* NCO 4.7.5-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.5-alpha03: Tortilla Republic';git push
	git tag -a 4.7.5-alpha03 -m 'vlen att; abort();	yyyy-mm-01-00000; CDL types';git push --tags

	* Add CDL types: section

	* Add nco_inq_typeids(), add typ_nbr to traversal table

	* Add braces and support NC_VLEN attribute printing for base-types int, short, uint64, float

2018-05-03  Charlie Zender  <zender@uci.edu>

	* Print correct type names for non-atomic attributes

2018-05-02  Charlie Zender  <zender@uci.edu>

	* nco_prn_att() now prints vlen attributes!

	* Add nco_free_vlens()

	* Re-write nco_prn_att() to handle non-atomic types

	* Cause ABORT_ON_ERROR to abort() not exit(), to preserve memory for debugging after crashes

	* ncclimo supports MPAS v2 names of form yyyy-mm-01-00000

2018-05-01  Charlie Zender  <zender@uci.edu>

	* Add lon/lat database method to nco_find_lat_lon() so auxiliary coordinates work on non-CF files

2018-04-30  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.5-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.5-alpha02: Mad Max';git push
	git tag -a 4.7.5-alpha02 -m 'dap4://;wht_lst_dap;';git push --tags

2018-04-27  Charlie Zender  <zender@uci.edu>

	* ncclimo accepts mpassi in place of mpascice, mpasseaice

	* Fix VERSION in Makefile.old

	* Improve Makefile.old for GSL and gsl-config

	* Update cheyenne to use netCDF 4.6.1 with ncremap/ncclimo

2018-04-20  Charlie Zender  <zender@uci.edu>

	* Allow separate whitelist of characters in DAP protocol constraints

	* Allow DAP URLs to begin with dap4://

2018-04-15  Charlie Zender  <zender@uci.edu>

	* Correct total variable number printed in CDL debug comment

	* Always read type information for non-atomic types

2018-04-14  Charlie Zender  <zender@uci.edu>

	* Add --ntm option to set prn_flg.ntm for development of non-atomic features

2018-04-13  Charlie Zender  <zender@uci.edu>

	* Find non-atomic types in nco_prn_cdl_trd()

	* Create vlen.cdl and enum.cdl to test non-atomic types

2018-04-12  Charlie Zender  <zender@uci.edu>

	* Improve English usage in ncrename HINT

2018-04-06  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.5-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.5-alpha01: Giant\'s Causeway';git push
	git tag -a 4.7.5-alpha01 -m 'Functionally identical to 4.7.4';git push --tags

	* NCO 4.7.4 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.4: CSSI';git push
	git tag -a 4.7.4 -m 'CF OOG; CDF5 fix; support ESMF 7.1.0r conserve2nd, extrapolation; prn S5P L1B/L2; fix whitelist; enm/vln stubs';git push --tags

	* ncclimo: add mdl_nm = mpasseaice as synonym to mpascice

2018-04-04  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.4-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.4-beta01: Ireland';git push
	git tag -a 4.7.4-beta01 -m 'elm/ctsm synonyms, revert ignore_degenerate';git push --tags

	* ncremap: add prc_typ='elm' and 'ctsm' as synonyms to 'clm' and 'alm'

2018-04-02  Charlie Zender  <zender@uci.edu>

	* ncremap do not set --ignore_degenerate by default (it would break most workflows with ERWG < 7.1.0r)

	* NCO 4.7.4-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.4-alpha05: Globber';git push
	git tag -a 4.7.4-alpha05 -m 'sanitization sanity, enum/vlen stubs, document whitelist';git push --tags

	* Document whitelist

2018-04-01  Charlie Zender  <zender@uci.edu>

	* Add wrappers for user-defined types enum and vlen to libnco

	* Add globbing diagnostic to nco_sng_sntz()

	* Re-remove * and ? from whitelist

	* Fix data/Makefile.am symlink generation

2018-03-29  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.4-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.4-alpha04: Non-Atomic Fireball';git push
	git tag -a 4.7.4-alpha04 -m 'ESMF conserve2nd, extrapolation, ignore_degenerate, ncks S5P L1B NTM';git push --tags

	* Print functions ignore rather than die on non-atomic variables, fixes S5P L1B/L2 issues

2018-03-28  Charlie Zender  <zender@uci.edu>

	* ncremap add --ignore_degenerate to ERWG defaults (required for CICE regridding with ESMF >= 7.1.0r, breaks ERWG < 7.1.0r)

2018-03-25  Charlie Zender  <zender@uci.edu>

	* remove ncap.1 man page, adapt some old ncap1 scripts to ncap2

2018-03-24  Charlie Zender  <zender@uci.edu>

	* ncremap document new features

	* ncremap add --rnr synonym to --rnr_thr, c1 synonym to conserve

	* ncremap add extrapolation flags xtr_typ, xtr_nsp, xtr_xpn to exploit ESMF 7.1.0r features

2018-03-23  Charlie Zender  <zender@uci.edu>

	* Build 85.nc--89.nc and h0001.nc--h0003.nc in autoconf

	* ncremap supports ESMF 7.1.0r conserve2nd algorithm

	* NCO 4.7.4-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.4-alpha03: Rancho Leonero';git push
	git tag -a 4.7.4-alpha03 -m 'clarify where(), CDF5 fix, whitelist *?';git push --tags

	* Re-arrange whitelist logic and whitelist asterisk and question mark so globbing works	again

2018-03-21  Charlie Zender  <zender@uci.edu>

	* Filipe Fernandes fixed breakage caused by AppVeyor update

	* Verify new netCDF 4.6.1 release fixes CDF5 bug. Update NCO warning messages, docs, and CDF5 workarounds.

2018-03-21 Henry Butowsky  <henryb@hush.com>

	* Modify where() statement to terminate script if it encounters a LHS variable with indices

2018-03-13  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.4-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.4-alpha02: AquaLung Look2 Impulse3';git push
	git tag -a 4.7.4-alpha02 -m 'support absolute/relative OOG paths for CF attributes';git push --tags

	* ncremap guesses unstructured dimension is first dimension with size n_a in input map file src_grid_dims[0]

	* Add Unicode test file (ref_utf8.cdl) copied from netCDF source

	* Support absolute and relative paths to out-of-group (OOG) variables in CF attributes as per CF2 Group specification

	* Add ncremap versions of ncks HINTs in nco_rgr.c

2018-03-11  Charlie Zender  <zender@uci.edu>

	* Add gridcell to nco_rgr_wgt() guesses for unstructured dimension (fixes PJCS problem regridding ne30 surfdata)

2018-03-09  Charlie Zender  <zender@uci.edu>

	* Change NCO attribute from VERSION to "netCDF Operators version VERSION (http://nco.sf.net)"

2018-03-02  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.4-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.4-alpha01: Flo Rida';git push
	git tag -a 4.7.4-alpha01 -m 'Functionally identical to 4.7.3';git push --tags

	* NCO 4.7.3 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.3: Avid Poi';git push
	git tag -a 4.7.3 -m 'sanitize, --a2o, --nm_typ, --fmt_val, --fl_prn, deprecate ncap';git push --tags

2018-03-01  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.3-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.3-beta01: RFC water';git push
	git tag -a 4.7.3-beta01 -m 'sanitize, --a2o, --nm_typ, --fmt_val, --fl_prn, deprecate ncap';git push --tags

	* Merge sanitize_input branch so nco_sng_sntz() allows only white-listed characters in filenames

	* Deprecate ncap from bld/Makefile

	* Merge ncap deprecation branch for autoconf/CMake

2018-02-27  Charlie Zender  <zender@uci.edu>

	* White-list forward slash on Windows so URLs are acceptable (http://...)

	* Make sure single file operator input is sanitized

2018-02-22  Charlie Zender  <zender@uci.edu>

	* Protect MSVC backslash

	* Do not call sanitizer on system memory

	* White-list percent sign (NCO regression test uses, e.g., %tmp_fl_00)

	* Eliminate waiting on user input for regression tests

	* Implement nco_sng_sntz(), notice 13 new ncks regressions

	* Create sanitize_input branch

2018-02-21  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.3-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.3-alpha05: SW4';git push
	git tag -a 4.7.3-alpha05 -m '--fl_prn, IFS';git push --tags

	* Document --fl_prn

	* Change remaining printf() to fprintf() and finish printing to fp_prn

2018-02-20  Charlie Zender  <zender@uci.edu>

	* Allow ncks to print to formatted file fp_prn rather than to stdout

2018-02-15  Charlie Zender  <zender@uci.edu>

	* Security: Explicitly unset IFS before wordsplitting, so Bash uses default IFS=<space><tab><newline>

	* Security: Use /bin/mv and /bin/cp instead of mv and cp, respectively

	* Add 'bilin' and 'aave' as synonyms to 'bilinear' and 'conserve', respectively

2018-02-14  Charlie Zender  <zender@uci.edu>

	* Fix compiler warnings when nc_set_log_level() is #undef'd

2018-02-13  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.3-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.3-alpha04: Breaded venison';git push
	git tag -a 4.7.3-alpha04 -m 'fmt_val, set_log_level()';git push --tags

	* Document --fmt_val, ensure it only applies to floating point values

2018-02-12  Charlie Zender  <zender@uci.edu>

	* Add --fmt_val, --val_fmt, --value_format for formatting variable values

2018-02-08  Charlie Zender  <zender@uci.edu>

	* Deprecate old/unused feature status from nco_cnf_prn()

	* Remove 'var' from Invoke.cc OMP clause

	* bld/Makefile allows for Ubuntu 4.4.0 exception with UBUNTU_440 argument

2018-02-07  Charlie Zender  <zender@uci.edu>

	* Add --enable-logging to autoconf

	* Remove duplicate nc_set_log_level() call triggered by dbg_lvl

2018-02-06  Charlie Zender  <zender@uci.edu>

	* Clarify CF violation warning when attribute type is NC_STRING

2018-02-05  Charlie Zender  <zender@uci.edu>

	* Henry cleaned-up ncap2 which now builds warning-free with gcc, clang, g++, and MSVC

2018-02-05 Henry Butowsky  <henryb@hush.com>

	* Add shell script bm/cch_clr.sh to clear caches. Works with Linux and MacOS.

2018-02-04  Charlie Zender  <zender@uci.edu>

	* Fix three bugs introduced in 10 supposedly simple lines of changes from yesterday

2018-02-03  Charlie Zender  <zender@uci.edu>

	* Add nm_typ='yyyy-mm' and better document all nm_typ's

2018-02-02  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.3-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.3-alpha03: Super Blue Blood Moon';git push
	git tag -a 4.7.3-alpha03 -m 'nc_set_log_level(), nm_typ yyyy-mm-01, fml_nm';git push --tags

	* Ensure fml_nm works with rx nm_typ

	* Change rx to allow filenames with multiple periods for nm_typ='yyyymm' and 'yyyy-mm-01'

	* ncclimo distinguish mdl_typ from nm_typ, add 'yyyy-mm-01' rx

2018-02-01  Charlie Zender  <zender@uci.edu>

	* Alter regression output for 'make test > ~/foo 2>&1;cat ~/foo | grep FAILED | grep Unidata'

	* Add nc_set_log_level() to all binaries

	* Practice git feature-based workflow with new log_level branch

	* Verify rename bug still exists in 4.6.0.1

	* Update NCO_rgr.pl and nco_exit_lbr_rcd() for 4.6.0, 4.6.1, 4.6.2

2018-01-30  Charlie Zender  <zender@uci.edu>

	* Add HINT on --a2o for GenerateOverlapMesh failures

	* NCO 4.7.3-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.3-alpha02: Hedgy';git push
	git tag -a 4.7.3-alpha02 -m 'AppVeyor, a2o, nco_def/inq_var_filter(), _Filter';git push --tags

	* Fix and test a2o switch to work with transpose maps

2018-01-28  Charlie Zender  <zender@uci.edu>

	* Integrate --a2o with consistenly with GenerateOverlapMesh call for all options including monotr

2018-01-26  Charlie Zender  <zender@uci.edu>

	* Pedro, Filipe, Isuru, and Xylar fixed AppVeyor failure

	* ncremap --a2o indicates large-to-small regridding, e.g., atmosphere-to-ocean, so reverse grids in GenerateOverlapMesh

	* Cast "size_t" to "unsigned long" for %lu formats

	* Give cmake -DNETCDF_INCLUDE:PATH=${NETCDF_INC} precedence over ${NETCDF_ROOT}/include, same for lib

	* Modify code to eliminate MSVC compiler warnings

2018-01-25  Charlie Zender  <zender@uci.edu>

	* Add _Filter printing to nco_prn_att()

	* Add timers to ncclimo

	* Add nc[o]_def/inq_var_filter() stubs

	* NCO 4.7.3-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.3-alpha01: Coughy';git push
	git tag -a 4.7.3-alpha01 -m 'Functionally identical to 4.7.2';git push --tags

	* Add tm3_lat_flt to buggy.cdl to test _Filter attribute

	* Add DSCOVR L2 dimensions number_of_lines, number_of_pixels to ncremap database

	* ncclimo/ncremap: deprecate pileus

	* nco.texi: Fix errors introduced by solar_zenith_angle() documentation

	* NCO 4.7.2 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.2: Sapiens';git push
	git tag -a 4.7.2 -m 'Sapiens: splitter ypf, tempest2 boutique, ncremap psn arg, cheyenne';git push --tags

	* ncclimo: provisional, lackluster support for Theta

2018-01-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.2-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.2-beta01: Flighty';git push
	git tag -a 4.7.2-beta01 -m 'Flighty: splitter ypf, tempest2 boutique, ncremap psn arg, cheyenne';git push --tags

	* ncclimo fully working on cheyenne

2018-01-19  Charlie Zender  <zender@uci.edu>

	* ncclimo fails on cheyenne non-interactive compute nodes due to mpirun issues

	* Verified ncclimo bck mode works on cheyenne interactive compute nodes

	* Include cheyenne compute nodes in list of hardcoded paths to add

	* Tweak ncremap, ncclimo usage strings

2018-01-18  Charlie Zender  <zender@uci.edu>

	* Add and document ncremap --mss_val to support MPAS-LI datasets

	* #include "nco_cln_utl.h" in fmc_all_cls.hh to prototype nco_cln_prs_tm() and fix compilation error on edison

2018-01-12  Charlie Zender  <zender@uci.edu>

	* Update ncremap/ncclimo to use latest cheyenne paths, deprecate yellowstone

	* Successful Tempest2 builds on MacOS, now ncremap is cross-platform again

	* Update CF references to version 1.7 in nco.texi

	* Add latitude, longitude to empirical list of fixed variables in nco_var_is_fix()
	This is necessary because JAWS will use these as scalar coordinate variables

	* Tidy ncremap and ncclimo debug output when waiting for PIDs

2018-01-11  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.2-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.2-alpha02: Sucko Stucco';git push
	git tag -a 4.7.2-alpha02 -m 'Sucko Stucco: splitter segments fixed, tempest2 boutique support';git push --tags

	* Correct splitter file segmentation when sgm_rmd != 0. Fixes serious bug reported by Sterling Baldwin.
	Until now, all subsets miss years when sgm_rmd != 0, i.e., when	yr_nbr%ypf_max != 0
	Workaround for NCO pre-4.7.2 is to set ypf_max such that yr_nbr%ypf_max == 0

	* Restore elapsed time to splitter output

	* Correctly handle and document special case of NCO canonical format: ncremap -m map.nc in.nc out.nc

	* ncremap check for and modify map_rsl_fl instead of map_fl

	* Rename and implement char_var_nul and char_var_nul_c_format more precisely in accord with ncgen usage

2018-01-10  Charlie Zender  <zender@uci.edu>

	* Add GenerateTransposeMap to support fv2se_flx (monotr)

	* Verify that ncremap se2fv_flx (mono) and fv2se_stt (highorder) work with Tempest2 (Tempest1 fv2se_stt is buggy)

2018-01-10 Henry Butowsky  <henryb@hush.com>

	* Print scalar char of NUL as "" only if it is defined in data section as ""
	  if defined in data section as '\0' then "0" is printed (as per ncdump)

2018-01-09  Charlie Zender  <zender@uci.edu>

	* Print offending var/dim/group name when nco_rename_* returns NC_ENAMEINUSE

2018-01-04  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.2-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.2-alpha01: Orphan Black';git push
	git tag -a 4.7.2-alpha01 -m 'Orphan Black: Functionally equivalent to Ajudar (4.7.1)';git push --tags

	* Update copyright year to 2018, and version tags

	* Update rationale and effects for --trd/--cdl defaults in nco.texi

	* Pedro implemented CMake improvements and flexibility for Windows builds

2017-12-21  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.1 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.1: Ajudar';git push
	git tag -a 4.7.1 -m 'WIN64 ABI; Conda Windows; JSON tweaks; fix clm_md=dly,ann;';git push --tags

2017-12-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.1-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.1-beta01: Neverwhere';git push
	git tag -a 4.7.1-beta01 -m 'JSON NUL, brackets, Conda Windows';git push --tags

	* Fix Travis build matrix to eliminate false negatives (thanks to @isuruf)

	* Print scalar char of NUL as "" instead of 0 in JSON, CDL, XML

	* Remove inner set of brackets when printing character arrays in JSON

2017-12-18  Charlie Zender  <zender@uci.edu>

	* Add detection of netcdf_mem.h to autoconf and #define	HAVE_NETCDF_MEM_H accordingly

2017-12-16  Charlie Zender  <zender@uci.edu>

	* Add AppVeyor to build conda recipe for Windows. Contributed by Filipe.

2017-12-14  Charlie Zender  <zender@uci.edu>

	* CMakefile.txt and nco_sng_utl.h changes for Conda Windows package

2017-12-08  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.1-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.1-alpha03: Red Velvet';git push
	git tag -a 4.7.1-alpha03 -m 'ncclimo fix clm_md=dly,ann bugs and add prepend savvy';git push --tags

	* ncclimo: for clm_md=dly and inp_std, prepend drc_in to fl_in iff stdin names are basenames

2017-12-07  Charlie Zender  <zender@uci.edu>

	* Stop ncclimo from setting csn_flg when clm_md='dly' or 'ann'

	* Fix ncclimo E3SM instruction on how to override default PATH at HPCs

2017-12-03  Charlie Zender  <zender@uci.edu>

	* Warn when input file contains non-atomic variables

2017-11-15  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.1-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.1-alpha02: Raspberry-infused vodka';git push
	git tag -a 4.7.1-alpha02 -m 'long/size_t workaround for WIN64';git push --tags

	* long/size_t workaround for var1 routines

	* Change most NC_MAX_DIMS to NC_MAX_VAR_DIMS

	* long/size_t workaround for srt,cnt and long/ptrdiff_t workaround for srd,map

	* WIN64 workaround for sizeof(long) = 4 != 8 = sizeof(size_t) with dmn_sz, att_sz

2017-11-12  Charlie Zender  <zender@uci.edu>

	* Modify how netcdf_mem.h and nc_open_mem() are detected/provided

2017-11-10  Charlie Zender  <zender@uci.edu>

	* ncremap: Use gll_fl only when supplied, do not require it

	* ncremap: Implement all boutique Tempest algorithms except for transpose

	* ncrename: report collective rename bugs in https://github.com/Unidata/netcdf-c/issues/597

2017-11-08  Charlie Zender  <zender@uci.edu>

	* ncremap: Add hooks for more elaborate TempestRemap options

	* NCO 4.7.1-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.1-alpha01: 1.3 lb salad';git push
	git tag -a 4.7.1-alpha01 -m 'Identical to 4.7.0 except for version info';git push --tags

	* NCO 4.7.0 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.0: Ta Nehisi';git push
	git tag -a 4.7.0 -m 'ncremap/ncclimo dfl_lvl, fl_fmt;ncclimo ppc;nco_map/msh_mk();ncra/ncrcat neg hyp;quiet CDF5, ncrename';git push --tags

	* Protect CDF5 bug check by #ifdef NCO_CDF5_BUG_CHK to quiet Luke Van Roekel's hi-res MPAS-O Analysis output

2017-11-07  Charlie Zender  <zender@uci.edu>

	* Add pre-emptive numeric codes for netCDF library versions 4.5.2--4.5.3

	* NCO 4.7.0-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.0-beta01: Hairy Yoda';git push
	git tag -a 4.7.0-beta01 -m 'Verified CMake on Windows';git push --tags

2017-11-01  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.0-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.0-alpha04: Mag-unsafe';git push
	git tag -a 4.7.0-alpha04 -m 'ncrename quiet, ncremap dfl_lvl, ncclimo ppc';git push --tags

	* Fix ncrename regressions caused by 20171029 change

	* Update documentation and homepage and nco_netcdf.c regarding CDF5 bug and netCDF 4.5.0

	* Implement but do not document ppc in ncremap, option currently does nothing
	Would not be too hard to finish, but unclear that PPC is appropriate for ncremap

	* Test and document ncclimo --ppc

2017-10-31  Charlie Zender  <zender@uci.edu>

	* Add ppc option to ncclimo

2017-10-29  Charlie Zender  <zender@uci.edu>

	* Quiet ncrename: As per PJCS request, summary renaming only prints with dbg_lvl > 0

2017-10-25  Charlie Zender  <zender@uci.edu>

	* Add, document, and test -L dfl_lvl option to ncremap

2017-10-22  Charlie Zender  <zender@uci.edu>

	* Add att_var_jsn to in.cdl in_grp.cdl to demonstrate JSON formats

2017-10-20  Charlie Zender  <zender@uci.edu>

	* Add CF2 Out-of-Group search algorithm figure alg_cf2_oog.pptx

2017-10-15  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.0-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.0-alpha03: Ultrasonic Curtains';git push
	git tag -a 4.7.0-alpha03 -m 'nco_map/msh_mk() routines;ncclimo deflate';git push --tags

2017-10-13  Charlie Zender  <zender@uci.edu>

	* Create nco_msh_mk() to compute overlap mesh

	* Ensure input and output coordinates all in degrees

	* Milestone: Supplied grid information is read-in, and mapfile information is written-out

2017-10-12  Charlie Zender  <zender@uci.edu>

	* Read coordinates from source grid in nco_map_mk()

	* Modify in.cdl to include three_dmn_rec_var_pck to test masking weighted averages of packed variables for Antonio Rodrigues

2017-10-11  Charlie Zender  <zender@uci.edu>

	* Correct NC_NOERR checks

	* Read, error-correct, and write src/dst grid rank and dimensions in nco_map_mk()

	* Fix/change --weight et al. to option_type=required_argument in ncwa.c, ncflint.c

2017-10-09  Charlie Zender  <zender@uci.edu>

	* Add nco_map.[ch] to build engines

2017-10-07  Charlie Zender  <zender@uci.edu>

	* Re-arrange/rename weight-application logic to make room for nco_map_mk() stub in nco_map.c

2017-10-01  Charlie Zender  <zender@uci.edu>

	* Add, document, and test -L dfl_lvl option to ncclimo

2017-09-25  Charlie Zender  <zender@uci.edu>

	* NCO 4.7.0-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.0-alpha02 final changes';git push
	git tag -a 4.7.0-alpha02 -m 'ncra/ncrcat negative record hyp fix,';git push --tags

2017-09-21  Charlie Zender  <zender@uci.edu>

	* Fix bug where ncra, ncrcat treated negative record hyperslab indices
	with old (pre-2014) convention, and off-by-one relative to non-record hyperslabs

	* Add var_nm to diagnostic when all put/get functions fail

2017-09-20  Charlie Zender  <zender@uci.edu>

	* Add doc/conda.txt for Conda notes

2017-09-19  Charlie Zender  <zender@uci.edu>

	* Correct --trd and --cdl usage in manual

	* NCO 4.7.0-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.7.0-alpha01 final changes';git push
	git tag -a 4.7.0-alpha01 -m 'ncclimo fl_fmt,quiet CDF5 sniffing';git push --tags

	* Only print CDF5 sniffing message when large variable found

	* Add [-3, -4, -5, -6, -7] options to ncclimo

2017-09-18  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.9 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.9 final changes';git push
	git tag -a 4.6.9 -m 'CDF5, CMake, MPAS-O/I';git push --tags

	* Document NCO_PATH_OVERRIDE in ncclimo/ncremap screen output

2017-09-17  Charlie Zender  <zender@uci.edu>

	* Load ncl modules for cori, edison, rhea, titan only in ncremap not ncclimo

2017-09-16  Charlie Zender  <zender@uci.edu>

	* Update and auto-load ncl modules for cori, edison, rhea, titan

	* Fix ncremap bracket error

2017-09-15  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.9-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.9-beta01 final changes';git push
	git tag -a 4.6.9-beta01 -m 'Documentation for release';git push --tags

	* Fix printing of CDL summary strings and RAM sizes

	* Turn-off var_lst_rx_xtr so ncclimo 4.6.9-alphaXX works with 4.6.8 binaries

	* Echo hardpath/NCO_PATH_OVERRIDE status as Config:

2017-09-14  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.9-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.9-alpha05 final changes';git push
	git tag -a 4.6.9-alpha05 -m 'CMake hardening;CDF5 bug diagnosis;NCO_PATH_OVERRIDE';git push --tags

	* De-activate CDF5 workaround

	* If NCO_PATH_OVERRIDE is set to 'No' do not override user PATH with database of HPCC machine-dependent paths

	* Workaround fails because nc_close() hangs. Dang.

	* Implement CDF5 bug-workaround to use descending qsort on -v timeMonthly_avg_vertVelocityTop,timeMonthly_avg_normalVelocity

	* Deprecate ncks --get_grp_info, --get_file_info, -z (GET_LIST)

	* Modify trv_tbl_srt() to allow ascending and descending qsort()

2017-09-13  Charlie Zender  <zender@uci.edu>

	* Refine and test CDF5 diagnostics

	* CDL output ID = xxx in comments when dbg_lvl >= 2

	* Add/use nco_inq_path() to improve CDF5 diagnostics

2017-09-12  Charlie Zender  <zender@uci.edu>

	* Passes all expected regression tests

	* Allow ncks thr_nbr > 1 only when regridder is activated

	* Automatically detect and warn about possibly corrupt CDF5 files in nco_close()

2017-09-09  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.9-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.9-alpha04 final changes';git push
	git tag -a 4.6.9-alpha04 -m 'CMake hardening;Fix Traditional bld/Makefile';git push --tags

	* Travis Linux clang build of ncap2 fails after upgrade to Ubuntu Trusty due to unresolved
	link errors to __kmpc_*() (OpenMP) because ncap2 erroneously links with g++ instead of clang

	* Change custom build to use simple VERSION string

	* Fix Custom build on MacOSX by modifying ARFLAGS

	* Distinguish MD5 output with different debugging levels

	* Add nco_fl_sz_est() and print smr_fl_sz_sng to CDL

	* clang builds on Linux does not build ncap2 because NCO_GSL_VERSION not defined

	* Add ncks --bld, --build_engine to print NCO_BUILDENGINE

	* Define NCO_BUILDENGINE for all three build types

2017-09-07  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.9-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.9-alpha03 final changes';git push
	git tag -a 4.6.9-alpha03 -m 'CMake implementation;data size estimates with ncks -D 2;--lst_xtr';git push --tags

	* Fix calculation of ram_sz_crr in nco_prn()

2017-09-05  Charlie Zender  <zender@uci.edu>

	* Add CDF5 presence to ncks -r report

	* Refine CMake templates

	* CMake implementation from Pedro

	* round() filesize estimates instead of truncating them

2017-09-04  Charlie Zender  <zender@uci.edu>

	* fnc_nm (only!) must be explicit shared for g++ 4.8.4 (travis)

	* Update travis to work with Ubuntu 14.04, move from libnetcdf6 to libnetcdfc7

	* Discriminate between KiB and KB (kibibytes and kilobytes) in diagnostics

2017-09-01  Charlie Zender  <zender@uci.edu>

	* ncks report computed data size when dbg_lvl >= 2

2017-08-31  Charlie Zender  <zender@uci.edu>

	* Add stubs to compute/report total expected uncompressed data size

2017-08-30  Charlie Zender  <zender@uci.edu>

	* Clean-up MD5 messages and nco_fl_utl.c INFO messages

2017-08-29  Charlie Zender  <zender@uci.edu>

	* ncclimo -v var_lst_rx finally works as intended!

	* ncclimo fix --lst_xtr to exclude bounds coordinates so, e.g., time_bnds not explicitly
	passed to seasonal climos that have replaced it	with climatology_bounds

2017-08-25  Charlie Zender  <zender@uci.edu>

	* Add --lst_xtr stubs to ncclimo to expand var_lst rx

	* Add ncks --lst_xtr to print extraction list for ncremap and ncclimo

	* ncremap/ncclimo correct ERWG location for module load ncl/6.3.0 on rhea

	* Use appropriate fl_out_fmt to print ncgen hint in CDL

2017-08-24  Charlie Zender  <zender@uci.edu>

	* Add/clarify syntax to some regridder HINTs

	* Put MD5 in operator self-help for ncks

2017-08-23  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.9-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.9-alpha02 final changes';git push
	git tag -a 4.6.9-alpha02 -m 'support CDF5 autoconversion in ncks;CDF5 in all operators';git push --tags

2017-08-22  Charlie Zender  <zender@uci.edu>

	* Implement auto-conversion for CDF5 destination files

2017-08-20  Charlie Zender  <zender@uci.edu>

	* Skip autoconversion of atomic types to CDF5 destination files

	* Add explicitly supported suffixes .nc5, .nc6, .nc7 to ncclimo, nco.texi, ncecat.c

	* Fix getopt() --64bit_offset code path

	* Implement CDF5 choices in getopt() for all operators

2017-08-18  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.9-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.9-alpha01 final changes';git push
	git tag -a 4.6.9-alpha01 -m 'default print CDL, ANN false-positive, edison module udunits2';git push --tags

	* Add --trd where needed in regression tests

	* Change default printing from TRD to CDL

2017-08-17  Charlie Zender  <zender@uci.edu>

	* Replace ACME by E3SM or ACME/E3SM as appropriate

2017-08-16  Charlie Zender  <zender@uci.edu>

	* Fix ncclimo false-positive warning about ANN

	* ncclimo on edison now loads module udunits2 not udunits

	* NCO 4.6.8 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.8 final changes';git push
	git tag -a 4.6.8 -m 'ncap2 cnk, ncks dt_fmt, seasons, msk=none,	ncwa_hyp_msk_wgt bug';git push --tags

2017-08-15  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.8-beta02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.8-beta02 final changes';git push
	git tag -a 4.6.8-beta02 -m 'documentation';git push --tags

	* Document fl_fmt for 4.6.8 release

2017-08-14  Charlie Zender  <zender@uci.edu>

	* --dt_fmt implies --cdl (and --cln)

	* NCO 4.6.8-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.8-beta01 final changes';git push
	git tag -a 4.6.8-beta01 -m 'ncclimo custom libraries,rgr msk=byte,none,NC_EGLOBAL';git push --tags

	* Change custom library overrides for ncclimo/ncremap to use netCDF 4.4.1.X

	* Change custom build procedures for titan, rhea, yellowstone to use netCDF 4.4.1.X so CDF5 always works

	* Create --map_[src/dst]='none' to short-circuit mask processing in nco_grd_nfr()

2017-08-11  Charlie Zender  <zender@uci.edu>

	* Allow NC_EGLOBAL return values from nco_put_att() of _FillValue to NC_GLOBAL for netCDF 4.5.x

	* Allow NC_BYTE masks in nco_grd_nfr(), improve bad-mask diagnostics

2017-08-10  Charlie Zender  <zender@uci.edu>

	* netCDF 4.5.x dies with "Not a valid data type or _FillValue type mismatch"
	when attempting to stuff IEEE data like 1.0e30 (_FillValue) into signed short spots.
	Although correct, this new behavior causes many ncpdq regressions...

	* Address false-positive implicit-fallthrough warnings in nco_uthash.h by inserting GCC7 FALLTHRU comments

	* Fix one implicit-fallthrough bug identified by GCC7 (the warning proves useful)

	* Add custom season 'ANN' computed in seasonal loop from all twelve monthly climos

2017-08-09  Charlie Zender  <zender@uci.edu>

	* Run developer tests in NCO_rgr.pl for =~ /zender/ not just == 'zender' so aims4 works

	* Fix ANTLR_LIB handling in configure.ac (helps edison build)

	* NCO 4.6.8-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.8-alpha06 final changes';git push
	git tag -a 4.6.8-alpha06 -m 'ncclimo custom months';git push --tags

	* Custom seasons work in ncclimo: compute ANN only when MAM,JJA,SON,DJF requested;
	verify ANN is BFB with old method; zero seasons when csn_lst='none'

	* L'Huilier not L'Huillier

2017-08-08  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.8-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.8-alpha05 final changes';git push
	git tag -a 4.6.8-alpha05 -m 'nco1138 ncwa hyp/msk/wgt';git push --tags

	* Season infrastructure works non-intrusively, about to change clm_idx and parallelization

	* ncclimo can map requested to defined seasons

2017-08-07  Charlie Zender  <zender@uci.edu>

	* Add stubs for ncclimo custom season support

	* Add support for netCDF versions 4.4.1, 4.5.0, and 4.5.1 to nco_exit_lbr_rcd()

	* Pedro merged code to fix nco1138, so ncwa hyperslabs with masks/weights should work again

2017-08-04  Charlie Zender  <zender@uci.edu>

	* JSON now prints "null" instead of "Infinity"

	* NCO 4.6.8-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.8-alpha04 final changes';git push
	git tag -a 4.6.8-alpha04 -m 'json null, gcc7';git push --tags

	* Update NERSC edison build script due to OS upgrade

	* First successful GCC7 build: gcc 7.1.1, FC26, netCDF 4.5.0-rc1

	* Update netcdf.txt build script for GCC7, netCDF 4.5.0-rc1

	* JSON now prints "null" instead of "NaN" for NaNs as suggested by Bob Simons

2017-08-02 Henry Butowsky  <henryb@hush.com>

	* Fix hyperslabbing of ram_vars of type NC_STRING, added more regression tests

2017-08-01 Henry Butowsky  <henryb@hush.com>

	* Fix hyperslabbing of var with type NC_STRING in LHS assign and RHS exp

2017-07-09  Charlie Zender  <zender@uci.edu>

	* Add SHA256 value to homepage

2017-07-02  Charlie Zender  <zender@uci.edu>

	* ncremap: pass fl_fmt -3,-4,-5,-6,-7 options

2017-06-23  Charlie Zender  <zender@uci.edu>

	* nco_rgr.c avoid abort() when nco_rgr_map() gets undefined (e.g., regional curvilinear) lat grid

2017-06-21 Henry Butowsky  <henryb@hush.com>

	* --cll_mth feature not working correctly so turned-off by default in ncap2.cc

2017-06-20  Charlie Zender  <zender@uci.edu>

	* Extend ESMF_weight_only section

	* Fix false-positive regression with ncwa #5

	* Clean-up compiler warnings and CEWIs on Linux

	* ncclimo clean-up ncrcat files in diurnal mode

	* About to work on ncwa mask bug

	* NCO 4.6.8-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.8-alpha03 final changes';git push
	git tag -a 4.6.8-alpha03 -m 'ncap2 cnk, ncclimo diurnal, -W wgt_opt bug, NorESM rgr';git push --tags

2017-06-19  Charlie Zender  <zender@uci.edu>

	* Diurnal daily climos appear to work, though slowly

	* ncclimo: experiment with tpd for diurnal daily climos

2017-06-15 Henry Butowsky  <henryb@hush.com>

	* Modify nco_cnk_sz_set_trv() "final safety check" so if dim_sz != 0L then cnk_sz<=dim_sz

2017-06-14  Charlie Zender  <zender@uci.edu>

	* Implement stubs to handle ERWG 7.1+ --weight_only map-files

	* Fix 4.6.7 ncremap bug where -W wgt_opt was ignored

	* Allow compression with UGRID output

2017-06-13  Charlie Zender  <zender@uci.edu>

	* Make dt_fmt automatically set PRN_CLN_LGB and obviate redundant --cal

2017-06-12  Charlie Zender  <zender@uci.edu>

	* Apply temporary fix whenever cnk_sz == 0L, period

2017-06-11  Charlie Zender  <zender@uci.edu>

	* Temporary fix to TODO nco1137 ncwa chunking fails with --rdd reported by Joy 20170605
	dmn_cmn[] contains zero for some dimensions with --rdd, so set minimum cnk_sz to 1

2017-06-09  Charlie Zender  <zender@uci.edu>

	* Fix CF dimension inferral algorithm to correctly count coordinates

	* Add lat_nm_in=j, lon_nm_in=i to look-up table for NorESM1 and similar CMIP5 grids

2017-06-08  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.8-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.8-alpha02 final changes';git push
	git tag -a 4.6.8-alpha02 -m 'ncap2 mabs(), CDL dt_fmt, SUSE, --rnr_thr, SGS';git push --tags

	* Rename and re-order cdl_fmt_tm to dt_fmt

2017-06-07 Henry Butowsky  <henryb@hush.com>

	* Aggregate operations mibs(), mebs(), mabs() now work correctly in ncap2

2017-06-06  Charlie Zender  <zender@uci.edu>

	* Merged Daniel Neumann's autoconf patch for SUSE directory structure

2017-06-04  Charlie Zender  <zender@uci.edu>

	* User-specified --rnr_thr='off' turns-off renormalization

	* User-specified --rnr_thr overrides default 0.0 in MPAS-mode

2017-06-02  Charlie Zender  <zender@uci.edu>

	* Invoking --sgs_frc, --sgs_msk, or --sgs_nrm automatically triggers SGS-mode

2017-06-01  Charlie Zender  <zender@uci.edu>

	* Patch for NUL = '\0' != NULL errors in ncap2 supplied by Manfred Schwarb

	* ncclimo add clm_md synonyms: dly=daily,day,doy  ann=annual,yearly,year

2017-05-30  Charlie Zender  <zender@uci.edu>

	* Warn when ncclimo/ncremap and binaries are from different directories

	* Eliminate false positives from warnings about N-to-S grids

	* Fix ncks regress test #49 --mk_rec_dmn false negative by adding --no_frm_trm option

2017-05-26  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.8-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.8-alpha01 final changes';git push
	git tag -a 4.6.8-alpha01 -m 'Same as 4.6.7 except for version';git push --tags

	* NCO 4.6.7 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.7 final changes';git push
	git tag -a 4.6.7 -m 'ncap2 in-fill, MTA flags, ERWG rgn hints, SGS, ncremap re-org, ncatted nc4 fll_val';git push --tags

	* MSVC fixes, version fix

	* False alarm release

	* Document -P alm, clm, cice

2017-05-25  Charlie Zender  <zender@uci.edu>

	* Add ncremap -P alm, clm, cice options for SGS to implement model-specific idiosyncratic conventions

2017-05-24  Charlie Zender  <zender@uci.edu>

	* Add sub-grid fraction normalization option sgs_nrm for CICE

	* Fix compiler warnings from recent code

2017-05-23  Charlie Zender  <zender@uci.edu>

	* NCO_NETCDF4_AND_FILLVALUE rides again! Fix bug reported by Kyle Wilcox:
	Adding _FillValue to written variable works in 4.5.5, 4.6.1, wipes whole variable in 4.6.6 :)

	* Add NEMO (IPSL version) coordinates to regridder database

	* Improve CF-inferral algorithm to handle coordinate attributes with > 2 names

2017-05-22  Charlie Zender  <zender@uci.edu>

	* Warn when grid to infer runs N-S instead of S-N

	* Infer NCEP NCAR Reanalysis 1 as Gaussian grid, requires relaxing weight tolerance to < 1.0e-6

2017-05-20  Charlie Zender  <zender@uci.edu>

	* Searched unsuccessfully for tri-pole grid production routines

	* Realized CICE grid is displaced pole or tri-pole. Abandoned empirical inferral routine due to fold nasti-ness at pole.

2017-05-19  Charlie Zender  <zender@uci.edu>

	* CICE grid partially inferred over masked cells

	* NCO 4.6.7-beta02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.7-beta02 final changes';git push
	git tag -a 4.6.7-beta02 -m 'ncap2 in-fill, MTA flags, ERWG rgn hints, SGS, ncremap rationalization';git push --tags

	* Add stubs to infer entire grid from regional rectangular CICE in curvilinear format with masked land

	* Add fl_fmt=CDF5 options to documentation

	* Re-run test cases, fix rationalization bugs, improve documentation...

2017-05-18  Charlie Zender  <zender@uci.edu>

	* Document new ncremap options

	* Rationalize ncremap options. Changes to -a -E -T -w -W -U.

	* NCO 4.6.7-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.7-beta01 final changes';git push
	git tag -a 4.6.7-beta01 -m 'ncap2 in-fill, MTA flags, ERWG rgn hints, SGS';git push --tags

2017-05-17  Charlie Zender  <zender@uci.edu>

	* Document --rgn_dst/src, -r rgr_thr

	* Add ncremap -r rgr_thr option

	* Make mod04 automatically unpack

	* Change --hnt_dst/src options to --rgn_dst/src flags

	* Add ncremap -P mod04 and make -a tempest synonymous with -w tempest

2017-05-16  Charlie Zender  <zender@uci.edu>

	* Add ncremap --hnt_dst/src options to manually specify	'--dst_regional' for supplied (not inferred) grids

2017-05-15  Charlie Zender  <zender@uci.edu>

	* Allow ncatted to write empty NC_STRING

2017-05-13 Henry Butowsky  <henryb@hush.com>

	* ncap2 add "missing()" and synonym "mask_miss()" to utl_cls()
	It creates 0/1 array for expression (var == var_miss), returned type same as input type

2017-05-12  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.7-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.7-alpha06 final changes';git push
	git tag -a 4.6.7-alpha06 -m 'Polish and document SGS option';git push --tags

	* Change ncremap pdq_typ to prc_typ to reflect expanded role

	* Document SGS algorithm

	* Disallow SGS source grid inferral due to biases from latitude great/small circle assumptions

2017-05-11  Charlie Zender  <zender@uci.edu>

	* Use dgn_area/diagnose_area flag if ncremap SGS calls nco_grd_nfr()

2017-05-10  Charlie Zender  <zender@uci.edu>

	* Diagnose bad option values in nco_rgr_ini() before calling abort()

	* Re-diagnose inferred area if input area variable has and uses missing values

	* Always infer lat_ntf[0]=-90.0, lat_ntf[lat_nbr]=90.0 for Gaussian grids

2017-05-09  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.7-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.7-alpha05 final changes';git push
	git tag -a 4.6.7-alpha05 -m 'ncremap with sub-gridscale data (-P sgs) works';git push --tags

2017-05-08  Charlie Zender  <zender@uci.edu>

	* Improve verbosity for debugging and generalize names away from ALM/CLM to SGS for "sub-gridcell", and also "fractional area"

	* Allow ncremap to infer source grid when regridding "fractional area" files (not fully working)

2017-05-07  Charlie Zender  <zender@uci.edu>

	* Prevent ncclimo from inadavertently incorrectly (without SGS) regridding ALM/CLM files

	* ncremap move ALM files from homedir to intermediate location

	* Add "none" as synonym for unchunk policy

2017-05-05  Charlie Zender  <zender@uci.edu>

	* Delete missing values with ncap2, eliminate corresponding ncatted step for almu in ncremap

2017-05-04  Charlie Zender  <zender@uci.edu>

	* Revert and allow landmask to be regridded since errors less than not having it at all:
	T42 CLM with almu has global-mean errors of ~0.005 W/m2 and ~0.01 K (why not better? float landfrac may propagate errors)
	T42 CLM without almu but with almu landmask has global-mean errors of ~2 W/m2 and ~2 K
	T42 CLM without almu and with straight regridder land mask has global-mean errors of ~1.5 W/m2 and ~0 K

2017-05-03  Charlie Zender  <zender@uci.edu>

	* Add landmask to regridder exclusion list to keep ALM/CLM sane (users can re-derive it from landfrac)

	* Re-formulate mask conversion in nco_grd_nfr() so output mask is 1 wherever input mask is non-zero and non-missing, and is otherwise 0

2017-05-02  Charlie Zender  <zender@uci.edu>

	* Add ALM/CLM unstructured grid ("almu") stubs to ncremap

	* NCO 4.6.7-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.7-alpha04 final changes';git push
	git tag -a 4.6.7-alpha04 -m 'Version 4.6.7-alpha04 new features: MTA flags, ncap2 in-fill, MSVC';git push --tags

	* Fix Windows MSVC C++ compilation issues introduced in 4.6.6

	* Henry added simple_fill_miss() weighted_fill_miss() to ncap2

2017-05-01  Charlie Zender  <zender@uci.edu>

	* Alter docs and ncclimo/ncremap to use MTA flag-handling

	* Merge Jerome's MTA flag-handling

2017-04-28  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.7-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.7-alpha03 final changes';git push
	git tag -a 4.6.7-alpha03 -m 'Version 4.6.7-alpha03 new features: msk_src,msk_dst,msk_out,ugrid;';git push --tags

	* Document mask features

	* Add --msk_out to ncremap

	* Generalize nco_grd_nfr() to handle msk_rnk_nbr > grd_rnk_nbr so, e.g., SST(time,lat,lon) works

	* Fix numerous other nco_grd_nfr() errors in new mask code

	* Fix uninitialized memory errors caught by valgrind in recent nco_grd_nfr() grid-span code

2017-04-27  Charlie Zender  <zender@uci.edu>

	* Add mask_b = mask_out = dst_grid_imask to regridded output when flg_msk_out == True

2017-04-26  Charlie Zender  <zender@uci.edu>

	* Add ugrid_fl option to direct ncremap to infer UGRID from source input file

	* Regridder can now infer masks from missing values of any variable

	* Add msk_src and msk_dst options to specify mask-template variables to ncremap

2017-04-25  Charlie Zender  <zender@uci.edu>

	* Add clc.cdl, nsm.cdl, and trj.cdl for EarthCube CF2 project

	* Change "grid" argument to "scrip" to distinguish it from UGRID

2017-04-24  Charlie Zender  <zender@uci.edu>

	* Document UGRID

	* NCO 4.6.7-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.7-alpha02 final changes';git push
	git tag -a 4.6.7-alpha02 -m 'Version 4.6.7-alpha02 new features: auto-detect regional grids for ERWG';git push --tags

	* nco_grd_nfr() always diagnose grid extent, nco_grd_xtn, even when corners unknown

	* nco_grd_nfr() writes hint file ncremap_tmp_hnt_[dst/src].txt with regional ERWG flags

2017-04-21  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.7-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.7-alpha01 final changes';git push
	git tag -a 4.6.7-alpha01 -m 'Version 4.6.7-alpha01 new features: Same as 4.6.6';git push --tags

	* Add autoconf/configure stub to use same git-based version as bld/Makefile

	* NCO 4.6.6 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.6 final changes';git push
	git tag -a 4.6.6 -m 'Version 4.6.6 new features: no_cll_msr,no_frm_trm,no_stg_grd,hsi,lst_rnk_ge2,UGRID 2D,JSON shape,OMI';git push --tags

2017-04-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.6-alpha08 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.6-alpha08 final changes';git push
	git tag -a 4.6.6-alpha08 -m 'Version 4.6.6-alpha08 new features: Document, implement ncremap and ncclimo --no_cll_msr, --no_frm_trm, --no_stg_grd switches';git push --tags

	* Separate eps_rlt_wrt_thr = 3.0e-13 threshold to write frac_b to regridded files

	* Document ncremap and ncclimo --no_cll_msr, --no_frm_trm, --no_stg_grd

	* Document ncclimo --no_ntv_tms

2017-04-17  Charlie Zender  <zender@uci.edu>

	* Remove annoying quotation marks from version in nco_vrs_prn()

	* Clarify conditions for outputting frac_b in regridder

2017-04-16  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.6-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.6-alpha07 final changes';git push
	git tag -a 4.6.6-alpha07 -m 'Version 4.6.6-alpha07 new features: Coordinate --cll_msr, --frm_trm, --no_stg_grd, --area_out in regridder and splitter';git push --tags

	* Link --cll_msr, --frm_trm options to ncra, ncks front-ends

	* Expose --no_cll_msr, --no_frm_trm, --no_stg_grd options to ncclimo users

2017-04-15  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.6-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.6-alpha06 final changes';git push
	git tag -a 4.6.6-alpha06 -m 'Version 4.6.6-alpha06 new features: fix which hsi; lst_rnk_ge2 generic; valid_min/max; rgr no_stg splitter';git push --tags

2017-04-14  Charlie Zender  <zender@uci.edu>

	* Splitter omits staggered FV grid by default when regridding

	* Regridder implement no_stg flag to omit staggered FV grid information

	* Regridder add valid_min/max to lat/lon

	* --lst_rnk_ge2 successfully eliminates grid variables in generic cases

	* Define is_crd_lk_var, is_rec_lk_var to avoid conflicting definitions of is_crd_var, is_rec_var

	* Fix hsi discovery for generic case with `which hsi`

	* NCO 4.6.6-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.6-alpha05 final changes';git push
	git tag -a 4.6.6-alpha05 -m 'Version 4.6.6-alpha05 new features: ncremap front-end from ncclimo; --cal finds climatology, bounds variables; mmr documentation; UGRID 2D works; hsi locations; HPSS works';git push --tags

	* Add characteric coordinates for edges/faces to UGRID 2D output

	* Hard-code Cori/Edison and Rhea hsi locations

2017-04-13  Charlie Zender  <zender@uci.edu>

	* Fix nco_grd_nfr() to infer 2D grids written by nco_grd_mk()

	* Better annotate skeleton files in nco_grd_mk()

	* Exit with clear message instead of core dump on missing files on HPSS systems with hsi command

	* Replace ncremap input file front-end with code from ncclimo

	* Clarify effects of compression on expected memory use in documentation

2017-04-11  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.6-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.6-alpha04 final changes';git push
	git tag -a 4.6.6-alpha04 -m 'Version 4.6.6-alpha04 new features: ncap2 cell_methods fix; 2-D UGRID; lst_rnk_ge2 time_bnds; nfr msk fix; neareststod';git push --tags

	* Quiet CONVENTIONS attribute printing

	* Verified that ncremap mask changes produce expected results with neareststod
	neareststod/dtos uses nearest value, regardless of whether that value is valid
	Accurate interpolation of ocean values across continents requires custom algorithm

	* Noted that is_crd_var member of trv structures has been defined incorrectly since birth
	Member should have been named is_rec_crd for accuracy and consistency with older NCO

	* ncremap nco_grd_nfr() tolerates files with mask and without area variables

	* Hardwire exclusion of area, lat_bnds, lon_bnds into lst_rnk_ge2 so splitter works on NCO-regridded files

2017-04-10  Charlie Zender  <zender@uci.edu>

	* ncremap nco_grd_nfr() always writes mask data when input file has mask variable
	Until today, nco_grd_nfr() would always define mask variable but only write data when input file had mask

	* ncremap now invokes neareststod when requested, not nearestdtos (doh!)

2017-04-10 Henry Butowsky  <henryb@hush.com>

	* Refactor nco_msa_rcr_clc() to use less memory and run faster for --msa_usr_rdr

2017-04-09  Charlie Zender  <zender@uci.edu>

	* Add Cell_[Along/Across]_Swath_mod04 to dimension database for	ncl_convert2nc compatibility

	* Hardwire exclusion of time_bnds into lst_rnk_ge2

	* Complete minimal UGRID metadata

	* Fix mask type conversion in nco_grd_nfr()

2017-04-08  Charlie Zender  <zender@uci.edu>

	* Add stubs to create UGRID grids from nco_grd_nfr()

2017-04-05  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.6-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.6-alpha03 final changes';git push
	git tag -a 4.6.6-alpha03 -m 'Version 4.6.6-alpha03 new features: ncap2 atoi(), atof(), cell_methods; nco_grd_nfr OMI DOMINO; lst_rnk_ge2; JSON dims->shape';git push --tags

2017-04-01  Charlie Zender  <zender@uci.edu>

  	* Allow nco_grd_nfr() to read grid corners in non-canonical (crn_nbr,lat_nbr,lon_nbr) and permute to canonical (lat_nbr,lon_nbr,crn_nbr) order (for OMI DOMINO)

2017-03-30  Charlie Zender  <zender@uci.edu>

	* Add HINT when nco_grd_nfr() cannot find coordinates

2017-03-30 Henry Butowsky  <henryb@hush.com>

	* Add cell_methods CF convention to aggregate operations in ncap2 agg_cls()
	 Default is on, toggled by --cll_mth, --cell_method, --no_cell_method, --no_cll_mth

2017-03-26  Charlie Zender  <zender@uci.edu>

	* ncclimo: preliminary support for --lst_rnk_ge2

	* Splitter infrastructure: ncks --lst_rnk_ge2 prints extraction list of R>=2 variables and exits

2017-03-24  Charlie Zender  <zender@uci.edu>

	* Slight simplification of FV grid terminology

	* Change JSON to use "shape" instead of "dims" keyword in variable object

2017-03-23  Charlie Zender  <zender@uci.edu>

	* Reported below bug found by ncrename user Paolo Oliveri to Unidata

	* Document failure of netCDF library 4.4.1+ to rename non-coordinates to coordinates

2017-03-22  Charlie Zender  <zender@uci.edu>

	* Reported where ncgen interprets "u" suffix as uint64 not uint32 to Unidata

	* Change OpenMP INFO to print only when dbg_lvl >= 2

	* NCO 4.6.6-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.6-alpha02 final changes';git push
	git tag -d 4.6.6-alpha02;git push origin :refs/tags/4.6.6-alpha02
	git tag -a 4.6.6-alpha02 -m 'Version 4.6.6-alpha02 new features: cpd braces, units comments';git push --tags

2017-03-22 Henry Butowsky  <henryb@hush.com>

	* Print braces for compound record variables in CDL mode

2017-03-21  Charlie Zender  <zender@uci.edu>

	* Tidy nco_prn.c

2017-03-21 Henry Butowsky  <henryb@hush.com>

	* Print units in comment for CDL output when dbg_lvl >= 1

2017-03-17  Charlie Zender  <zender@uci.edu>

	* Patch fmc_all_cls.cc to build on OpenSUSE https://sourceforge.net/p/nco/bugs/94

2017-03-16  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.6-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.6-alpha01 final changes';git push
	git tag -a 4.6.6-alpha01 -m 'Version 4.6.6-alpha01 new features: ncremap cmd_wgt fix';git push --tags

	* Fix cmd_wgt reported by ncremap --version

2017-03-15  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.5 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.5 final changes';git push
	git tag -a 4.6.5 -m 'Version 4.6.5 new features: --cnk_csh, EXIT_FAILURE, ncclimo/ncremap version/vrb_lvl, ncks --cal, nfr() refactor, POP fix';git push --tags

2017-03-14  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.5-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.5-beta01 final changes';git push
	git tag -a 4.6.5-beta01 -m 'Version 4.6.5-beta01 new features: unary operation attribute propagation, MSVC fixes, EXIT_FAILURE';git push --tags

	* Tidy nco_prn() and nco_cln_utl() warnings

	* Return with EXIT_FAILURE not EXIT_SUCCESS for bad commandline options

2017-03-13  Charlie Zender  <zender@uci.edu>

	* Henry fixed attribute propagation on ncap2 unary operators

2017-03-11  Charlie Zender  <zender@uci.edu>

	* Print nco_fl_open() INFO messages only once to avoid redundant messages

2017-03-09  Charlie Zender  <zender@uci.edu>

	* Add MSVC workaround to gmtime_r() in fmc_all_cls.cc

	* Add missing stub prototypes to nco_cln_utl.h and fix MSVC compilation

2017-03-09 Henry Butowsky  <henryb@hush.com>

	* Fix plain var NC_CHAR assign statement so if var exists in Input then shape is obtained from Input

2017-03-08  Charlie Zender  <zender@uci.edu>

	* Document --calendar option

	* NCO 4.6.5-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.5-alpha04 final changes';git push
	git tag -a 4.6.5-alpha04 -m 'Version 4.6.5-alpha04 new features: ncclimo/ncremap copyright, quieter, nco_grd_nfr() refactor, ncap2 calendar format';git push --tags

	* Add ECMWF IFS data wrangling example to ncclimo docs for Jerry Potter

2017-03-07  Charlie Zender  <zender@uci.edu>

	* Improve nco_grd_nfr() to recognize all CF-approved forms of degrees_north and degrees_east

	* Re-factor nco_grd_nfr() algorithm to find coordinates first,
	then use coordinates to unambiguously deduce dimension names

2017-03-05  Charlie Zender  <zender@uci.edu>

	* Suppress multiple NaN warnings from nco_mss_val_get_dbl()

	* Functionalize chunk cache size set into nco_cnk_csh_ini()

2017-03-04  Charlie Zender  <zender@uci.edu>

	* Output NCO-standardish copyright/config notice from ncremap/ncclimo --version

2017-03-03  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.5-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.5-alpha03 final changes';git push
	git tag -a 4.6.5-alpha03 -m 'Version 4.6.5-alpha03 new features: rgr pop sungduk, timestamps, --version, --cnk_csh, --vrb_lvl ';git push --tags

	* Add --prn_vrb option to ncremap

2017-03-02  Charlie Zender  <zender@uci.edu>

	* Add chunk cache set to all other applicable operators

2017-03-01  Charlie Zender  <zender@uci.edu>

	* Clean-up warnings/redundancies in nco_rgr.c, nco_cln_utl.c

	* Add chunk cache set to ncra.c, fix it in ncks.c

2017-02-28  Charlie Zender  <zender@uci.edu>

	* Define vrs_prn before referencing in ncclimo, ncremap

	* Change timestamp printing switch from --prn_timestamp to --cal and synonyms

2017-02-28 Henry Butowsky  <henryb@hush.com>

	* Added timestamp printing capability to ncks

2017-02-24  Charlie Zender  <zender@uci.edu>

	* Add --version option to ncclimo, ncremap

2017-02-23  Charlie Zender  <zender@uci.edu>

	* Prettify ncclimo self-documentation

2017-02-17  Charlie Zender  <zender@uci.edu>

	* Turn-off whiteboard latitude circle routine until devise fix for Sungduk's POP case

2017-02-15  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.5-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.5-alpha02 final changes';git push
	git tag -a 4.6.5-alpha02 -m 'Version 4.6.5-alpha02 new features: where() fix for vpointers';git push --tags

2017-02-13 Henry Butowsky  <henryb@hush.com>

	* Modify where_assign() method in grammar so that it can handle vpointers in where() body

2017-02-10  Charlie Zender  <zender@uci.edu>

	* Restore correct values for three_dmn_rec_var in in.cdl that were inadvertently changed in 4.6.4

2017-02-09  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.5-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.5-alpha01 final changes';git push
	git tag -a 4.6.5-alpha01 -m 'Version 4.6.5-alpha01 new features: re-introduce fixed USE_NC4_SRD_WORKAROUND';git push --tags

2017-02-08  Charlie Zender  <zender@uci.edu>

	* Re-instate USE_NC4_SRD_WORKAROUND only when strided dimension is first dimension

2017-02-07  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.4 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.4 final changes';git push
	git tag -a 4.6.4 -m 'Version 4.6.4 new features: splitter, stdin, clm_md=dly, cll_msr, frm_trm, cln=365 and srd fixes';git push --tags

	* NCO 4.6.4-beta02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.4-beta02 final changes';git push
	git tag -a 4.6.4-beta02 -m 'Version 4.6.4-beta02 new features: deprecate USE_NC4_SRD_WORKAROUND';git push --tags

2017-02-06 Henry Butowsky  <henryb@hush.com>

	* Switched-off USE_NC4_SRD_WORKAROUND in nco_msa_rcr_clc() in nco_msa.c as algorithm was incorrect

2017-02-01  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.4-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.4-beta01 final changes';git push
	git tag -a 4.6.4-beta01 -m 'Version 4.6.4-beta01 new features: ncclimo stdin option, redirection, blues batch, calendar bugfix';git push --tags

	* Calendar code is MUCH slower on MacOS than Linux, unclear why

	* Henry made sscanf() in custom calendar routines be more fault-tolerant, fixes MacOS aborts

2017-01-27  Charlie Zender  <zender@uci.edu>

	* ncclimo improve shell pattern match for $HOSTNAME for blues and cooley

	* ncclimo detect input redirection in interactive mode, and add	--stdin for batch mode

2017-01-26  Charlie Zender  <zender@uci.edu>

	* Learned that MacOS aborts due to custom calendar (e.g., 365_day) handling

2017-01-25  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.4-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.4-alpha06 final changes';git push
	git tag -a 4.6.4-alpha06 -m 'Version 4.6.4-alpha06 new features: cell_measures, clm_md=dly, stdin PBS/SLURM';git push --tags

	* Unable to reproduce MacOS behavior that leads to unexpected aborts with some time hyperslabs

	* Update bld/Makefile for new ncap2_att.cc

	* Conclusively demonstrated that testing [ -p /dev/stdin ] leads to unexpected results on PBS not SLURM

2017-01-23  Charlie Zender  <zender@uci.edu>

	* Henry eliminated an invalid read in nco_cln_prs_tm() that contributed to ncclimo hyperslab failures on MacOS

2017-01-22  Charlie Zender  <zender@uci.edu>

	* ncclimo omit gaa_sng from regrid commands, since gaa_sng is in files to regrid

	* ncclimo daily mode fix parallelization

	* ncclimo implement daily climatology. commands look good. date hyperslab fails on MacOS.

	* ncclimo allow clm_md='dly' to read input from stdin, positional, or directory glob

	* ncsplit fix directory glob for split-mode

2017-01-20  Charlie Zender  <zender@uci.edu>

	* Implement stubs for clm_md='dly'

	* Document cell_measures and formula_terms

	* Add --cll_msr/--no_cll_msr and --frm_trm/--no_frm_trm to subsetting operators

	* ncks adds/suppresses cell_measures in regridded output with --rgr cll_msr/no_cll_msr

2017-01-19  Charlie Zender  <zender@uci.edu>

	* ncremap change standard_name of area_nm_out from cell_area to area

	* Extract variables in CF "cell_measures" attributes

	* Add areacella to in.cdl in preparation for adding CF cell_measures variables to extraction list

	* NCO 4.6.4-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.4-alpha05 final changes';git push
	git tag -a 4.6.4-alpha05 -m 'Version 4.6.4-alpha05 new features: fix stdin detection, var_xtr_xtn';git push --tags

	* Rewrite stdin pipe data detection in ncclimo, ncremap
	Fixes bug running in batch mode where disconnected terminal caused scripts to expect input from stdin pipe

	* ncsplit remove lat/lon from automatic extraction for CAM (only present in regridded files)

	* ncsplit change old gnr_flg to new clm_flg so climatology-generation mode is consistent

2017-01-18  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.4-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.4-alpha04 final changes';git push
	git tag -a 4.6.4-alpha04 -m 'Version 4.6.4-alpha04 new features: tidy warnings, UDUnits fix, w_stag, split doc, formula_terms';git push --tags

	* Verify formula_terms-based extractions work

2017-01-17  Charlie Zender  <zender@uci.edu>

	* Extract variables in CF "formula_terms" attributes

	* Fix attributes in hdn.cdl

2017-01-16  Charlie Zender  <zender@uci.edu>

	* Squelch warning about deflation with netCDF3 output when dfl_lvl == 0

2017-01-13  Charlie Zender  <zender@uci.edu>

	* Verified ncremap produces identical w_stag weights to those in
	b.e11.BRCP26C5CNBDRD.f09_g16.1pt5degC.001.cam.h0.AODVIS.200601-210012.nc

	* Add staggered latitude weight w_stag to FV output grids (since NCAR CCSM4 AMIP does)

	* Print offending multi-argument when input error found

	* ZKB in UDUnits code after fixing skyglow UDUnits installation

2017-01-12  Charlie Zender  <zender@uci.edu>

	* Fix all compiler warnings in nco_cln_utl.[ch]

	* Fix bug introduced in 4.6.3 where hyperslabs involving UDUnits dates failed

	* Document ncsplit

2016-01-12  Henry Butowsky  <henryb@hush.com>

	* Add exit(value) function to ncap2 scripting. 'value' propagates from script to code using custom Exception.
	Value is then returned by ncap2 main().

2017-01-11  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.4-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.4-alpha03 final changes';git push
	git tag -a 4.6.4-alpha03 -m 'Version 4.6.4-alpha03 new features: ncsplit segments work';git push --tags

	* ncsplit: Verified working on 250-year ACME beta simulation

	* ncsplit: Comment-out old Git hash code which fails with split files anyway

	* ncsplit: Sanity check that number of files on command line matches number predicted by date switches

	* ncsplit: Add outer loop over time segments

	* ncsplit: Fix parallel partial batch PID wait loop to enumerate over variables not files

2016-01-10  Henry Butowsky  <henryb@hush.com>

	* modify min_coord() to take and return an array of values (var or att)

2017-01-08  Charlie Zender  <zender@uci.edu>

	* ncsplit: Customize stdout messages

2017-01-07  Charlie Zender  <zender@uci.edu>

	* ncsplit: Split whenever input files are positional or from stdin or --ypf given

	* ncsplit: Add regridding

	* ncsplit: Add batch parallelism and --job_nbr

	* NCO 4.6.4-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.4-alpha02 final changes';git push
	git tag -a 4.6.4-alpha02 -m 'Version 4.6.4-alpha02 new features: ncsplit, cnk_csh';git push --tags

	* Set/report chunk cache size in ncks (only) main(), not cnk_ini() when input file is netCDF4

	* ncsplit: Add error-checking on input file number

2017-01-03  Charlie Zender  <zender@uci.edu>

	* Crude ncsplit-functionality works in ncclimo

	* Fix cmd_mpi index error in ncremap

2017-01-02  Charlie Zender  <zender@uci.edu>

	* Implement ncsplit stubs in ncclimo

	* Enumerate MPI commands by fl_idx not clm_idx in ncremap

2016-12-23  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.4-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.4-alpha01 final changes';git push
	git tag -a 4.6.4-alpha01 -m 'Version 4.6.4-alpha01 new features: 2017 dates. Otherwise same as 4.6.3';git push --tags

	* NCO 4.6.3 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.3 final changes';git push
	git tag -a 4.6.3 -m 'Version 4.6.3 new features: rebasing, long options, JSON brackets, udunits(), binary/annual climos';git push --tags

2016-12-22  Charlie Zender  <zender@uci.edu>

	* Add NC_EACCESS error hints

2016-12-21  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.3-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.3-beta01 final changes';git push
	git tag -a 4.6.3-beta01 -m 'Version 4.6.3-beta01 new features: tweak JSON';git push --tags

2016-12-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.3-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.3-alpha05 final changes';git push
	git tag -a 4.6.3-alpha05 -m 'Version 4.6.3-alpha05 new features: long options to ncremap, JSON brackets';git push --tags

2016-12-20  Henry Butowsky  <henryb@hush.com>

	* Add --jsn_data_brk to print JSON data array brackets

2016-12-19  Charlie Zender  <zender@uci.edu>

	* Name and document long synonyms for ncremap

2016-12-14  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.3-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.3-alpha04 final changes';git push
	git tag -a 4.6.3-alpha04 -m 'Version 4.6.3-alpha04 new features: long options to ncclimo';git push --tags

2016-12-13  Charlie Zender  <zender@uci.edu>

	* Finish long argument documentation for ncclimo

2016-12-10  Charlie Zender  <zender@uci.edu>

	* Add long options to ncclimo. Use Adam Katz's method from StackOverflow.

	* Quote $OPTARG on RHS to handle whitespace correctly

2016-12-9  Henry Butowsky  <henryb@hush.com>

	* Re-base when increment (not just basetime) changes between files for calendar=360_day, 365_day

2016-12-06  Charlie Zender  <zender@uci.edu>

	* Implement climo_ann.sh functionality in ncclimo and deprecate climo_ann.sh

	* Rename clm_md to dec_md for December mode, and use clm_md for	Climatology Mode = ann, mth, dly

2016-12-05  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.3-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.3-alpha03 final changes';git push
	git tag -a 4.6.3-alpha03 -m 'Version 4.6.3-alpha03 new features: mpaso, mpascice, CMake, rebasing';git push --tags

	* Cleared up most bugs from new rebasing code

	* Pedro has begun adding CMake support

	* ncra: reset error code in --cb block to prevent exiting with apparent error

	* Update ncclimo for new mpaso, mpascice conventions

	* Pad metadata headers to 10kB with --hdr_pad in ncremap, nccclimo

	* Preserve full command-line (with --gaa ${cmd_ln}) in ncremap,	ncclimo

	* Deprecate (temporarily, I hope) _GNU_SOURCE so ncap_yacc builds without stpcpy() problems

	* Patches necessary when UDUNITS not installed

2016-12-04  Charlie Zender  <zender@uci.edu>

	* Always return value to non-void functions: good practice and required by rpmlint
	Define _GNU_SOURCE macro when to obtain prototype for GNU extension sngcasestr() from string.h
	Patches supplied by Manfred Schwarb in nco bugs #94

2016-11-30  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.3-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.3-alpha02 final changes';git push
	git tag -a 4.6.3-alpha02 -m 'Version 4.6.3-alpha02 new features: ncclimo binary climatologies';git push --tags

	* Henry implemented ncra re-base when increment, not just basetime, changes between files

	* Make defaults for drc_prv sensible for bnr_flg and ncr_flg in ncclimo

2016-11-29  Charlie Zender  <zender@uci.edu>

	* Tested and working on FC25, no mods necessary, yay!

	* Print attribute CDL type as comment when dbg_lvl >= 1

2016-11-25  Charlie Zender  <zender@uci.edu>

	* Modify ncclimo to distinguish two types Extended climos: Meta	and Incremental

2016-11-22  Charlie Zender  <zender@uci.edu>

	* Change NCO_CNK_CSH_BYT_DFL to 0 since it is unsigned

2016-11-21  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.3-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.3-alpha01 final changes';git push
	git tag -a 4.6.3-alpha01 -m 'Version 4.6.3-alpha01 new features: bld/Makefile updates for ar, GSL;ncap2 chunking;';git push --tags

	* Add --cnk_csh_byt option and cache diagnostics

	* ncap2 no longer chunks all variables with asking, and follows command-line inputs

2016-11-18  Charlie Zender  <zender@uci.edu>

	* Revise and clarify ncwa memory usage in nco.texi

	* [NCO]_GSL_MINOR_VERSION rx fails in fmt_gsl_cls.cc due to new GSL 2.x numbering, breaks bld/Makefile

	* Compiling on grele shows netCDF 4.3.3.1 chokes on CDL naked constant ll, LL, ull, ULL syntax
	Remove such syntax from in_4.cdl to prevent breakage with bld/Makefile

2016-11-17  Charlie Zender  <zender@uci.edu>

	* Excise U from ARFLAGS on rhea/titan/yellowstone (RHEL6) since -U implemented in ar after ~2009

	* Clarify that rebasing feature only works on basetime in response to Dave Allured's question/comment

2016-11-16  Charlie Zender  <zender@uci.edu>

	* Merge spelling fixes from Sebastian Couwenberg

	* NCO 4.6.2 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.2 final changes';git push
	git tag -a 4.6.2 -m 'Version 4.6.2 new features: JSON, multi-arguments, module compatibility';git push --tags

	* NB: 4.6.2-beta04 was never tagged or released. Instead it became 4.6.2-final.

	* NCO 4.6.2-beta04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.2-beta04 final changes';git push
	git tag -a 4.6.2-beta04 -m 'Version 4.6.2-beta04 new features: multi-argument documentation, ncap2 value_list simplification, JSON indentation';git push --tags

	* Henry fixed regular brace staircases in JSON

2016-11-15  Charlie Zender  <zender@uci.edu>

	* Tweak JSON indentation

2016-11-14  Charlie Zender  <zender@uci.edu>

	* Update hidden attribute documentation

2016-11-14  Henry Butowsky  <henryb@hush.com>

	* Modify ncap2 value_list() so all values same type as first element
	  Previously the final type equalled "highest" type in list

2016-11-13  Charlie Zender  <zender@uci.edu>

	* Document multi-arguments

2016-11-12  Charlie Zender  <zender@uci.edu>

	* Tidy JSON documentation

	* --jsn_att_fmt automatically triggers --json

	* NCO 4.6.2-beta03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.2-beta03 final changes';git push
	git tag -a 4.6.2-beta03 -m 'Version 4.6.2-beta03 new features: uint, int64, uint64 suffixes';git push --tags

	* Henry added NCO_PATH environment variable for ncap2 #include searches

2016-11-10  Charlie Zender  <zender@uci.edu>

	* Update CDL attribute tags for uint, int64, uint64 to "ul", "ll", "ull", respectively
	This may break builds on netCDF <= 4.3.0 because ncgen chokes on "ll" syntax
	This is why att_var is in in_4.cdl and not in in_grp.cdl

2016-11-09  Charlie Zender  <zender@uci.edu>

	* Document JSON options in nco.texi

2016-11-08  Charlie Zender  <zender@uci.edu>

	* Expose JSON options in documentation

	* Fix help options for fl_fmt to include 64bit_data/CDF5

	* Henry added capability for increasing default level of attribute verbosity, now named jsn_att_fmt

2016-11-07  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.2-beta02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.2-beta02 final changes';git push
	git tag -a 4.6.2-beta02 -m 'Version 4.6.2-beta02 new features: MSVC/C++ compliance, JSON "attributes" and "variables" blocks';git push --tags

	* Henry added "attributes" and "variables" blocks to JSON backend

2016-11-06  Charlie Zender  <zender@uci.edu>

	* Make nco_mta.[ch] C++-compliant

	* Re-prototype nco_join_sng() to avert compiler warnings

	* Add strsep() replacement code for MSVC

2016-11-04  Charlie Zender  <zender@uci.edu>

	* Implement/use jsn_typ_nm() to define JSON types

	* Draft fix so ncatted understands NaN on MinGW

2016-11-03  Charlie Zender  <zender@uci.edu>

	* Fix C++ (and thus Windows) build

	* NCO 4.6.2-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.2-beta01 final changes';git push
	git tag -a 4.6.2-beta01 -m 'Version 4.6.2-beta01 new features: mta backslashes, concise warnings, JSON';git push --tags

	* Tidy JSON output whitespace

2016-11-03  Henry Butowsky  <henryb@hush.com>

	* First cut of JSON output from ncks

2016-10-25  Charlie Zender  <zender@uci.edu>

	* Limit number of non-CCW errors

	* Clarify missing value error message for multi-arguments

2016-10-22  Charlie Zender  <zender@uci.edu>

	* Clarify how to create new record dimensions in ncra/ncrcat messages

2016-10-13  Charlie Zender  <zender@uci.edu>

	* ncremap now loads ncl module on edison to find ESMF_RegridWeightGen

2016-10-12  Charlie Zender  <zender@uci.edu>

	* Add HINT to multi-arg error handling, NCO'ize routines

2016-10-11  Charlie Zender  <zender@uci.edu>

	* Suppress all but first WARNING from nco_is_spc_in_cf_att()

2016-10-10  Charlie Zender  <zender@uci.edu>

	* Jerome added support for double-backslash quoting in multi-arguments

2016-10-07  Charlie Zender  <zender@uci.edu>

	* Jerome changed multi-args to use strstr() instead of strtok() or strsep()

2016-10-02  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.2-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.2-alpha02 final changes';git push
	git tag -a 4.6.2-alpha02 -m 'Version 4.6.2-alpha02 new features: multi-arguments (nco_mta.[ch]), ARFLAGS, LLVM 8.0.0, GCC 6.2.1';git push --tags

	* nco_rgr_ini() now only calls nco_arg_mlt_prs() when rgr_arg_nbr > 0

2016-10-01  Charlie Zender  <zender@uci.edu>

	* Alter nco_mta_get() to initialize delimiter if NULL

	* Makefile sets ARFLAGS to rsUv (U is new) to create non-deterministic library archives
	Prevents GCC toolchain i18n warnings on Ubuntu 16.04 (xenial) and later

2016-09-30  Charlie Zender  <zender@uci.edu>

	* Fix compiler warnings emitted by clang LLVM 8.0.0

	* Update configure.ac MAKEINFO_VERSION to grep for texinfo so MacOS 'texi2any' works

	* #include netcdf_mem.h for nc_open_mem() prototype

	* Fix compiler warnings emitted by GCC 6.2.1

2016-09-26  Charlie Zender  <zender@uci.edu>

	* Fix false-positives in multi-argument regression tests

2016-09-26  Charlie Zender  <zender@uci.edu>

	* Adopt Jerome's implementation of multi-arg for trr, rgr, gaa, ppc

2016-09-23  Charlie Zender  <zender@uci.edu>

	* Split multi-argument parsing and KVM routines into nco_mta.[ch]

2016-09-23  Henry Butowsky  <henryb@hush.com>

	* Add manual section on vpointers

2016-09-21  Charlie Zender  <zender@uci.edu>

	* Improve exact non-spherical area solution

2016-09-21  Henry Butowsky  <henryb@hush.com>

	* Modify prn_cls(), change snprint() to sprint4, document sprint() and sprint4()

2016-09-18  Charlie Zender  <zender@uci.edu>

	* Add exact solution (untested) for non-spherical area of latitude-triangles

	* Change multi-argument delimiter from colon to hash

	* Add nco_lon_dff_brnch_rdn() to enforce branch-cut rules in area diagnosis

2016-09-16  Charlie Zender  <zender@uci.edu>

	* Provide HINT when dimensions have size mismatch due to degenerate dimension

2016-09-15  Charlie Zender  <zender@uci.edu>

	* Change multi-argument delimiter from semi-colon to colon

2016-09-14  Charlie Zender  <zender@uci.edu>

	* Merge Jerome Mao's update/improvement of multi-argument parsing

2016-09-09  Henry Butowsky  <henryb@hush.com>

	* Updated manual section on ncap2/print (need to finalize form of sprint() & snprint())

2016-09-01  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.1-gmd_ppc release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.1-gmd_ppc final changes';git pus
	git tag -a 4.6.1-gmd_ppc -m 'Same as version 4.6.2-alpha01. Zenodo tag for GMD PPC paper.';git push --tags

2016-08-31  Charlie Zender  <zender@uci.edu>

	* git tag -a 4.6.2-alpha01-zenodo -m 'Same as version 4.6.2-alpha01. Second attempt at Zenodo release for PPC paper.';git push --tags

	* NCO 4.6.2-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.2-alpha01 final changes';git push
	git tag -a 4.6.2-alpha01 -m 'Version 4.6.2-alpha01 new features: fall-back if BASH_SOURCE fails; first Zenodo release for PPC paper';git push --tags

2016-08-24  Charlie Zender  <zender@uci.edu>

	* Note in ncra.c tagged 20160824 on how to fix --cb to work for multiple-record input files and hyperslabs

2016-08-24  Henry Butowsky  <henryb@hush.com>

	* Document ncap2 function create_bounds()

2016-08-23  Charlie Zender  <zender@uci.edu>

	* Split finding NCO path from finding script path

2016-08-22  Charlie Zender  <zender@uci.edu>

	* Add -U drc_tmp switch to ncremap documentation

2016-08-09  Charlie Zender  <zender@uci.edu>

	* Implement fall-back in case BASH_SOURCE does not work

	* Add [[ -z "${spt_src}" ]] && spt_src="${0}" in case BASH_SOURCE does not work

	* Change spt_nm=$(basename ${BASH_SOURCE[0]}) to spt_nm=$(basename ${spt_src}). Former fails for Jerome and on Edison

2016-08-06  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.1 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.1 final changes';git push
	git tag -d 4.6.1;git push origin :refs/tags/4.6.1
	git tag -a 4.6.1 -m 'Version 4.6.1 new features: nco_fl_mv(), cnk doc, ncremap crv, ncatted dot, ncclimo ncr md, ncflint -N, provenance';git push --tags

2016-08-04  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.1-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.1-beta01 final changes';git push
	git tag -a 4.6.1-beta01 -m 'Version 4.6.1-beta01 new features: ncremap crv, constance, nco_fl_mv(), cnk';git push --tags

	* ncremap: gave-up confirming overwriting existing maps until it works in interactive shells only

	* Use different output dimensions bounds names for mappings to curvilinear axes
	Default is now to use temporal bounds name for spatial bounds for rectangular grids,
	and to use "nvertices" for spatial bounds on 1D and curvilinear grids.

2016-08-03  Charlie Zender  <zender@uci.edu>

	* ncclimo: merge Balwinder's changes for Constance at PNNL

	* Only write lat_wgt attributes when flg_grd_out_rct is true

	* Write lat/lon_crn not lat/lon_bnd data when map is curvilinear

	* Improve documentation for chunking with LFP and using ncra subcyles and MRO

2016-08-02  Charlie Zender  <zender@uci.edu>

	* Fix nco_grd_nfr(): use nco_inq_varid() not nco_inq_dimid() to	find coordinates

	* Relax failed return code diagnosis for nco_fl_mv(), fail when rcd != 0

2016-08-01  Charlie Zender  <zender@uci.edu>

	* Clarify which size options are in bytes and which are in elements, especially for chunking

2016-07-31  Charlie Zender  <zender@uci.edu>

	* Deduce script and NCO paths using stackoverflox method borrowed from terraref.sh

2016-07-29  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.1-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.1-alpha03 final changes';git push
	git tag -a 4.6.1-alpha03 -m 'Version 4.6.1-alpha03 new features: fix hyperactive incremental mode, ncatted special characters, chunking docs';git push --tags

	* Prevent ncclimo from attempting to generate incremental climos when yr_srt_prv not supplied

2016-07-26  Charlie Zender  <zender@uci.edu>

	* Allow special characters in ncatted names. Fixes TODO nco1130 reported by emontgomery 20160726.

2016-07-19  Charlie Zender  <zender@uci.edu>

	* Accept, e.g., map_rew as well as rew and cnk_map_rew-style options

2016-07-17  Charlie Zender  <zender@uci.edu>

	* Address some chunking documentation/implementation inconsistencies noted by Antonio Rodriges

2016-07-14  Charlie Zender  <zender@uci.edu>

	* Avoid segfault when --gaa key= does not have RHS argument, so val=NULL

2016-06-21  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.1-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.1-alpha02 final changes';git push
	git tag -a 4.6.1-alpha02 -m 'Version 4.6.1-alpha02 new features: ncclimo incremental mode, ncflint -N';git push --tags

	* Fix yrs_averaged attributes of incremental climos

	* Fix incremental generation on analysis grid

2016-06-20  Charlie Zender  <zender@uci.edu>

	* Correct filenames for fl_rgr_xtn that contain December

2016-06-17  Charlie Zender  <zender@uci.edu>

	* Implement all ncclimo extended/previous directories and command-line options

	* ncclimo extended climatologies work on analysis grid

2016-06-16  Charlie Zender  <zender@uci.edu>

	* Add ncflint -N, --nrm, --normalize option so w1:=w1/(w1+w2), w2:=w2/(w1+w2)

	* Quiet ncpdq INFO messages

	* ncclimo extended climatologies work on native grid

2016-06-15  Charlie Zender  <zender@uci.edu>

	* Add stubs to extend previous climatology in ncclimo

2016-06-13  Charlie Zender  <zender@uci.edu>

	* Add integrated, end-to-end grid-generation, map-generation, conservative regridding regression test

2016-06-09  Charlie Zender  <zender@uci.edu>

	* Coaslesce (and make obsolete) four earlier functions into nco_is_spc_in_cf_att()

	* Add nco_rfr_crd.pdf to homepage. Contributed by Wenshan Wang of UCI.

2016-06-03  Henry Butowsky  <henryb@hush.com>

	* array() function can now take dimension list as third argument, e.g., n2=array(1.0, 2.0, /$time,$lat,$lon/)

2016-06-02  Henry Butowsky  <henryb@hush.com>

	* Fix handling of implicit array bounds for slabs of form var(x:)

2016-05-31  Charlie Zender  <zender@uci.edu>

	* Die with explanation when --mk_rec_dmn receives multiple arguments

2016-05-26  Henry Butowsky  <henryb@hush.com>

	* Fix VarOpNew.cc so array of NC_STRING is correctly sorted in descending order

	* Add getdims() to bsc_cls, returns attribute of type NC_STRING with dim names

2016-05-23  Charlie Zender  <zender@uci.edu>

	* Clean-up new provenance code now that netCDF4 4.4.1-RC3 merged necessary patches

2016-05-20  Charlie Zender  <zender@uci.edu>

	* Add nctypget filter

2016-05-20  Henry Butowsky  <henryb@hush.com>

	* Add NC_STRING sort (att & var) to srt_cls(). More work to do integrating into existing templates...

2016-05-16  Charlie Zender  <zender@uci.edu>

	* Condense homepage, add new presentations

	* NCO 4.6.1-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.1-alpha01 final changes';git push
	git tag -a 4.6.1-alpha01 -m 'Version 4.6.1-alpha01 new features: netCDF4 provenance attributes';git push --tags

2016-05-15  Charlie Zender  <zender@uci.edu>

	* Add ncap2 hyperbolic function support to MACOSX

2016-05-14  Charlie Zender  <zender@uci.edu>

	* Support reporting _NCProperties, _IsNetcdf4, _SuperblockVersion in netCDF 4.4.1+

2016-05-12  Charlie Zender  <zender@uci.edu>

	* Remove ncremap step to fix lon dimension in HIRDLS/MLS files since ncpdq now works as expected

	* Fix ncclimo regression test (sought non-existent area variable) and new ncap2 regression test (sought mis-spelled file)

	* NCO 4.6.0 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.0 final changes';git push
	git tag -a 4.6.0 -m 'Version 4.6.0 new features: ncclimo, ncap2	vlists, climatology bounds, CF, terraref, ncpdq fixes';git push --tags

2016-05-12  Henry Butowsky  <henryb@hush.com>

	* Fix nasty bug in out()/att(hyperslab) action for NC_STRING that caused double free() on clang

2016-05-11  Charlie Zender  <zender@uci.edu>

	* Allow for "coordinates"-ordering opposite to storage (LRV->MRV) order, e.g., "coordinates=[longitude,latitude]" instead of "coordinates=[longitude,latitude]"

2016-05-09  Charlie Zender  <zender@uci.edu>

	* Shorten unique name suffix in ncremap

	* Add -V var_rgr option to ncremap to invoke --rgr_var=var_rgr for CF grid inferral and remapping

2016-05-06  Charlie Zender  <zender@uci.edu>

	* Pedro committed ncpdq patches that fix vexing longstanding problems permuting in group hierarchies

2016-05-05  Henry Butowsky  <henryb@hush.com>

	* Add space ' ' to allowed chars in a quoted var or att which can be:
	  VAR_NM_QT: (LPHDGT|'-'|'+'|'.'|'('|')'|':'|' ' )+  ;
	  Full NetCDF specification for ID includes UTF8 characters (save that for another day)

2016-05-04  Charlie Zender  <zender@uci.edu>

	* Fix nces tabs regression test

2016-05-03  Charlie Zender  <zender@uci.edu>

	* Successfully used CF-coordinate method in both nco_rgr_map() and nco_grd_nfr() when triggered by --rgr_var option

	* Improve and simplify nco_grd_nfr() logic for grid determination, introduce and respect lon_dmn and lat_dmn options for dimension names

	* Inferring grids from CF "coordinates" attribute works, now remapping needs same logic...

	* Check units of coordinate variables

	* Add stubs to check CF "coordinates" attribute to infer grid

2016-05-02  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.0-beta05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.0-beta05 final changes';git push
	git tag -a 4.6.0-beta05 -m 'Version 4.6.0-beta05 new features: ncclimo/ncremap rgr, netCDF4 grids, upk MOD13, SLURM_NODELIST';git push --tags

	* ncpdq: initialize REDEFINED_RECORD_DIMENSION=False only once, before variable loop (bug caught by Pedro)

	* ncpdq: change "break;" to "continue;" (bug caught by Pedro)

	* Fix non-interactive batch mode on SLURM to expand SLURM_NODELIST and store as file like PBS and Cobalt

2016-05-01  Charlie Zender  <zender@uci.edu>

	* Change --upk switch. Was flag and synonym for -U, --unpack (ncpdq only)
	Now --upk arg where arg=[0,1,2]=[netCDF=MOD04,MOD10,MOD13] unpacking algorithm

	* Expand HDF4 hdf_upk logic to nco_upk_HDF_MOD10, nco_upk_HDF_MOD13 for MODIS MOD10CM and MOD13C2 datasets

	* Correct order of shuffle,deflate in nco_var_def_deflate()

	* Respect fl_fm_out and dfl_lvl in nco_grd_mk(), nco_grd_nfr(), nco_rgr_map()

2016-04-29  Charlie Zender  <zender@uci.edu>

	* Add ncremap and ncclimo regression tests when $USER=zender

2016-04-29  Henry Butowsky  <henryb@hush.com>

	* Add has_miss() to the _miss() familty in utl_cls()

2016-04-28  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.0-beta04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.0-beta04 final changes';git push
	git tag -a 4.6.0-beta04 -m 'Version 4.6.0-beta04 new features: TMPDIR, var=var.double(), c2b, grid_mapping';git push --tags

	* Finish first pass at documenting ncclimo

2016-04-28  Henry Butowsky  <henryb@hush.com>

	* IMPORTANT: revert mods in 4.5.4. Once again variables in input can be redefined in output without a cast:
	  time=time.int() is once again exactly equivalent to time[$time]=time.int()

	* Add to regular assign statement conformance of RHS, e.g, n2[time,lat,lon]=10.0;n2=time; // stretches time to conform to n2

2016-04-28  Henry Butowsky  <henryb@hush.com>

        * Add bsc_tst.nco to ncap2 perl test suite. Currently tests casting, hyperslabbing, and intrinsic functions.

2016-04-28  Henry Butowsky  <henryb@hush.com>

	* Changed RAM variables that represent netCDF types from __FLOAT, __DOUBLE ... to
          NC_NAT, NC_BYTE, NC_UBYTE, ... NC_FLOAT, NC_DOUBLE
	  Use these with the type() method,  e.g, if(var.type() == NC_FLOAT) var=var.double()

2016-04-27  Charlie Zender  <zender@uci.edu>

	* ncremap fix drc_tmp logic to work without $TMPDIR

	* ncremap search for ERWG, Tempest before trying to execute them

	* ncclimo add debugging info for MPI node list

2016-04-26  Charlie Zender  <zender@uci.edu>

	* Reset rcd handling in CF bounds logic

	* Add ncclimo support for "generic" datasets (like NASA MERRA) with YYYYMM format

2016-04-22  Charlie Zender  <zender@uci.edu>

	* Document --cb, --c2b

2016-04-20  Charlie Zender  <zender@uci.edu>

	* Treat as coordinates all variables listed in a "grid_mapping" attribute

	* Default source code download links now point to GitHub not SF

2016-04-18  Charlie Zender  <zender@uci.edu>

	* Excise old CF-handling from ncclimo

	* NCO 4.6.0-beta03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.0-beta03 final changes';git push
	git tag -a 4.6.0-beta03 -m 'Version 4.6.0-beta03 new features: ncclimo, climatology bounds';git push --tags

	* Turn-off dysfunctional legible (lgb) print-formatting until it works

	* Coordinate cell_methods with climatology bounds

	* Copy missing calendar to temporal bounds so ncdump -t prints correct date

2016-04-17  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.0-beta02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.0-beta02 final changes';git push
	git tag -a 4.6.0-beta02 -m 'Version 4.6.0-beta02 new features: ncclimo, climatology bounds';git push --tags

	* Copy missing units to temporal bounds so ncdump -t prints correct date

2016-04-16  Charlie Zender  <zender@uci.edu>

	* Work on climatology_bounds for ACME...

2016-04-15  Henry Butowsky  <henryb@hush.com>

	* Modify out() and assign() so ASSIGN familiy of operands and '++', -- operands a value is returned only if needed

	* Fix bug introduced in 4.5.4: Regular assign statements in two-parse operations did not propagate missing values from RHS to LHS. Following test now works ncap2 -v -O -S gsl_sf.in in.nc foo.nc

2016-04-12  Charlie Zender  <zender@uci.edu>

	* Print blank line after global attributes in CDL mode in nco_prn_att()

2016-04-08  Henry Butowsky  <henryb@hush.com>

	* Modify ncap_var_var_op() and ncap_var_var_inc() so two operand functions need not stretch or conform scalars

2016-04-07  Charlie Zender  <zender@uci.edu>

	* Split cori from edison binary locations to allow for different system libraries

2016-04-06  Charlie Zender  <zender@uci.edu>

	* Add skeleton structure to implement climatology_bnds convention in ncra

2016-04-04  Charlie Zender  <zender@uci.edu>

	* Clarify ncks -H documentation, say clearly that it toggles

2016-04-01  Charlie Zender  <zender@uci.edu>

	* NCO 4.6.0-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.6.0-beta01 final changes';git push
	git tag -a 4.6.0-beta01 -m 'Version 4.6.0-beta01 new features: Terraref works well';git push --tags

	* Change default temporary directory (for intermediate files) from $drc_out to $TMPDIR

	* Trim trailing slash from drc_out, drc_tmp so $TMPDIR looks right

2016-03-31  Charlie Zender  <zender@uci.edu>

	* Make FORCE_APPEND I/O in nco_fl_out_open(), and set to true when user interactively selects append
	This ensures specifying -A follows same code path as interactively selecting append. Fixes bug reported by Parker Norton.

2016-03-31  Henry Butowsky  <henryb@hush.com>

	* Modify LHC casting so "pathological" expressions like 'three_dmn_var_dbl[time,lon,lat]=three_dmn_var_dbl.int()' work

2016-03-30  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.6-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.6-alpha06 final changes';git push
	git tag -a 4.5.6-alpha06 -m 'Version 4.5.6-alpha06 new features: trr ntl ncap2 att prp';git push --tags

	* Successfully (de-)interleave ENVI files (viable GDAL replacement)!

	* Change default gaa mode (back from) append to overwrite to prevent repeated values in climo_nco.sh ANN files

2016-03-29  Charlie Zender  <zender@uci.edu>

	* Functionalize nco_sng2typ()

	* Full Terraref trr infrastructure: nco_trr_ini(), nco_trr_read(), nco_trr_free()

2016-03-28  Charlie Zender  <zender@uci.edu>

	* Add binary file read utilities

	* Clarify append message to include metadata consequences

2016-03-24  Henry Butowsky  <henryb@hush.com>

	* Implement new notation to LHC a scalar, e.g., four[]=10;

2016-03-24  Charlie Zender  <zender@uci.edu>

	* Initialize kvm.val to NULL to handle empty values, e.g., --gaa history=""

2016-03-24  Henry Butowsky  <henryb@hush.com>

	* Attribute propagation from RHS now works with LHC

2016-03-22  Charlie Zender  <zender@uci.edu>

	* ncremap uses append not overwrite mode

	* ncatted new nappend mode appends only to existing attributes

2016-03-18  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.6-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.6-alpha05 final changes';git push
	git tag -a 4.5.6-alpha05 -m 'Version 4.5.6-alpha05 new features: ncap2 pointers, terraref';git push --tags

	* Add paths for LLNL aims machines to ncremap, climo_nco.sh, climo_ann.sh

2016-03-18  Henry Butowsky  <henryb@hush.com>

	* Removed all print functions from ncoGrammar

	* Print now handled as method by print_cls() in fmc_all_cls.cc

2016-03-09  Charlie Zender  <zender@uci.edu>

	* Change CPP VERSION token to NCO_VERSION to prevent namespace conflict with other packages

2016-03-08  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.6-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.6-alpha04 final changes';git push
	git tag -a 4.5.6-alpha04 -m 'Version 4.5.6-alpha04 new features: ncremap handles 1D pseudo-rectangular input like OCO2';git push --tags

	* Finalize modifications to handle OCO2 and properly diagnose bad input data

	* Perform branch-cut analysis and CCW correction on pseudo-rectangular input

2016-03-07  Charlie Zender  <zender@uci.edu>

	* OCO2 bounds are given as CW not CCW so must ensure CCW before writing to output

	* Add OCO2 bounds latitude_bnds, longitude_bnds and fixes for 1D-pseudo-rectangular bounds

2016-03-06  Charlie Zender  <zender@uci.edu>

	* Fix Bit-Set algorithm (--baa=2) not to quantize zero upward

	* Fix Bit-Set algorithm (--baa=2) to "or and" not "and and"

2016-03-01  Charlie Zender  <zender@uci.edu>

	* Test automatic double->float conversion for regridding storage to conserve space. Abandon until missing value conversion also done.

	* Allow flg_frc_nrm && rgr->flg_rnr to work so MPAS-I bilinear regridding with --rnr completes.	Full ramifications unclear.

2016-02-29  Charlie Zender  <zender@uci.edu>

	* Modify ncpdq -a option in ncremap to handle MPAS ice dimensions

	* NCO 4.5.6-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.6-alpha03 final changes';git push
	git tag -a 4.5.6-alpha03 -m 'Version 4.5.6-alpha03 new features: ncremap add cmd_msh to history';git push --tags

	* Brown paper bag release--switching from nco_put_vara() to nco_put_var() broke ... a lot

	* Add cmd_msh to history attribute of maps generated by Tempest

2016-02-28  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.6-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.6-alpha02 final changes';git push
	git tag -a 4.5.6-alpha02 -m 'Version 4.5.6-alpha02 new features: FV slat/slon, unique names, clean-up, ncatted -t, NC_NOFILL,nc_put_var(),ncremap -U';git push --tags

	* Add specifiable directory for intermediate files: ncremap -U drc_tmp

	* Add list of MPAS grid and extensive variables to exclude

	* Add wrappers for nc_put_var(), nc_get_var() families

	* Add ncatted -t --typ_mch --type_match switch for editing all variables whose type matches attribute type and no others

	* Turn-off fill mode in regridding

	* Add history to ncatted when called by ncremap

2016-02-27  Charlie Zender  <zender@uci.edu>

	* ncremap does not annotate with ncatted when called from climo_nco.sh

	* Use unique intermediate filenames by default in ncremap, to prevent interference during parallel invocations

	* Add slat/slon coordinates to FV output grids for interoperability with AMWG diagnostics

2016-02-26  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.6-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.6-alpha01 final changes';git push
	git tag -a 4.5.6-alpha01 -m 'Version 4.5.6-alpha01 new features: ncremap MPAS --rnr=0.0';git push --tags

	* ncremap: use ncatted to add _FillValue for MPAS

	* ncremap: make --rnr=0.0 default for MPAS

2016-02-17  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.5 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.5 final changes';git push
	git tag -a 4.5.5 -m 'Version 4.5.5 new features: ncremap CCW, gaa, -j, -P mpas; CDF5, mebs nrm, tabs, gaa ncatted ncrename, nces crd mtd';git push --tags

	* Add history attribute to maps produced by ncremap

2016-02-16  Charlie Zender  <zender@uci.edu>

	* Add nco_glb_att_add() and nco_vrs_att_cat() to ncatted, ncrename

2016-02-14  Charlie Zender  <zender@uci.edu>

	* Introduce tabs = total_absolute_value operator and add numerous nces/ncwa regression tests

2016-02-13  Charlie Zender  <zender@uci.edu>

	* Notice and fix mebs off-by-one error in tally accumulated in nco_opr_drv() (again affected ncra/nces not ncwa)

2016-02-12  Charlie Zender  <zender@uci.edu>

	* Tighten switch defaults for nco_op_typ

	* NCO 4.5.5-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.5-alpha07 final changes';git push
	git tag -a 4.5.5-alpha07 -m 'Version 4.5.5-alpha07 new features: ncremap zonal, ncra/nces mebs nrm, ncap2 ngt dmn idx, cygwin';git push --tags

	* Fix mebs normalization in ncra/nces. Previously mebs was not normalized and would just accumulate!
	Affected all previous version of ncra/nces but not ncwa. Problem reported by Will Koeppen.

	* Complete special-case zonal workflows (HIRDLS and MLS) in ncremap, nco_rgr.c

2016-02-11  Charlie Zender  <zender@uci.edu>

	* Add most of HIRDLS special case to ncremap

2016-02-11  Henry Butowsky  <henryb@hush.com>

	* Fix incorrect handling of negative dmn indices in ncoGrammar in ncap_evl_lmt(): srt<0 => srt+=dmn_sz, end<0 => end+=dmn_sz

2016-02-10  Charlie Zender  <zender@uci.edu>

	* Collect backup-definitions of M_PI, M_LN2, M_LN10 from nco_aux.h, nco_ppc.h, and nco_rgr.h into nco.h
	Those definitions appear to be needed by Cygwin, and only Cygwin, on which NCO is rarely tested
	Having them available in all source files reduces chance of future Cygwin breakage

	* NCO 4.5.5-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.5-alpha06 final changes';git push
	git tag -a 4.5.5-alpha06 -m 'Version 4.5.5-alpha06 new features: bilinear default, fix when building with netCDF 4.4.0, nces crd mtd';git push --tags

	* Update ncremap docs to describe new capabilities

2016-02-09  Charlie Zender  <zender@uci.edu>

	* ncremap appears to work with user-specified map-file names to	write
	Unfortunately, neither ERWG nor Tempest support zonally 1-D zonally uniform grids

	* Disentangle map_mk and map_usr_flg in ncremap

	* Add DeepBlue-SeaWiFS dimensions natrack, nxtrack

2016-02-08  Charlie Zender  <zender@uci.edu>

	* Allow ncremap -m to specify name of internally-generated mapfile

2016-02-07  Charlie Zender  <zender@uci.edu>

	* Implement back-compatible NC_VERSION tokens in nco_netcdf.h

	* Tweak ncremap defaults: tps_opt=mono, rgr_opt += --rnr=0.0

2016-02-03  Charlie Zender  <zender@uci.edu>

	* Patch to copy attributes of coordinate variables in nces --nsm_grp (from Pedro)

2016-02-02  Charlie Zender  <zender@uci.edu>

	* Make code MSVC-proof by allocating arrays only from compile-time constants

	* Annotate mdl_1.cdl to verify whether nces, ncbo, ncra propagate coordinate and non-coordinate metadata to output

2016-01-30  Charlie Zender  <zender@uci.edu>

	* ncremap: Change default algorithm back to ESMF bilinear, which works for all Feng's cases

2016-01-28  Charlie Zender  <zender@uci.edu>

	* Improve ncatted quick help screen

2016-01-27  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.5-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.5-alpha05 final changes';git push
	git tag -a 4.5.5-alpha05 -m 'Version 4.5.5-alpha05 new features: CCW detection/correction';git push --tags

2016-01-25  Charlie Zender  <zender@uci.edu>

	* Cover most parameter space for tricky quadrilateral inputs by	calling nco_ccw_chk() recursively

	* Mark --enable-esmf as developmental switch to be avoided

	* ncremap correctly handle simultaneous -O drc_out -o fl_out switches

	* Notate oft-need antlr post-processing perl script command

2016-01-24  Charlie Zender  <zender@uci.edu>

	* Implement "cheesy" patch that inverts CW quadrilaterals to make them CCW so Tempest can read them
	Patch succeeds in making all grids CCW (according to NCO) though Tempest occasionally disagrees

2016-01-24  Henry Butowsky  <henryb@hush.com>

	* ncap2 first cut to grammar file of code for hyperslabbing attributes on LHS and RHS

	* First version of push() method for attributes

2016-01-18  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.5-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Versqion 4.5.5-alpha04 final changes';git push
	git tag -a 4.5.5-alpha04 -m 'Version 4.5.5-alpha04 new features: ncremap -j job_nbr';git push --tags

	* Add parallelism tuning with ncremap -j job_nbr where job_nbr is number of simultaneous jobs

	* Fix double eval() in ncremap

	* Adopt MPI per-node parallelization nearly in toto from climo_nco.sh to ncremap

2016-01-17  Charlie Zender  <zender@uci.edu>

	* Implement nco_ccw_chk()

	* Implement Bit Shave and Bit Set algorithms (for comparison with Bit Groom): ncks --baa=[0,1,2]

2016-01-16  Charlie Zender  <zender@uci.edu>

	* Update ncremap environment (e.g., DATA, NCO PATH, netCDF LD_LIBRARY_PATH) on HPCs and tidy output

2016-01-15  Charlie Zender  <zender@uci.edu>

	* Warn if packed in nco_grd_nfr() and nco_rgr_map() for input coordinate and variable, respectively

	* Deep-free NC_STRING var_sct in nco_var_free() for ncap2 only

	* NCO 4.5.5-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Versqion 4.5.5-alpha03 final changes';git push
	git tag -a 4.5.5-alpha03 -m 'Version 4.5.5-alpha03 new features: ncremap -P airs,mpas';git push --tags

	* ncpdq: Eliminate duplicate file-header set-up that causes --gaa option to fail second-time

	* ncremap: Add -P pdq_typ option for AIRS and MPAS data

2016-01-14  Charlie Zender  <zender@uci.edu>

	* Tweaks to improve NaN-handling due to MODIS chlorophyll issues

	* Explicitly include <math.h> for all files that use isfinite(), isinf(), isnan()

	* NCO 4.5.5-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.5-alpha02 final changes';git push
	git tag -a 4.5.5-alpha02 -m 'Version 4.5.5-alpha02 new features: Support CDF5';git push --tags

	* CDF5 work: deprecate NC_FORMAT_64BIT for NC_FORMAT_64BIT_OFFSET, expose NC_FORMAT_64BIT_DATA, update docs for -5, --5, --fl_fmt="64_bit_data"

	* Deprecate pre-branch-cut methods

	* NCO 4.5.5-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.5-alpha01 final changes';git push
	git tag -a 4.5.5-alpha01 -m 'Version 4.5.5-alpha01 new features: branch-cut patch to infer curvilinear grids';git push --tags

	* Implement full branch-cut patch in nco_grd_nfr(), keeps curvilinear grids from generating concave gridcells
	in 3/4 of Feng's five-failure parade, and causes 2/4 of those to work "perfectly". Remaining two have other bugs in conserve mode.

2016-01-13  Charlie Zender  <zender@uci.edu>

	* Account for branch-cuts in extrapolating longitude from template

	* Implement kludge for AMSR mask variable

	* Add new lat,lon,col dimension and coordinate names for TRMM, GPM, AMSR, OCO2:
	sounding_id,Latitude,Longitude,nscan,npix,npixel,S1_Latitude,S1_Longitude

2016-01-08  Henry Butowsky  <henryb@hush.com>

	* ncap2 ncap_stats_wvariance(var,weight) set mss_val in weight to missing values in var

2016-01-07  Charlie Zender  <zender@uci.edu>

	* Fix typos caught by Debian lint from Bas Couwenberg

	* NCO 4.5.4 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.4 final changes';git push
	git tag -a 4.5.4 -m 'Version 4.5.4 new features: ncremap fix ncpdq nfr cap, XML _Unsigned, crv dateline, GSL2';git push --tags

2016-01-04  Charlie Zender  <zender@uci.edu>

	* Change copyright year to 2016

2016-01-04  Henry Butowsky  <henryb@hush.com>

	* Add sum() as synonym for total() in ncap2 aggregate methods

	* ncap2 method ncap_stats_wvariance(var,weight)	conforms wgt to var

2016-01-03  Henry Butowsky  <henryb@hush.com>

	* First-cut of custom method weighted variance for Christine smit v=ncap_stats_wvariance(var,weight)

2016-01-01  Charlie Zender  <zender@uci.edu>

	* Complete ncremap documentation, including limitations

	* ncremap recover gracefully from Tempest failures (false negative return codes)

	* Implement -E and -T for ESMF and TempestRemap options

	* Remove --src/dst_regional switches from ESMF default

	* Change default ESMF interpolation algorithm from bilinear to conserve

2015-12-31  Charlie Zender  <zender@uci.edu>

	* Add ncremap TempestRemap option with -w 'tempest'

	* NCO 4.5.4-beta04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.4-beta04 final changes';git push
	git tag -a 4.5.4-beta04 -m 'Version 4.5.4-beta04 new features: ncremap solidity';git push --tags

	* Barrage of tweaks to give ncremap sensible defaults on non-CSZ machines

	* Add ncremap -M mlt_map_flg toggle switch, clean-up examples, finish documentation

2015-12-30  Charlie Zender  <zender@uci.edu>

	* Support specifying source grid instead of inferring from source file

	* Re-arrange ncremap options again, use -i for in_fl, -s for src_grd

	* Add MODIS L2 coordinate information to usual suspects database

	* Introduce basic background parallelism and PID-based status checking into ncremap

	* Note that inferred ACME grids are unusable by ERWG due to lack of corner information

2015-12-29  Charlie Zender  <zender@uci.edu>

	* Treat variables named wgt_* like coordinates (and gw and msk_*): avoid math when possible

2015-12-28  Charlie Zender  <zender@uci.edu>

	* Restructure ncremap to use -m map_fl and allow stdin

2015-12-24  Charlie Zender  <zender@uci.edu>

	* Improve ncremap documentation in nco.texi

	* Fix mebs formula in nco.texi

2015-12-23  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.4-beta03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.4-beta03 final changes';git push
	git tag -a 4.5.4-beta03 -m 'Version 4.5.4-beta03 new features: ncremap in autotools;ncpdq bug;netCDF 4.4.0 tokens';git push --tags

	* Finish minimal ncremap.1 man page

	* Note ncra test #39 is expected to fail due to TODO nco1126

	* Add ncremap script to bin directory in data/Makefile.am, bld/Makefile, man/Makefile.am, man/man1

	* Simplify broken ncpdq handling of dimension reversal list. Change dmn_rvr_rdr from static to dynamic array.
	Prevent writing past end of dmn_rvr_rdr. Index dmn_rvr_rdr same as dmn_rdr. Fixes Feng Ding's command:
	ncpdq -O -a StdPressureLev,GeoTrack,GeoXTrack ${DATA}/hdf/AIRS.2014.10.01.202.L2.RetStd.v6.0.11.0.G14275134307.hdf.nc ~/foo.nc
	Breaks regression test ncpdq #41

2015-12-22  Charlie Zender  <zender@uci.edu>

	* Backward-compatible definitions of new tokens in netCDF 4.4.0 including NC_FORMATX_* tokens and NC_FORMAT_64BIT_[DATA/OFFSET] for CDF5

	* Add XLAT_M, XLONG_M coordinates to regridder database of usual suspects

	* Re-assign some ncremap switches to be more heuristic

	* Add ncremap to documentation

2015-12-21  Charlie Zender  <zender@uci.edu>

	* Compare grid spans and interfaces in single-precision (e.g., to 180.0f, 360.0f) to be more error-tolerant

	* ncremap pass through dbg_lvl >= 3 to ncks, enable user-defined thr_nbr

2015-12-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.4-beta02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.4-beta02 final changes';git push
	git tag -a 4.5.4-beta02 -m 'Version 4.5.4-beta02 new features: fix nfr lon 180; free nc_string patch';git push --tags

	* Check for lon == -180 not lon == 180 when inferring longitude	grid-type lon_typ

2015-12-18  Charlie Zender  <zender@uci.edu>

	* Use ignore environment to protect comments from PDF documentation (which ignores @c comment sentinels!)

2015-12-17  Charlie Zender  <zender@uci.edu>

	* Free var.val.sngp[:] before freeing var.val.vp in nco_prn.c (patch from Pedro)

2015-12-16  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.4-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.4-beta01 final changes';git push
	git tag -a 4.5.4-beta01 -m 'Version 4.5.4-beta01 new features: fix nfr cap grd; ncremap';git push --tags

	* Move grid-span check from curvilinear code to work for all grids

	* Restrict inferred rectangular lat boundaries to [-90.0,90.0] when extrapolating from grid centers

	* Propagate 20151214 commit *.g changes into *.[ch]pp files

2015-12-14  Charlie Zender  <zender@uci.edu>

	* Fix typo in AIRS HDF dimension name

2015-12-14  Henry Butowsky  <henryb@hush.com>

	* Fix assign when var is in input but not read during assign action e.g., time=10;
	  ncap2 -O -v -s 'one_dmn_rec_var=0' in.nc foo.nc;ncks -v one_dmn_rec_var -C -m -H foo.nc

2015-12-08  Charlie Zender  <zender@uci.edu>

	* sld_nco.sh now infers destination grid from -d dst_fl

	* Ignore masked values diagnostic grid span for curvilinear grids

2015-12-07  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.4-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.4-alpha04 final changes';git push
	git tag -a 4.5.4-alpha04 -m 'Version 4.5.4-alpha04 new features: nfr POP CICE, nfr 1D, XML _Unsigned att, ncap2';git push --tags

	* Print XML "_Unsigned" attribute to denote unsigned attribute types as per Aleksandar Jelenak and Ed Armstrong

	* Patches to correctly infer grids for POP, CICE, CLM2 files

	* Allow corners not to be inferred for unstructured grids

	* Define M_LN10 and M_LN2 for Cygwin so PPC compiles. Update M_PI.

2015-12-06  Charlie Zender  <zender@uci.edu>

	* Account for missing values in curvilinear coordinate center and mask grids when diagnosing extrapolation issues and grid span

	* In nco_grd_nfr(), convert input mask values that are missing value to integer zero for output

2015-12-05  Charlie Zender  <zender@uci.edu>

	* Improve nco_grd_mk() and nco_grd_nfr() regression tests, and make them passable, finally

	* Regression tests for ncpdq now work for netCDF4 in.nc by checking answers independent of chunking text

2015-12-04  Henry Butowsky  <henryb@hush.com>

	* Modify where statement such that the assign statement in where body is NOT missing value aware

2015-12-04  Henry Butowsky  <henryb@hush.com>

	* Parser can now cast variables with (): temp($time,lev,$lat,$lon)=0.0; is equivalent to temp[$time,lev,$lat,$lon]=0.0

	* In the conflict between a function call and a cast the function call wins e.g.,
	tally=three_dmn_var_int.total($time,$lat,$lon) is valid	and total($time,$lat,$lon)=1.0d is invalid

2015-12-01  Charlie Zender  <zender@uci.edu>

	* Allow input masks of any type in nco_grd_nfr() (CICE has tmask as NC_FLOAT) and always convert output to NC_INT

	* Add tmask as usual suspect for mask in nco_grd_nfr()

	* NCO 4.5.4-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.4-alpha03 final changes';git push
	git tag -a 4.5.4-alpha03 -m 'Version 4.5.4-alpha03 new features: nfr crv dateline swaths';git push --tags

2015-11-29  Charlie Zender  <zender@uci.edu>

	* Restrict grid to real latitudes and to the 360-degree range detected from input cell-centers

	* nco_grd_nfr() sanity-check for extrapolated corners outside [-90.0,90.0], [-180.0,360.0]

2015-11-19  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.4-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.4-alpha02 final changes';git push
	git tag -a 4.5.4-alpha02 -m 'Version 4.5.4-alpha02 new features: crd xcs, skl bug, GSL2';git push --tags

	* Correct whitespace when excising dimension names from "coordinates" attribute	in nco_cnv_cf_cll_mth_add() after dimension reduction operations

2015-11-18  Charlie Zender  <zender@uci.edu>

	* Expose interpolation algorithm to sld_nco.sh with -a (bilinear|patch|neareststod|nearestdtos|conserve)

	* Only pass variable list to ncks in regridding phase of sld_nco.sh

	* Add nTimes and nXtrack to usual suspect list for lat/lon to support OMI L2 data

2015-11-17  Charlie Zender  <zender@uci.edu>

	* Merge Wenshan's patch to accept CICE dimensions TLAT,ULAT,TLONG,ULONG

	* Add latt_bounds, latu_bounds, lont_bounds, lonu_bounds to regrid exclusion list (for CICE) as per Wenshan

	* Initialize lat/lon/col_nm_out in nco_grd_mk() skeleton code (broken in 4.5.3?)

2015-11-12  Charlie Zender  <zender@uci.edu>

	* Remove "l" suffix from NC_LONG integer constants (which are deprecated) so buggy ncgen 4.4.0 can parse in.cdl

2015-11-09  Charlie Zender  <zender@uci.edu>

	* Thoroughly run autoconf to propagate GSL changes

2015-11-08  Charlie Zender  <zender@uci.edu>

	* Add hyai, hybi to in.cdl and prs_dlt example to manual

2015-11-08  Henry Butowsky  <henryb@hush.com>

	* Support GSL library version 2.x. Modify configure.ac, config.h.in. Add tokens:
          #define NCO_GSL_VERSION = 100 * NCO_GSL_MAJOR_VERSION + NCO_GSL_MINOR_VERSION

	* Downstream GSL mods in fmc_gsl_cls.cc, fmc_gsl_cls.hh

2015-10-30  Charlie Zender  <zender@uci.edu>

	* Add stdin infrastructure for passing regridding file list

	* NCO 4.5.4-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.4-alpha01 final changes';git push
	git tag -a 4.5.4-alpha01 -m 'Version 4.5.4-alpha01 tag:	100% Geometry';git push --tags

	* Check-for and if found, retain, record dimension property during regridding

2015-10-27  Charlie Zender  <zender@uci.edu>

	* Ensure dim[idx].val.vp is NULL-initialized (and thus not inadvertently free'd) when PRN_DMN_IDX_CRD_VAL is False
	Fixes GitHub issue #18 reported by Pat Nichols

2015-10-21  Charlie Zender  <zender@uci.edu>

	* Change ncap2 token names to, e.g., NCAP_FLOAT, NCAP_INT, etc to prevent namespace clashes with FLOAT, INT, ... in MSVC windef.h

2015-10-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.3 release procedure:
 	Changes since nco-4.5.2: nfr skl crv snwe frc_out bugs airs ncecat gag ncatted del
	cd ~/nco;git commit -a -m 'Version 4.5.3 release final changes';git push
	git tag -d 4.5.3;git push origin :refs/tags/4.5.3
	git tag -a 4.5.3 -m 'Version 4.5.3 tag: Mad Men';git push --tags

	* Hardwire 'make tst' in nco_c++ to build in.nc before running nco_c++/tst...

2015-10-18  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.3-beta01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.3-beta01 final changes';git push
	git tag -a 4.5.3-beta01 -m 'Version 4.5.3-beta01 tag: nfr skl crv snwe frc_out bugs airs ncecat gag ncatted del';git push --tags

	* NCO 4.5.3-alpha08 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.3-alpha08 final changes';git push
	git tag -a 4.5.3-alpha08 -m 'Version 4.5.3-alpha08 tag:	frc_out	nrm bugs';git push --tags

	* Index frc_out by grd_sz_out not var_sz_out to prevent accessing out-of-range values
	This bug affected non-conservative regridding of multi-level fields
	It was present in 4.5.2 though only for flg_frc_nrm, whose truth condition was quite narrow
	In 4.5.2 it might affect multi-level fields that have no missing values

	* Sometime post 4.5.2, I inadvertently changed the flg_frc_nrm block from
	only operating when !has_mss_val to only operating when	has_mss_val.
	Block had no missing_value checks so missing_values could be used
	arithmetically, and then converted to non-missing_values, and then
	renormalized in the regular normalization loop for missing_values.
	This only affected non-conservative interpolation maps, i.e., bilinear maps.
	Users reported NC_ERANGE errors. Once this and above problem
	(which was logically separated, but compounded issues) were fixed,
	valgrind was clean and all tests pass.

2015-10-16  Charlie Zender  <zender@uci.edu>

	* Automake stopped building *.nc files in data before compiling src, causes breakage on tests

	* Deprecate WIN32_LEAN_AND_MEAN, move MSC_VER headers to nco_fl_utl.h

	* Hard-code GeoTrack and GeoXTrack dimension names (DAP	translations of longer originals)

	* Provide defaults for HOSTNAME and DATA in sld_nco.sh

2015-10-14  Charlie Zender  <zender@uci.edu>

	* Implement --rgr tst=val as a generic key for testing, use it to test climo failure mode

2015-10-13  Charlie Zender  <zender@uci.edu>

	* Use lat_nm_out,lon_nm_out instead of "lat","lon" in cell_methods

2015-10-12  Charlie Zender  <zender@uci.edu>

	* Add infrastructure for non-MRV regridding

2015-10-11  Charlie Zender  <zender@uci.edu>

	* Fix lvl_nbr for 1D output grids (underestimated lvl_nbr by factor of last non-spatial dimension)

	* Allow non-MRV variables to be defined in output and sent to regridding

	* NCO 4.5.3-alpha07 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.3-alpha07 final changes';git push
	git tag -a 4.5.3-alpha07 -m 'Version 4.5.3-alpha07 tag:	lat/lon/col_nm_in/out, min/max_index(), ';git push --tags

	* Disambiguate lat/lon/col_nm into lat/lon/col_nm_in, lat/lon/col_nm_out (so regridded output need not use, e.g., GeoTrack as name)

2015-10-11  Henry Butowsky  <henryb@hush.com>

	* First cut methods min_index() & max_index() return indices in variable min or max attribute

2015-10-10  Charlie Zender  <zender@uci.edu>

	* Warn in all situations when horizontal spatial dimensions are	not last dimensions of input file

2015-10-09  Charlie Zender  <zender@uci.edu>

	* Hard-code AIRS L2 dimension names: Geo[X]Track:L2_Standard_atmospheric&surface_product

	* Hard-code AIRS L3 dimension names: [XY]Dim:location

	* Fix new logic bug in nco_grd_nfr()

2015-10-05  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.3-alpha06 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.3-alpha06 final changes';git push
	git tag -a 4.5.3-alpha06 -m 'Version 4.5.3-alpha06 tag: curvilinear regridding';git push --tags

	* Regridded WRF looks OK---range and location are good. Still need precise evaluation.

	* Wow, curvilinear grids now actually run, though flg_grd_out_crv only reaches half-way to the end of nco_rgr_map()

	* Introduce flg_grd_out_crv in nco_rgr_map()

	* Update maps to 20150901 versions in NCO regression tests, everything passes on dust

2015-10-04  Charlie Zender  <zender@uci.edu>

	* Saw "The Maritan". Psyched to do NASA work. nco_grd_nfr() now	correctly infers WRF.

2015-10-02  Charlie Zender  <zender@uci.edu>

	* Re-establish dust.ess.uci.edu as regression test server for scp

	* Add ncrename regression test simultaneously renaming multiple dimensions

	* NCO 4.5.3-alpha05 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.3-alpha05 final changes';git push
	git tag -a 4.5.3-alpha05 -m 'Version 4.5.3-alpha05 tag: ncatted, mk crv, lon_crv, sph_plg';git push --tags

	* Fix (relatively bad) bug introduced in 4.5.1 where blank attribute names dump core rather than expanding into all attribute names

	* Add ncatted regression test for deleting all attributes

2015-10-01  Charlie Zender  <zender@uci.edu>

	* nco_grd_mk() constructs correct degenerate SLD grids (verified area, corners)

	* Apply nco_sph_plg_area() to SLD

	* Functionalize spherical polygon area calculation into nco_sph_plg_area()

2015-09-30  Charlie Zender  <zender@uci.edu>

	* Corrected UL corner, but SCRIP file still appears to be invalid

2015-09-29  Charlie Zender  <zender@uci.edu>

	* Hand-correcting curvilinear algorithm...

	* ERWG and Tempest flag problems with inferred curvilinear SCRIP grids

	* nco_rgr_map() tests output grid for curvilinearity

	* Document regridding skl and nfr switches

2015-09-28  Charlie Zender  <zender@uci.edu>

	* Fix compiler diagnosis for gcc/g++

	* NCO 4.5.3-alpha04 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.3-alpha04 final changes';git push
	git tag -a 4.5.3-alpha04 -m 'Version 4.5.3-alpha04 tag: nfr SLD, skl, disable-doc, MPAS-O, snwe, wesn';git push --tags

	* nco_grd_nfr() appears to correctly infer SLD grids from grid centers, cannot verify until nco_rgr_map() reads SLD files

	* Add idx_dbg point-debugging feature for SLD

2015-09-27  Charlie Zender  <zender@uci.edu>

	* Temporarily change regression scp location from givre to glace

	* First stab at inferring curvilinear grid from input file

	* Change sense of normalization when frac_b contains non-unity elements (could interfere with flg_rnr?)

	* Automatically add frc_out (i.e., frac_b) to output when remapping is conservative and frac_b contains non-unity elements

	* Verified that MPAS-O regridding is not yet conservative--masking problem?

2015-09-25  Charlie Zender  <zender@uci.edu>

	* Regridding appears to work on MPAS-O fields once nCells is last dimension

	* Apply Tempest src_grid_dims workaround to faulty MPAS-O src_grid_dims (solves MPAS Ocean problem)

2015-09-22  Charlie Zender  <zender@uci.edu>

	* Implement configure --enable_doc option, attempt and fail to override this if makeinfo version < 4.8

2015-09-20  Charlie Zender  <zender@uci.edu>

	* Change auxiliary coordinate input from float to double

	* Add SNWE and WESN input options for bounding boxes

2015-09-20  Henry Butowsky  <henryb@hush.com>

	* Modify ncap_var_var_op() so that missing values in both operands are equal
	This is expensive when all the missing values in one operand must be replaced
	So for example if v1 and v2 have different mss_val then	diff1=diff2 where
        diff1=total((v1-v2)^2) and diff2=total((v2-v1)^2))

2015-09-17  Charlie Zender  <zender@uci.edu>

	* Add skeleton output grid capability with --rgr skl=fl_skl

	* Document regional features NSEW in nco.texi

	* round() integer-type extensive variables

2015-09-16  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.3-alpha03 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.3-alpha03 final changes';git push
	git tag -a 4.5.3-alpha03 -m 'Version 4.5.3-alpha03 tag: --xtn --extensive, ncks HINT, ncecat --gag fix';git push --tags

	* Add regression test (the first one!) for ncecat --gag

	* Reset rcd in ncecat after checking for group existence. Caused ncecat --gag to die. Problem introduced in 4.4.9 on 20150515, and reported by Huan Wu.

	* ncks exit with error when regridding specified without output file

2015-09-15  Charlie Zender  <zender@uci.edu>

	* Implement SLD stubs in nco_grd_nfr()

	* Check return codes in sld_nco.sh

	* Fix grid infer problem caused by segregating lat_typ from grd_typ

2015-09-14  Charlie Zender  <zender@uci.edu>

	* Diagnosed lat, lon, 2D grid-types now self-consistent for regional grids

	* Clean-up sld_nco.sh, better segregate nco_2d_grd_typ from nco_lat_grd_typ

2015-09-11  Charlie Zender  <zender@uci.edu>

	* Add sld_nco.sh script for Swath-Like Data processing to nco/data

2015-09-11  Henry Butowsky  <henryb@hush.com>

	* mods to ncap_var_lgcl() - original version convered all var type to NC_SHORT and then evaluated boolean
	problem with this is that when reducing precision say from float to short a large _FillValue say 9.9e20f
	would be converted to 0s. This leads propblems in if(). New version  evaluates for each type

2015-09-10  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.3-alpha02 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.3-alpha02 final changes';git push
	git tag -a 4.5.3-alpha02 -m 'Version 4.5.3-alpha02 tag: SLD regrid sort-of works for AIRS';git push --tags

	* nco_grd_nfr() produces reasonable numbers for AIRS test case!

	* Fix area output and improve metadata output in nco_grd_nfr()

2015-09-09  Charlie Zender  <zender@uci.edu>

	* nco_grd_nfr() produces useful gridfile from AIRS test-data

2015-09-08  Charlie Zender  <zender@uci.edu>

	* Add regression test for MSA averages in ncra problem reported by Christine Smit

	* Add infrastructure for NASA AXS/SLD project in nco_grd_nfr()

	* Change remote scp repository for regridding from givre to glace

2015-09-06  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.3-alpha01 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.3-alpha01 final changes';git push
	git tag -a 4.5.3-alpha01 -m 'Version 4.5.3-alpha01 tag: bump versions';git push --tags

	* NCO 4.5.2 release procedure:
 	Changes since nco-4.5.1: ncra --wgt nrm, --grid, --glb, Newton Gaussian
	cd ~/nco;git commit -a -m 'Version 4.5.2 release final changes';git push
	git tag -d 4.5.2;git push origin :refs/tags/4.5.2
	git tag -a 4.5.2 -m 'Version 4.5.2: Parenthood';git push --tags

	* Change grid descriptions to match final 4.5.2 nomenclature

2015-09-05  Charlie Zender  <zender@uci.edu>

	* Remove constraint that FV grids must have odd-number of latitudes

2015-09-03  Charlie Zender  <zender@uci.edu>

	* Add hackish sixth argument 'yyyymm' to -n option to generate filenames in YYYYMM format

2015-08-31  Charlie Zender  <zender@uci.edu>

	* Change from spherical law of cosines to haversine formula for	great circle arc length

2015-08-30  Charlie Zender  <zender@uci.edu>

	* Change output grid area name from "area" to "grid_area" for ESMF_RegridWeightGen

2015-08-27  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.2-beta2 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.2-beta2 final changes';git push
	git tag -a 4.5.2-beta2 -m 'Version 4.5.2-beta2 tag: New metadata names for climo, new typenames for grid generation, Gaussian fix, GitHub relocation';git push --tags

	* Add regional grid-generation capability (lon_wst,lon_est,lat_sth,lat_nrt)

2015-08-25  Charlie Zender  <zender@uci.edu>

	* Fix ncdiff typo in manual thanks to Dave Allured

	* Allow user input of lon_srt, lon_end, lat_srt, lat_end

	* Fix off-by-one error in nco_bsl_zro() that broke spectral grids when lat_nbr > 100

	* Change rgr metadata mapping_file -> map_file and source_file -> input_file

2015-08-24  Charlie Zender  <zender@uci.edu>

	* Transfer ownership to new NCO GitHub Organization http://github.com/nco/nco.git

	* NCO 4.5.2-beta1 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.2-beta1 final changes';git push
	git tag -a 4.5.2-beta1 -m 'Version 4.5.2-beta1 tag: Diagnose area on bilinearly-interpolated 1D grids with LHuillier's formula';git push --tags

	* Areas of random gridcell (ncol=0) from NCO diagnosis and raw native grid output are
        4.396773732788860e-05 and 4.396773732840130e-05, respectively.
	Relative agreement is 0.99999999998833917706 within tolerance of 1.0e-10.

	* NCO-diagnosed ne30 global area exactly equals original (native grid) ne30 global area = 12.5663706144 sr
	These global areas equal 4*pi within fractional tolerance of 1.0e-13.

	* Optimize area calculation to recycle information from previous triangles

2015-08-23  Charlie Zender  <zender@uci.edu>

	* Diagnose area on bilinearly-interpolated 1D grids with L'Huillier's formula

2015-08-21  Charlie Zender  <zender@uci.edu>

	* Start infrastructure to diagnose area on bilinearly-interpolated 1D grids

	* Fix interface latitudes for offset grids

	* Change polar offset grid latitude weights from continuum formula
	(cos(lat)) to exact discretized formula, same as polar centered grid

	* NULL-initialize lat_sin in nco_grd_mk() to prevent invalid free()

2015-08-18  Charlie Zender  <zender@uci.edu>

	* Install on hopper.nersc.gov

	* Replace #ifndef ${FOO} with #ifndef FOO in bld/Makefile so make data works on hopper

	* NCO 4.5.2-alpha9 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.2-alpha9 final changes';git push
	git tag -a 4.5.2-alpha9 -m 'Version 4.5.2-alpha9 tag: Work with 2D grids in either lon/lat or lat/lon (old Tempest) src/dst_grid_dims order';git push --tags

	* nco_rgr_map() determines Tempest 2D grid ordering with [src/dst]_grid_dims "name0" attribute

2015-08-03  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.2-alpha8 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.2-alpha8 final changes';git push
	git tag -a 4.5.2-alpha8 -m 'Version 4.5.2-alpha8 tag: fix missing value normalizaion with ncra -w wgt';git push --tags

	* Re-tag 4.5.2-alpha8

	* Normalize wgt_sum by tally

	* Add new normalization test case

	* Test against actual ne30 data found that wgt_avg_scl normalization not needed

2015-08-02  Charlie Zender  <zender@uci.edu>

	* Add var->wgt infrastructure for running sum of per-file valid weights in ncra

2015-07-25  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.2-alpha7 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.2-alpha7 final changes';git push
	git tag -a 4.5.2-alpha7 -m 'Version 4.5.2-alpha7 tag: Generate exact Gaussian grids';git push --tags

	* Gaussian grids now have lat_ctr=Legendre zeros, and lat_ntf that define spherical zones that reproduce Gaussian weights

	* Newton-Raphson iterate latitude interface location to agree with spherical zone area

	* Use Gaussian angles as latitude centers rather than bisecting interfaces

	* Show that SCRIP and NCAR T42 grid/map files accurate to 8 decimal places (NCO to 16)

	* Verify NCO Gaussian weights/angles accuracy to 16 decimal places

2015-07-24  Charlie Zender  <zender@uci.edu>

	* "mask" _is_ the mask for each point, not "whether to mask" each point. Change default from 0 to 1.

	* NCO 4.5.2-alpha6 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.2-alpha6 final changes';git push
	git tag -a 4.5.2-alpha6 -m 'Version 4.5.2-alpha6 tag: create 2D rectangular SCRIP grids';git push --tags

	* Incorporate self-diagnostics (lat_wgt) in nco_grd_mk()

	* Verify ACME FV-scalar SCRIP grids are missing meridional strip next to Greenwich

	* Eliminate GSC gridtype (obscure name for FV-scalar), treat FV	and ngl_eqi_pol identically, leave names distinct

 	* nco_grd_mk() has fancy metadata annotations and generates correct FV-scalar grids

2015-07-23  Charlie Zender  <zender@uci.edu>

	* Hook-up nco_grd_mk() to rgr front-end

2015-07-22  Charlie Zender  <zender@uci.edu>

	* Implement nco_grd_mk() to generate SCRIP grid files

	* NCO 4.5.2-alpha5 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.2-alpha5 final changes';git push
	git tag -a 4.5.2-alpha5 -m 'Version 4.5.2-alpha5 tag: ncra -N, diagnose area if possible when area_out == 0.0 (bilinear interpolation)';git push --tags

	* Diagnose (possibly approximate) area_out when area_out == 0.0	due to bilinear remapping

	* Decriminalize mapfiles with area_out == 0.0, e.g., ESMF bilinear remapping (broken since 4.5.2-alpha1)

	* Add bilinear remapping to regression test

2015-07-21  Charlie Zender  <zender@uci.edu>

	* Change meaning of NORMALIZE_BY_WEIGHT to NORMALIZE_WEIGHTS

	* NCO 4.5.2-alpha4 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.2-alpha4 final changes';git push
	git tag -a 4.5.2-alpha4 -m 'Version 4.5.2-alpha4 tag: ncra -N';git push --tags

	* Document -N in man pages, nco.texi

2015-07-20  Charlie Zender  <zender@uci.edu>

	* Add -N = --no-normalize-by-weight = --no_nrm_by_wgt to ncra

2015-07-18  Charlie Zender  <zender@uci.edu>

	* Migrate nco_rgr_esmf2() to user-specified destination grid

	* Add structures for user-specified destination grid

2015-07-16  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.2-alpha3 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.2-alpha3 final changes';git push
	git tag -a 4.5.2-alpha3 -m 'Version 4.5.2-alpha3 tag: --glb_att_add';git push --tags

	* Implement glb_att_add (gaa) in all remaining operators

	* Document --glb_att_add

2015-07-15  Charlie Zender  <zender@uci.edu>

	* Change --glb_mtd_spp to --no_glb_mtd so --glb can refer to --gaa

	* Implement glb_att_add (gaa) in ncra

	* Eliminate small leak in kvm loop in nco_glb_att_add(), nco_rgr_ini()

2015-07-14  Charlie Zender  <zender@uci.edu>

	* Implement glb_att_add (gaa) in ncks

2015-07-13  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.2-alpha2 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.2-alpha2 final changes';git push
	git tag -a 4.5.2-alpha2 -m 'Version 4.5.2-alpha2 tag: Displaced-pole support, fracarea/destarea';git push --tags

	* Completed (though did not verify) first regridding to/from POP displaced-pole grid with SCRIP mapfile

	* Valgrind emits "uninitialized value" warnings at first cosine cos() function in nco_lat_wgt_gss()---why?

	* Implement true "destarea" normalization, support more aspects of dst_frac and dst_mask

	* Ensure double normalization (with --rnr and "none" = imask) does not occur

	* Convert input coordinates from radians to degrees if necessary, handle POP grids

	* Allow SCRIP "fracarea" normalization which is, in my terminology, no normalization just weights
	"fracarea" is what NCO actually did before, although technically all ESMF fields tested were "destarea"
	But their dst_frac = frac_b was uniformly 1.0, so no difference	from "destarea"

2015-07-12  Charlie Zender  <zender@uci.edu>

	* Add sanity checks to ensure mapfile grid matches input data file grid

2015-07-11  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.2-alpha1 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.2-alpha1 final changes';git push
	git tag -a 4.5.2-alpha1 -m 'Version 4.5.2-alpha1 tag: bump to alpha1';git push --tags

	* NCO 4.5.1 release procedure:
 	Changes since nco-4.5.0: ncra --wgt=wgt_nm, ncap2 mibs/mabs/mebs, Tempest
	cd ~/nco;git commit -a -m 'Version 4.5.1 release final changes';git push
	git tag -d 4.5.1;git push origin :refs/tags/4.5.1
	git tag -a 4.5.1 -m 'Version 4.5.1: Maxine';git push --tags

	* Cause nco_var_get_wgt_trv() to die when weight/mask not found, re-jigger weight testing to be more thorough

	* Found bug where ncwa proceeded without complaining when weights were not found

	* Regridding works on Tempest RRM conus grid

	* Manually normalize polar offset grid latitude weights to sum to 2.0 for global extent, less for regional

	* Create area_out from analytic function when area_b has zeros in mapfile

2015-07-10  Charlie Zender  <zender@uci.edu>

	* Implement regional destination grid capability

	* Turn-off ncra and ncwa threading for dbg_lvl >= 3 for 4.5.1 release

	* Revert back to old _FillValue trick when netCDF library <= 4.4.0 because Unidata NCF-187 fix does not help NCO

2015-07-07  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.1-beta2 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.1-beta2 final changes'
	git tag -a 4.5.1-beta2 -m 'Version 4.5.1-beta2 tag: ncra --wgt=wgt_nm works';git push --tags

	* Fix weighting with ncra --wgt=wgt_nm, allow for full pathnames in wgt_nm

2015-07-06  Charlie Zender  <zender@uci.edu>

	* Round-up to one rather than round-down to zero in cnk_map=lfp

	* Fix history_of_appended_files attribute

2015-07-01  Charlie Zender  <zender@uci.edu>

	* Add mibs/mabs/mebs to ncap2

	* NCO 4.5.1-beta1 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.1-beta1 final changes'
	git tag -a 4.5.1-beta1 -m 'Version 4.5.1-beta1 tag: ncap2 fix for min/max on cordinates';git push --tags

	* Verify ncap2 min/max bug reported by Maxim Petrenko. Add regression test and fix bug.

	* NCO 4.5.1-alpha8 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.1-alpha8 final changes'
	git tag -a 4.5.1-alpha8 -m 'Version 4.5.1-alpha8 tag: Regridder	workaround for Tempest 1D grids';git push --tags

	* Diagnose problem (incorrect Tempest dst/src_grid_dims variable) and implement workaround

	* Change ncol to col in code for symmetry with lat/lon

2015-06-29  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.1-alpha7 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.1-alpha7 final changes'
	git tag -a 4.5.1-alpha7 -m 'Version 4.5.1-alpha7 tag: ncatted rx att_nm, no duplicate cell_methods ';git push --tags

	* Added attribute wildcarding to ncatted

2015-06-28  Charlie Zender  <zender@uci.edu>

	* Introduce routine nco_aed_prc_wrp() to expand attribute regular expressions

2015-06-26  Charlie Zender  <zender@uci.edu>

	* Prevent not only duplicates, but sub-string duplicates in nco_cnv_cll_mth_add()

2015-06-25  Charlie Zender  <zender@uci.edu>

	* Warn when non-standard "cell_method" attribute is detected

	* Prevent nco_cnv_cf_cll_mth_add() from repeating existing cell_methods attribute

	* Move aed_prc functions to nco_att_utl.c to prepare for RX feature

2015-06-22  Charlie Zender  <zender@uci.edu>

	* Bump thr_nbr_max_fsh to 16 for ncks, to 8 (with -D >= 3) for ncwa

	* Version = 'git describe --abbrev=7 --dirty --always --tags', e.g., 4.5.1-alpha6-1-gaa4fe2b-dirty

2015-06-21  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.1-alpha6 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.1-alpha6 final changes'
	git tag -a 4.5.1-alpha6 -m 'Version 4.5.1-alpha6 tag: Works on Travis and with OpenMP when compiled with g++ 4.6.3-5.1.1';git push --tags

	* Code now passes Travis build when compiled with g++

	* Remove assert() from within OpenMP parallel regions for g++ 4.6.3 on Travis

	* Use older OpenMP shared() statement for g++ < 4.8.0 (for Travis)

	* Diagnose and discriminate g++ from gcc compiler

	* Code compiles warning-free with clang and g++ (without ESMF)

	* Isolated all ESMF library calls in nco_sld.c

2015-06-19  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.1-alpha5 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.1-alpha5 final changes'
	git tag -a 4.5.1-alpha5 -m 'Version 4.5.1-alpha5 tag: Revert some broken doc build changes, patch handling of library return codes by regression tests';git push --tags

	* Remove autobld/mdate-sh, a testimonial to wasted time

	* Add [int,long,NULL]_CEWI to quiet maybe-uninitialize warnings with GCC 4.8.2

	* Fix treatment of exiting with library as return code for regression tests

	* NCO 4.5.1-alpha4 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.1-alpha4 final changes'
	git tag -a 4.5.1-alpha4 -m 'Version 4.5.1-alpha4 tag: More regridding regression tests. Fix possibly uninitialized destination pointer that may have caused writing zeros to output files with clang on MacOS X';git push --tags

2015-06-18  Charlie Zender  <zender@uci.edu>

	* Fill-in var_nm for tedious mss_val warning

	* Add 2D->1D and 2D->2D regression tests

	* Ensure lat/lon_psn_dst are not used uninitialized

	* One-size fits all pre-allocation for dimension IDs and cnt/srt

	* firstprivate() to preserve NULL on pointers that could inadvertently be free()'d

	* clang on linux with debugging produced troves of useful warning messages
	clang messages are more thorough than gcc/icc for finding sometimes uninitialized memory
	clang is about as unforgiving as AIX xlc at strictly enforcing initialization
	clang would be my default development compiler if it supported OpenMP
	That being said, had to suppress annoying clang sometimes uninitialized memory warnings :)

2015-06-17  Charlie Zender  <zender@uci.edu>

	* Add topology and modulo metadata to longitude

	* NCO 4.5.1-alpha3 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.1-alpha3 final changes'
	git tag -a 4.5.1-alpha3 -m 'Version 4.5.1-alpha3 tag: Add regridding regression tests. Fix strcat() buffer overrun that may have caused writing zeros to output files.';git push --tags

	* Introduce CEWI_unused() to prevent unused warnings on variables used only in assert() macros

2015-06-16  Charlie Zender  <zender@uci.edu>

	* Add regridding regression tests based on AODVIS, FSNT, and area as ncap2 regression test only for USER=zender

	* Clean-up ncap2.in test in preparation for adding regridding regression tests

	* Travis CI builds now pass on gcc and clang. Yay! Only regressions are due to old netCDF library.

	* Work on Travis CI YAML .travis.yml file syntax with http://lint.travis-ci.org

2015-06-15  Charlie Zender  <zender@uci.edu>

	* Variables used only in assert() statements flag "unused" warnings with GCC < 4.9.x. Change logic to prevent some of these warnings.

	* Fix off-by-one memory overwrite in nco_cnv_cf_cll_mth_add() (symptom was heap corruption bug in ncwa)

	* NCO 4.5.1-alpha2 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.1-alpha2 final changes'
	git tag -a 4.5.1-alpha2 -m 'Version 4.5.1-alpha2 tag: Regrid from Tempest-generated map-files';git push --tags

	* Patch Makefiles so ncap2.cc is passed ENABLE_NETCDF4 flag (solves Heather Aldridge's report)

2015-06-14  Charlie Zender  <zender@uci.edu>

	* Verified NCO is regression-free with GCC 5.1.1

	* NCO 4.5.1-alpha1 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.1-alpha1 final changes'
	git tag -a 4.5.1-alpha1 -m 'Version 4.5.1-alpha1 tag: Regrid from Tempest-generated map-files';git push --tags

	* Regridder works on bds output files with Tempest-generated map-files

	* Omit extensive-seeming 1D variables on 2D input grids (e.g., grd_rds_rth, grd_mrd_lng, grd_znl_lng, lat_sz, lon_sz)

2015-06-13  Charlie Zender  <zender@uci.edu>

	* Reverse ordinal number of lat and lon dimensions in src_grid_rank, dst_grid_rank for Tempest

	* Modify routines to accept TempestRemap-generated maps

2015-06-11  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.0 release procedure:
 	Changes since nco-4.4.9: --map, --rnr=wgt, -A provenance, [date/time]_written, ncdismember
	cd ~/nco;git commit -a -m 'Version 4.5.0 release final changes'
	git tag -d 4.5.0;git push origin :refs/tags/4.5.0
	git tag -a 4.5.0 -m 'Version 4.5.0: Even Keel';git push --tags

	* Always cast latitudes to float before diagnosing grid type to	avoid failures with strangely-off grids

2015-06-10  Charlie Zender  <zender@uci.edu>

	* Make renormalize algorithm consider number of valid inputs when wgt_thr = 0.0, weight of valid inputs when wgt_thr > 0.0.

	* Reduce thr_nbr_max_fsh from 8 to 1 for ncwa stability with 4.5.0 release

	* Verify OpenMP with ncwa is flaky

	* Add nco_open_mem() prototype introduced in netCDF 4.4.0-rc1

	* NCO 4.5.0-beta9 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.0-beta9 final changes'
	git tag -a 4.5.0-beta9 -m 'Version 4.5.0-beta9 tag: --rnr, kvm clean-up, date_written/time_written handling';git push --tags

	* Complete --rnr/--rgr_rnr/--renormalization implementation

2015-06-09  Charlie Zender  <zender@uci.edu>

	* Implement infrastructure to renormalize destinations affected by missing values

	* Remove extraneous last character from history_of_appended_files

	* Do not attempt date_written/time_written update when var_sz != 8

	* Fix buffer overwrite in nco_xcp_prc(), and double-free caused by nco_rgr()

	* Allow allow all grid dimension/variable names to be command-line specified

	* Re-do rgr_nfo creation and destruction routines to facilitate	kvm arguments

	* Fix kvm infrastructure

2015-06-08  Charlie Zender  <zender@uci.edu>

	* Update time-stamps of date_written, time_written during all output

	* Document regridding

	* Change time-stamp update from localtime() to gmtime()

	* Broke kvm infrastructure by simplifying nco_sng2kvm() prototype

2015-06-06  Charlie Zender  <zender@uci.edu>

	* Update time-stamps of date_written, time_written during regridding

2015-06-04  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.0-beta8 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.0-beta8 final changes'
	git tag -a 4.5.0-beta8 -m 'Version 4.5.0-beta8 tag: history_of_appended_files';git push --tags

	* Add history_of_appended_files global attribute to improve provenance

2015-06-03  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.0-beta7 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.0-beta7 final changes'
	git tag -a 4.5.0-beta7 -m 'Version 4.5.0-beta7 tag: Supports 1D->1D, 1D->2D, 2D->1D, and 2D->2D regridding for any unstructured 1D grid and any rectangular 2D grid';git push --tags

	* Write coordinates attribute after all others, fix lat metadata

	* Do second sweep for associated CF variables when creating extraction list

	* Correct bounds names to vertices for 1D output grids

	* Verified ne30->ne120 works and perfectly conserves FSNT

	* Verified fv129x256->fv257x512 works and perfectly conserves FSNT

	* Complete grid description and metadata decoration for 2D->2D mappings

	* Annotate lat and lon variables with "axis = X/Y" attributes

	* Annotate variables with "coordinates" attribute for auxiliary coordinate variables lat and lon

	* Complete grid description for 2D->1D remappings, use nv and vertices instead of nbnd and bounds

2015-06-02  Charlie Zender  <zender@uci.edu>

	* Dogfood?

	* NCO 4.5.0-beta6 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.0-beta6 final changes'
	git tag -a 4.5.0-beta6 -m 'Version 4.5.0-beta6 tag: Gaussian and equiangular offset grids';git push --tags

	* Verified ne30->T42 works and conserves perfectly

	* Gaussian grid diagnosis works

	* Fix numerical bugs in nco_lat_wgt_gss(): fabs() != abs()

2015-06-01  Charlie Zender  <zender@uci.edu>

	* Reverse latitudes and weight generated for Gaussian grids from N->S to S->N

2015-05-31  Charlie Zender  <zender@uci.edu>

	* Add Gaussian grid detection and required functions nco_lat_wgt_gss() and nco_bsl_zero()

	* Improve ncdismember documentation

	* Fuzzy test for latitude weight normalization

	* Move bitmask() and around() routines from nco_var_rth.[ch] to nco_ppc.[ch]

	* Infrastructure for detecting correct type of latitude grid

2015-05-30  Charlie Zender  <zender@uci.edu>

	* Clarify Conventions warnings

	* Activate OpenMP on ncwa, thr_nbr_max=8

	* Diagnose input and output grid sizes and conversion type for dogfood logic

	* Activate OpenMP in autoconf/configure NCO builds (clang does not yet support OpenMP)

	* Verified that regridding works on MACOSX---ne30 ~5x faster on aerosol than roulee

2015-05-29  Charlie Zender  <zender@uci.edu>

	* Document threading

	* NCO 4.5.0-beta5 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.0-beta5 final changes'
	git tag -a 4.5.0-beta5 -m 'Version 4.5.0-beta5 tag: OpenMP and area cell_methods';git push --tags

	* Verified threading works with netCDF4 output with netCDF 4.3.3.1 (rhea has 4.1.3)

	* Use firstprivate(tally) and now multiple threads work (exactly) on roulee

	* Added regrid report to summarize variables regridded, copied,	omitted, created

	* Demonstrated that four threads can produce exactly correct answers

	* Allow up to eight threads for ncks only

	* All regressions still pass but only one-thread used

	* Clean-up threading in ncks.c and nco_rgr()

	* Carry per-thread file IDs in trv_tbl

2015-05-28  Charlie Zender  <zender@uci.edu>

	* Surprisingly, all regressions still pass. Probably because thr_nbr is prescribed to be one :)

	* Update ncra OpenMP threading infrastructure to compile

	* Add OpenMP threading infrastructure to ncks and nco_rgr() in specific

	* Add cell_methods = sum attribute to area variable during regridding

	* NCO 4.5.0-beta4 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.0-beta4: final changes'
	git tag -a 4.5.0-beta4 -m 'Version 4.5.0-beta4: Deprecate missing value warning. Fix cnk_map_xst handling.';git push --tags

	* Fix typo bug in nco_cnk_ini() reported by ocehugo. Caused existing chunk maps to be ignored.

	* NCO 4.5.0-beta3 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.0-beta3: final changes'
	git tag -a 4.5.0-beta3 -m 'Version 4.5.0-beta3: Missing values work. Fix gw bug in beta2.';git push --tags

	* Fix gw problem introduced in beta2

2015-05-27  Charlie Zender  <zender@uci.edu>

	* Handle missing values in regridding. Be liberal: Any valid input points make valid output

	* NCO 4.5.0-beta2 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.0-beta2: final changes'
	git tag -a 4.5.0-beta2 -m 'Version 4.5.0-beta2: Correct output grid bounds, precision';git push --tags

	* Fix output grid bounds (internal bounds were stored with weird memory layout that did not write to disk as expected)

	* Change dgr2rdn from float (oops!) to double to prevent precision loss

	* NCO 4.5.0-beta1 release procedure:
	cd ~/nco;git commit -a -m 'Version 4.5.0-beta1: final changes'
	git tag -a 4.5.0-beta1 -m 'Version 4.5.0-beta1: Correct area output variable';git push --tags

	* Read and output area variable directly from remap file rather than regridding it

2015-05-25  Charlie Zender  <zender@uci.edu>

	* NCO 4.5.0-alpha1 release procedure:
 	Changes since nco-4.4.9: --map
	cd ~/nco;git commit -a -m 'Version 4.5.0-alpha1: final changes'
	git tag -d 4.5.0-alpha1;git push origin :refs/tags/4.5.0-alpha1
	git tag -a 4.5.0-alpha1 -m 'Version 4.5.0-alpha1: Regridding with external mapfile';git push --tags

	* Reorganize global attribute writing, catenate history attribute

	* Verified NCO gives identical results as Taylor/Truesdale NCL script for 2-D & 3-D variables

	* Handle lefter aka leftmost aka vertical and time dimensions in regridding

	* Optimize row/column access by pre-subtracting one to account for Fortran index offset relative to C

	* Clean-up debugging output

	* Skip date_written and time_written variables when regridding

	* Document (sort of) --map, --rgr_map

	* Re-plumb I/O to regrid straight to fl_out (ignore --rgr_out)

	* Add NCO version to global metadata of regridding

	* Exempt /lat and /lon from regridding

	* Regridding appears to work for 2D variables! Yay!

	* Weight variables and copy values to regridded file

2015-05-24  Charlie Zender  <zender@uci.edu>

	* Define regridded-variables in and copy their metadata to regridded file

	* Copy global and fixed-variable metadata to regridded file

	* Define fixed-variables in and copy their data to regridded file

	* Set new flg_rgr for input variables that contain "ncol" dimension

	* Complete grid metadata for output file

	* Add equi-angle latitude weights (also named "gw") to nco_rgr_map()

	* Add nco_vrs_att_cat() to all operators (was only in ncks, ncbo)

2015-05-22  Charlie Zender  <zender@uci.edu>

	* Output destination grid and coordinate metadata looks good in nco_rgr_map()

	* Bump to 4.5.0-alpha1. Undo crippling of ncra --wgt wgt_nm for further debugging

	* NCO 4.4.9 release procedure:
 	Changes since nco-4.4.8: git, -x warn, crd att, cnk nco lfp, shuffle on, MM3->MM4 off, ncecat fix, climatology, ncra wgt
	cd ~/nco;git commit -a -m "Version 4.4.9 release: "
	git tag -d nco-4.4.9;git push origin :refs/tags/nco-4.4.9
	git tag -d 4.4.9;git push origin :refs/tags/4.4.9
	git tag -a 4.4.9 -m 'Version 4.4.9: Final Release';git push --tags

	* Cripple ncra. Re-tag. Re-release with new tag format so GitHub tarball naming conventions work.

2015-05-21  Charlie Zender  <zender@uci.edu>

	* NCO 4.4.9 release procedure:
 	Changes since nco-4.4.8: git, -x warn, crd att, cnk nco lfp, shuffle on, MM3->MM4 off, ncecat fix, climatology, ncra wgt
	cd ~/nco;git commit -a -m "Version nco-4.4.9 release: "
	git tag -d nco-4.4.9;git push origin :refs/tags/nco-4.4.9
	git tag -a nco-4.4.9 -m 'Version 4.4.9: ';git push --tags

	* Put nco_sng2kvm() in nco_sng_utl.c where it belongs. Fixes configure link problems.

2015-05-20  Charlie Zender  <zender@uci.edu>

	* Allow wgt_nm to not be in extraction list

	* Implement main logic for --wgt wgt_nm per-record weighting

	* Per-file weighting with --wgt wgt_arr works fine

2015-05-19  Charlie Zender  <zender@uci.edu>

	* Add some infrastructure to accept weight names, e.g., ncra --wgt=time_dlt

	* Correct normalization in ncra --wgt and combine into multiplication by one pre-normalized factor

	* Treat climatology variables as pseudo-coordinates like bounds variables

	* Re-base climatology variables in ncra/ncrcat

2015-05-18  Charlie Zender  <zender@uci.edu>

	* Apply per-file weights/normalization to averaged non-coordinate variables

	* ncra reads optional per-file weights with new command line -w, --wgt switch

2015-05-17  Charlie Zender  <zender@uci.edu>

	* Obtain destination grid interfaces/boundaries and remap matrix from mapping file

2015-05-15  Charlie Zender  <zender@uci.edu>

	* All regression tests pass, 4.4.9 release once configure-builds work on yellowstone and rhea

	* Recent rhea upgrade uses szip in icc netcdf, so (re-)add SZ and SZ_LIB flags to Makefile, Makefile.old

	* Rhea icc 13.1.3 (gcc version 4.4.7 compatibility) requires -D_BSD_SOURCE on files that #include nameser.h

	* Fix ncecat --gag mode use of uninitialized file pointers

2015-05-14  Charlie Zender  <zender@uci.edu>

	* Shuffle never, to my knowledge, increases filesize, so shuffle by default when manually deflating

	* LFP chunking uses "reasonable defaults" when var_sz < cnk_sz_ttl

	* Turn-off MM3 workaround for MM3->MM4 copying to speed-up compression induced chunking

	* Choose output chunking map/policy = rew/all rather than xst/xst for netCDF3 input

2015-05-13  Charlie Zender  <zender@uci.edu>

	* Split Tempest library calls into separate function, nco_rgr_tps()

2015-05-12  Charlie Zender  <zender@uci.edu>

	* Improve error message when nco_lmt.c encounters hyperslab requests on 2-D "coordinates"

2015-05-11  Charlie Zender  <zender@uci.edu>

	* Crude version of nco_rgr_map()

2015-05-07  Charlie Zender  <zender@uci.edu>

	* Describe SCRIP remapping in nco_rgr.c

2015-05-06  Charlie Zender  <zender@uci.edu>

	* Segregate parts of nco_sld.[ch] into nco_ppc.[ch] and nco_rgr.[ch]

2015-05-05  Charlie Zender  <zender@uci.edu>

	* Situate nco_rgr_ctl() between main() and all regridding routines

2015-05-04  Charlie Zender  <zender@uci.edu>

	* Tidy string functions by DYW and PVN

	* Makefile generates LINUX_C?? compiler defaults for MACOSX

2015-04-30  Charlie Zender  <zender@uci.edu>

	* Introduce special variable handling with --rgr_var

	* Wait until after ESMC_Finalize() to free dynamic memory provided to ESMF

2015-04-27  Charlie Zender  <zender@uci.edu>

	* Improve nco_rgr_esmf() genericity

2015-04-26  Charlie Zender  <zender@uci.edu>

	* Refine MACOSX linking for libesmf.a

	* Fix bug in call to ESMC_GridCreateFromFile(). Simple ESMF regridding works.

2015-04-23  Charlie Zender  <zender@uci.edu>

	* Annotate ESMF variables and calls

	* Add regression test for unchunking variables with _Shuffle set

2015-04-21  Charlie Zender  <zender@uci.edu>

	* Utilize extensible functions to format/access Tempest regridding commands

	* Enumerate Tempest (tps) rename commands

2015-04-20  Charlie Zender  <zender@uci.edu>

	* Add dummy call to Tempest remap GenerateRLLMesh

2015-04-19  Charlie Zender  <zender@uci.edu>

 	* Eliminate borken nco_sng2array() (which failed on single-element lists) in favor of nco_lst_prs_2D()

	* Merge rgr (formerly dyw) branch back into master

2015-04-17  Charlie Zender  <zender@uci.edu>

	* Use generic NC_SHUFFLE and NC_NOSHUFFLE tokens

2015-04-15  Charlie Zender  <zender@uci.edu>

	* Set shuffle to false before unchunking variables. Fixes bug #74 reported by Dave Allured.

2015-04-13  Charlie Zender  <zender@uci.edu>

	* Support GCC under MacPorts on MacOSX using
	export LINUX_CC='gcc-mp-4.9'
	export LINUX_CXX='g++-mp-4.9 -std=c++11'
	So far compiling works but library archiving and linking does not so may need
	export LINUX_AR='gcc-ar-mp-4.9'

	* Fix MacOSX Yosemite LLVM version 6.0 (clang-600.0.57) (based on LLVM 3.5svn) issues:
	'register' storage class specifier is deprecated [-Werror,-Wdeprecated-register]

2015-04-08  Charlie Zender  <zender@uci.edu>

	* Changed name of dyw branch to rgr (for "regrid")

	* Add to configure: -lesmf -lrt -lgfortran -ldl -lnetcdff -lnetcdf_c++
	Most are found but -lesmf does not link on MACOSX due to clang/gfortran cross-compilation

	* Merge changes from master into dyw branch:
	git checkout dyw;git merge master

2015-04-06  Charlie Zender  <zender@uci.edu>

	* Quiet printing extended filetype for dbg_lvl=2

	* Revamp regridding command-line interface, initialization, and deallocation

2015-04-06  Charlie Zender  <zender@uci.edu>

	* Makefile/ESMF appears to pass regression tests

	* Fix memory issues with rgr_arg

2015-04-01  Charlie Zender  <zender@uci.edu>

	* Re-built MACOSX with XTools 6.2 clang 6.0 LLVM 3.5 for OS 10.10 Yosemite: No problems

	* Add regression test for changing _FillValue in netCDF4 file

	* Turn-off flg_netCDF4_rename_trick in nco_att_utl.c if NC_LIB_VERSION >= 434

2015-03-25  Charlie Zender  <zender@uci.edu>

	* Add cf2.cdl to test different approaches to CF group extension questions

2015-03-24  Charlie Zender  <zender@uci.edu>

	* Various typo corrections to documentation

2015-03-19  Charlie Zender  <zender@uci.edu>

	* Add --enable_esmf option to configure

	* Add EMSF option to Makefile

	* Move ESMF functions to nco_sld.[ch]

2015-03-18  Charlie Zender  <zender@uci.edu>

	* Fix bugs in dyw branch

2015-03-10  Charlie Zender  <zender@uci.edu>

	* Tag nco-4.4.9-alpha to test new release procedure
	cd ~/nco;git commit -a -m "Version nco-4.4.9-alpha"
	git tag -d nco-4.4.9-alpha;git push origin :refs/tags/nco-4.4.9-alpha
	git tag -a nco-4.4.9-alpha -m 'Version 4.4.9-alpha: git, -x warn, crd att, cnk nco';git push --tags

	* Build on rhea.ccs.ornl.edu

	* Finish cnk_plc=nco implementation so plc/map=nco/nco means all/rew

	* Document "coordinates" attribute modification

2015-03-09  Dingying Wei  <dywei@glace>

	* Test git change as dyw

2015-03-09  Charlie Zender  <zender@uci.edu>

	* Quiet printing of extended filetype for dbg_lvl=2

2015-03-09  Charlie Zender  <zender@uci.edu>

	* Created remote upstream branches dyw, hmb, and pvn

	* Change on master by csz

	* Refine .gitignore's for configure-make

	* Fix regression tests to account for new "coordinates" attributes

	* Eliminate dimensions from "coordinates" attribute after collapsing them

2015-03-08  Charlie Zender  <zender@uci.edu>

	* Tighten new -x warning WARNING

2015-03-07  Charlie Zender  <zender@uci.edu>

	* Warn when coordinate variables intended to be excluded by -x and -C was not invoked

2015-02-26  Charlie Zender  <zender@uci.edu>

	* Add .gitignore's to clean up git status output

2015-02-25  Charlie Zender  <zender@uci.edu>

	* Create csz branch for local work on 4.4.9

2015-02-24  Charlie Zender  <zender@uci.edu>

	* Replace SF source addresses with GitHub source addresses

	* Document Git transition procedure

	* Remove CVS keyword expansions by copying un-expanded originals over from CVS tree

	* Create README.md for Github

	* Clean-up ChangeLog

	* Worked on CVS->SVN-->Git migration all week. Preserving tags is hard.

	* Final procedure was something like:
	# Generate dumpfile
	cvs2svn -v --encoding=ascii --encoding=latin_1 --dumpfile=/home/zender/nco_20150216_dumpfile -s /home/zender/svn > ~/cvs2svn.txt

	rsync -aiv nco_20150216_dumpfile zender,nco@web.sf.net:
	ssh -t zender,nco@shell.sourceforge.net create
	mv /home/project-web/nco/nco_20150216_dumpfile .

	# Initialize SF SVN repository
	svnadmin create /home/project-web/nco/svn
	# Do hard work
	svnadmin load /home/project-web/nco/svn < /home/project-web/nco/nco_20150216_dumpfile
	# Check-out (failed)
	svn checkout --username=zender svn+ssh://zender@svn.code.sf.net/p/nco/svn/ ~/nco-svn

	# Initialize local SVN repository
	cd;mkdir svn;svnadmin create svn
	# Do hard work
	svnadmin load svn < nco_20150216_dumpfile
	# Check-out
	svn checkout file:///home/zender/svn/trunk/nco ~/nco_svn

	# Create local Git repository
	/bin/rm -r -f ~/nco
	mkdir -p ~/nco
	cd ~/nco

	# Convert SVN to Git with git svn (actual command used, ~18.6 MiB compressed to clone)
	# http://git-scm.com/book/en/v2/Git-and-Other-Systems-Migrating-to-Git
	git svn clone file:///home/zender/svn/trunk/nco --authors-file=/home/zender/nco_authors.txt --ignore-paths='^CVSROOT' --no-metadata

	# Move tags to be proper Git tags, move other references to be local branches
	/bin/cp -Rf .git/refs/remotes/origin/tags/* .git/refs/tags/
	/bin/rm -Rf .git/refs/remotes/origin/tags
	/bin/cp -Rf .git/refs/remotes/* .git/refs/heads/
	/bin/rm -Rf .git/refs/remotes

	# Convert SVN to Git with svn2git (ultimately not used)
	# https://github.com/nirvdrum/svn2git
	sudo aptitude install git-core git-svn ruby rubygems
	sudo gem install svn2git
	# Loses all tags, produces small (~19 MiB compressed to clone) repository
	svn2git file:///home/zender/svn/trunk/nco --trunk / --authors ~/nco_authors.txt --verbose
	# Maintains tags but takes forever (ETA ~6 days)
	svn2git file:///home/zender/svn --authors ~/nco_authors.txt --exclude '^CVSROOT.*' --trunk trunk/nco --nobranches --verbose

	# Push new local Git repository to GitHub
	git remote add origin https://github.com/czender/nco.git
	git push origin --all
	git push origin --tags
	git push --set-upstream origin master

	# Clone from GitHub
	git clone https://github.com/czender/nco.git ~/nco

2015-02-16  Charlie Zender  <zender@uci.edu>

	* NCO 4.4.8 release procedure:
 	Changes since nco-4_4_7: -A warn, PPC, cnk nco=rew+lfp, mabs/mebs/mibs()
	cd ~/nco;cvs tag -d nco-4_4_8;cvs tag -d nco-4_4_8-1
	cd ~/nco;cvs commit -m "Preparing nco-4.4.8 release"
	cvs tag -c nco-4_4_8;cvs tag -c nco-4_4_8-1

	* One week of documentation improvements while SF was down

2015-02-09  Charlie Zender  <zender@uci.edu>

	* More inclusive definition of "coordinate variables" to avoid quantizing

	* Never quantize upwards floating point values of zero

2015-02-08  Charlie Zender  <zender@uci.edu>

	* Implement PPC in ncecat, ncflint (revert ncbo)

	* Correctly format brackets on indices of missing_values in nco_prn.c

	* Rewrite tables with new less-lossy NSD algorithm

	* Implement rounding (DSD) on integer types

	* Prevent bitmasking (NSD) on integer types

	* Prevent bitmasking when desired precision exceeds representable precision

	* Preserve one extra bit for NC_DOUBLE, based on empirical tests results with ppc=array(1.234567,1.e-6,$dmn)

2015-02-07  Charlie Zender  <zender@uci.edu>

	* Add pure float version of nco_var_around()

	* Bitmask-up to ones instead of down to zeros every other element to avoid bias in rounded mean

2015-02-06  Charlie Zender  <zender@uci.edu>

	* Document mabs/mebs/mibs

	* Add nco_op_typ=mabs, mebs, mibs for maximum, mean, minimum absolute value

2015-02-05  Charlie Zender  <zender@uci.edu>

	* Increase prc_bnr_xpl_rqr by 2 so prc_bnr_xpl_rqr=prc_bnr_ceil. Fixes NSD=1 for Q?? in in.nc

	* Reduce verbosity of dbg_lvl_std

	* Implement PPC in ncwa.c, ncra.c

	* Use -O3 not -O4 on clang

2015-02-04  Charlie Zender  <zender@uci.edu>

	* Document PPC efficacy in tbl_ppc_nc

	* Fix ppc used in ncpdq

2015-02-03  Charlie Zender  <zender@uci.edu>

	* Explicit cast instead of implicit coercion to squelch many MSVC warnings

	* Put string.h headers in nco_cln_utl.h

	* Add isblank() for MSVC

	* Fix nco_var_lst_add() call in ncap_lex.l to restore g++ compilation capability

	* Fix compiling problems on MSVC

2015-02-02  Charlie Zender  <zender@uci.edu>

	* Implement cnk plc_nco and cause it and map_rew to do map_rew for 3-D otherwise map_lfp

	* Optimize nco_ppc_set_var(), fail on invalid variable names

	* Fully document PPC, NSD, DSD

2015-01-31  Charlie Zender  <zender@uci.edu>

	* Specifying PPC triggers dfl_lvl=1 on netCDF4 if not otherwise set

	* Allow PPC on netCDF3

2015-01-30  Charlie Zender  <zender@uci.edu>

	* Warn on incorrect NSD input

2015-01-29  Charlie Zender  <zender@uci.edu>

	* Change generic name from LSD to PPC (precision-preserving compression)

	* Implement threshold precision that turns-off LSD on per-variable basis

2015-01-28  Charlie Zender  <zender@uci.edu>

	* DSD and NSD compression both appear to work and pass all regressions

	* Zero two additional bits from significand in nco_var_bitmask()

	* Fix missing value treatment in nco_var_bitmask()

	* Change nco_var_around() from lrint() to rint() (duh!)

	* Dynamically allocate dimension string info in nco_prn_var_dfn() so NCO works on AIRS files with loooong dimension names

2015-01-26  Charlie Zender  <zender@uci.edu>

	* Functionalize NSD algorithm into nco_var_bitmask()

	* Prototype NSD algorithm compiles, runs, and appears to work as expected

2015-01-25  Charlie Zender  <zender@uci.edu>

	* Demonstrate LSD failure on lsd_bgr, need real precision algorithm

	* Add LSD to ncpdq, document in nco.texi, regression tests

	* Move nco_lsd_att_prc() from main.c into nco_xtr_dfn() for maintainability

2015-01-22  Charlie Zender  <zender@uci.edu>

	* DYW added least_significant_digit attribute

2015-01-20  Charlie Zender  <zender@uci.edu>

	* Move DYW functions to new nco_sld.[ch] files

	* Use tgamma() instead of gamma() on MacOSX

	* Tidy --enable-custom warnings on clang

	* Fix automake error on in_4c.nc

2015-01-19  Charlie Zender  <zender@uci.edu>

	* Fix LSD on MM3 codepath by using brute force instead of hash table in trv_tbl_var_nm_fll()

2015-01-18  Charlie Zender  <zender@uci.edu>

	* Clean-up rx code for LSD by DYW

2015-01-16  Charlie Zender  <zender@uci.edu>

	* Deprecate -D_BSD_SOURCE -D_POSIX_SOURCE in favor of -D_DEFAULT_SOURCE in configure

	* Fix nco_var_typ_trv() prototype for C++ compilers

2015-01-14  Charlie Zender  <zender@uci.edu>

	* LSD implementation in MM3 code compiles cleanly yet has problem finding traversal objects

	* Introduce nco_var_around() calls in MM3 write/copy code

	* Patch nco_mss_val_get() to avoid invalid free()---now	nco_var_around() can work

	* Regressions now fixed. Failures may have been due to excessive .tmp files in regression directory.

2015-01-12  Charlie Zender  <zender@uci.edu>

	* Do not call nco_var_around when lsd == NC_MAX_INT, ensure lsd always initialized

	* Implement multiple LSD options by Dingying Wei (DYW). Currently broken.

	* Improve ISO8601 functionality with nco_cln_sng_rbs()

2015-01-09  Charlie Zender  <zender@uci.edu>

	* Quiet CEWIs exposed by GCC 4.9.2

	* Verify recent (20150109+) netCDF library snapshots fix coordinate renaming problems yet break attribute renaming

	* Introduce -D_DEFAULT_SOURCE in place of deprecated (as of gcc 4.9.2) -D_BSD_SOURCE -D_POSIX_SOURCE
	Include -O optimization when OPTS=X to quiet warning messages
	Whether these Makefile changes introduce compile problems on older GCCs is TBD

	* Add --lbr, --library to ncap2 to facilitate link-path debugging

2015-01-08  Charlie Zender  <zender@uci.edu>

	* New ncecat regression test to verify concatentated coordinates do not gain new record dimension

	* Implement temporary fix for autoconf issues

	* Discovered that NCO autotools do not follow autoconf guidelines
	This only matters in practice for ncap2 which uses multiple additional libraries
	Incorrect usage of CPPFLAGS and friends can lead to wrong precedence in ncap2 linking
	Will be hard to fix correctly---thorough rewrite of configure.ac *.am required

2015-01-07  Charlie Zender  <zender@uci.edu>

	* Add autobld/compile: Wrapper for compilers which do not understand '-c -o'. Required by autoconf/configure on FC21.

	* NCO_CHECK_FUNCS() for nc_rename_grp() and nc_inq_format() in configure
 	Oversight---configure builds have only used stub versions of these functions so far!

2014-12-30  Charlie Zender  <zender@uci.edu>

	* Change copyright year to 2015 and tweak LICENSE from "can" to "may"

	* Introduce stubs to print calendar "time since"dates in more human-readable format

2014-12-18  Charlie Zender  <zender@uci.edu>

	* Impose nco_*() namespace convention on var_scv_*() and scv_var_*() routines

2014-12-08  Charlie Zender  <zender@uci.edu>

	* --lsd ready-to-go except needs per-variable option and needs to avoid coordinates

	* Add nco_var_around() to enhance zlib compression by making it	lossy up to specified precision

2014-12-08  Henry Butowsky  <henryb@hush.com>

	* defdim() now accepts an additional optional arg UNLIMITED or LIMITED

2014-12-01  Charlie Zender  <zender@uci.edu>

	* Warn when appended output type differs from input type (legal	yet sketchy with -A)

2014-11-26  Charlie Zender  <zender@uci.edu>

	* NCO 4.4.7 release procedure:
 	Changes since nco-4_4_6: -0->-1, rename bug, cnk xst, cnk_min, -X, rew, cnk_in
	cd ~/nco;cvs tag -d nco-4_4_7;cvs tag -d nco-4_4_7-1
	cd ~/nco;cvs commit -m "Preparing nco-4.4.7 release"
	cvs tag -c nco-4_4_7;cvs tag -c nco-4_4_7-1

2014-11-25  Charlie Zender  <zender@uci.edu>

	* Regression tests show no failures on gcc and clang Linux and MacOS
	One non-fatal failure on icc Linux (yellowstone) ncecat#9
	Output file is chunked differently than expected. Mysterious.

	* Initialize input chunksize defaults correctly for ncwa, ncecat, ncpdq

2014-11-24  Charlie Zender  <zender@uci.edu>

	* Replace strncpy() in sng_trm_trl_zro() with explicit loop to prevent valgrind complaining about,
	and Mac OS X crashing on, overlapping source and destination buffers

	* Support passing (int *)NULL to nc_inq_format_extended() stub

	* Fix GSL and UDUnits flags in Makefile (fixes yellowstone builds)

2014-11-15  Charlie Zender  <zender@uci.edu>

	* Use new NC_HAS_HDF4 to report HDF4 support with ncks -r

2014-11-12  Charlie Zender  <zender@uci.edu>

	* Document new chunking features

2014-11-11  Charlie Zender  <zender@uci.edu>

	* cnk_rew appears to work for rank = 3. Need larger datasets to be sure.

	* Tidy nco_bld_crd_aux()

2014-11-10  Charlie Zender  <zender@uci.edu>

	* Add regression test for non-coordinate dimension auxiliary coordinate variables

2014-11-05  Charlie Zender  <zender@uci.edu>

	* Almost finished implementing cnk_rew

	* cnk_min=0 sets minimum size of variables to chunk as twice blocksize

	* Using -X now imposes CNV_CCM_CCSM_CF=True regardless of Conventions attribute

2014-11-03  Charlie Zender  <zender@uci.edu>

	* Add regression for auxiliary coordinates

	* First regression-free version in three weeks

	* Now that nco_cnk_sz_set_trv() always called, allow it to work when ncecat creates new record dimension

	* Fix long-time bug where nco_cpy_var_dfn_trv() incorrectly sets dmn_cmn[].is_rec_var for record dimensions affected by
	--fix_rec_dmn or --mk_rec_dmn invocation (always set incorrectly except on first variable affected)

2014-10-31  Charlie Zender  <zender@uci.edu>

	* Adjust regression tests to work with --cnk_min. Document --cnk_min.

2014-10-31  Henry Butowsky  <henryb@hush.com>

	* ncap_cst_mk() in ncap2_utl.cc checks that record dim is the first dim in list ONLY if nc3 file
	  and nc4 file. This also allows users to define vars with multiple record dims.

2014-10-30  Henry Butowsky  <henryb@hush.com>

	* Add hidden feature to defdim(): when dim_sz < 0 then dim is defined as unlimited

2014-10-22  Charlie Zender  <zender@uci.edu>

	* Replace NETCDF4_ROOT by NETCDF_ROOT in configure

2014-10-17  Charlie Zender  <zender@uci.edu>

	* Add --cnk_min to specify minimum size (default 8kB) in bytes of variable to chunk

2014-10-15  Charlie Zender  <zender@uci.edu>

	* Change configure.ac --enable-dap-netcdf to --enable-dap

	* Add cnk.cdl to test chunking algorithms

	* Add cnk_map=nco to assign to current NCO-recommended map

2014-10-13  Charlie Zender  <zender@uci.edu>

	* Always call chunking

	* Stubs for cnk_map = nc4 for default netCDF4 chunking (same as	unchunking for now?)

	* Change links to online discussion forums from, e.g., https://sf.net/projects/nco/forums/forum/9830 to
	https://sf.net/p/nco/discussion/9830 to eliminate new circular reference errors from sf webserver

2014-10-12  Charlie Zender  <zender@uci.edu>

	* Rationalize regression tests with new chunking defaults (xst, xst)

	* Ensure user-specified full chunking paths take precedence over relative paths

	* Simplify nco_cnk_sz_set_trv()

2014-10-10  Charlie Zender  <zender@uci.edu>

	* Fix ncrename regression tests

	* Build in_4.nc from in.nc (not in.cdl due to ncgen chunksize problems and bugs) for regression tests

	* Add numerous regression tests to evaluate nc_rename_var/dim()	behavior.

	* Avoid nc_rename_var/dim() bug in netCDF4 files by avoiding nc_redef()/nc_enddef(). No dice.

2014-10-09  Charlie Zender  <zender@uci.edu>

	* Improve hdr_pad, ncrename documentation

2014-10-08  Charlie Zender  <zender@uci.edu>

	* Add NCO_VERSION for consistency with NC_VERSION

	* Document newly discovered ncrename problems due to netCDF4 bugs http://nco.sf.net/nco.html#bug_nc4_rename

	* Check more error return codes in ncrename.c. Verifies NCO does not ignore any netCDF errors.

2014-10-07  Charlie Zender  <zender@uci.edu>

	* Add regression checks for valid values in renamed coordinates in netCDF4 files

2014-10-02  Charlie Zender  <zender@uci.edu>

	* Change to real Python convention where -1 is last element, e.g., -2 is penultimate element, -N is first element

2014-10-01  Charlie Zender  <zender@uci.edu>

	* NCO 4.4.6 release procedure:
 	Changes since nco-4_4_5: ncks -V, ncap2 -s -S, DAP cnf, ncra pck/mss/prm, HDF4, ncrename, NC4_SRD, -0
	cd ~/nco;cvs tag -d nco-4_4_6;cvs tag -d nco-4_4_6-1
	cd ~/nco;cvs commit -m "Preparing nco-4.4.6 release"
	cvs tag -c nco-4_4_6;cvs tag -c nco-4_4_6-1

	* Add negative zero syntax to select last element of hyperslab

2014-09-30  Charlie Zender  <zender@uci.edu>

	* Avoid void arithmetic in USE_NC4_SRD_WORKAROUND

	* Change important nco_calloc() to nco_malloc() for speed

	* Fix ncwa handling of packed variables for minimization/maximization

	* Implement strncasecmp() for Windows and MSVC compilers

	* Fix count bug in USE_NC4_SRD_WORKAROUND

2014-09-29  Charlie Zender  <zender@uci.edu>

	* Implement USE_NC4_SRD_WORKAROUND by default in all applicable	cases, i.e.,
	for singly strided hyperslab access to netCDCF4 files.

2014-09-26  Charlie Zender  <zender@uci.edu>

	* Implement workaround to nc_get_vars() slowdown for netCDF4 in netCDF library
	Workaround avoids nc_get_vars() and instead loops through calls to nc_get_vara()
	Workaround implemented in nco_msa_get_var_trv() and activated, for now, by -D 6

	* Finish ncrename rewrite. All capabilities work. No regressions.
	Some debugging, syntax, and documentation remains to be done

2014-09-24  Charlie Zender  <zender@uci.edu>

	* Use netcdf_meta.h in nco.h to enable chunking/deflation calls	for HDF4

	* ncrename now builds and works again for all but attributes

2014-09-23  Charlie Zender  <zender@uci.edu>

	* Print extended file format as _SOURCE_FORMAT with ncks --hdn

	* Remove nco_dmn_usr_sng() and nco_obj_usr_sng() due to flawed algorithms

	* Finish ncrename re-write for variables, groups, and dimensions
	NCO versions 4.3.3-4.4.5 broke "." support and did not fully support groups
	Those versions renamed first and ignored subsequent instances of old_nm
	Now ncrename fails as intended when required objects are not present
	Attributes are more complex and are still broken

2014-09-22  Charlie Zender  <zender@uci.edu>

	* Support netCDF 4.3.3 netcdf_meta.h in nco_netcdf.h so NC_HAVE_RENAME_GRP is found

	* Add regression tests to make ncrename die when required entities not present

2014-09-20  Charlie Zender  <zender@uci.edu>

	* Fix bug with ncra --dbl on packed variables with missing values

2014-09-18  Charlie Zender  <zender@uci.edu>

	* Add debugging statements to track netCDF4 stride slowdown

	* Note locations which assume record dimension is in first position

2014-09-17  Charlie Zender  <zender@uci.edu>

	* Start to generalize ncra.c so single record dimensions can occupy any position

2014-09-16  Charlie Zender  <zender@uci.edu>

	* Add regression test to demonstrate bug with ncra --dbl on
	packed float variables with missing values.

	* Implement missing getopt() line for file_format switch

2014-09-15  Charlie Zender  <zender@uci.edu>

	* ./configure now checks for daperror() instead of nc__opendap()

	* Add NC_EIO error clarifications

2014-09-11  Charlie Zender  <zender@uci.edu>

	* Create -V = --var_val = -Q --no_nm_prn for ncks to print only	variable values

	* Document -Q and -V and switch --quiet to -Q (not -q) and synonomize -q with --quench

2014-09-02  Charlie Zender  <zender@uci.edu>

	* Clarify WARNING when record dimension size changes

2014-09-02  Henry Butowsky  <henryb@hush.com>

	* ncap2 command-line and script arguments can now both be specified AND executed
	Command-line args are executed before script:
	ncap2 -v -s "lon=longitude" -S in_4.nc out.nc

2014-08-26  Charlie Zender  <zender@uci.edu>

	* NCO 4.4.5 release procedure:
 	Changes since nco-4_4_4: https DAP, gxvx, mk, ncl_var, dmn_cmn,	ncpdq, C:
	cd ~/nco;cvs tag -d nco-4_4_5;cvs tag -d nco-4_4_5-1
	cd ~/nco;cvs commit -m "Preparing nco-4.4.5 release"
	cvs tag -c nco-4_4_5;cvs tag -c nco-4_4_5-1

2014-08-25  Charlie Zender  <zender@uci.edu>

	* Specify correct dmn_cmn[] information to nco_cnk_sz_set_trv()

2014-08-22  Charlie Zender  <zender@uci.edu>

	* Sanitize filenames prior to shell use with nm2sng_fl() instead of nm2sng_cdl()
	Fixes bug in MS Windows handling volume names like "C:\foo"

2014-08-21  Charlie Zender  <zender@uci.edu>

	* Fix false negative regressions due to new chunking defaults

	* Fix ncpdq mis-handling of dimension reversal arguments (introduced between 4.3.2--4.3.6)

	* Fix inadvertent omission of --cnk_map switch in ncecat

2014-08-15  Charlie Zender  <zender@uci.edu>

	* Change default chunking policy/map from g2d/rd1 to xst/xst (fxm: breaks some regressions)

	* Add mrd.cdl to check compliance/performance for files/variables with Multiple Record Dimensions

2014-08-14  Charlie Zender  <zender@uci.edu>

	* Add cnk_plc_r1d to only change chunking of specified 1-D record variables

2014-08-13  Charlie Zender  <zender@uci.edu>

	* Tweak Makefile for rhea.ccs.ornl.gov

2014-07-14  Charlie Zender  <zender@uci.edu>

	* Tidy ncks.c and nco_grp_utl.c for MPI work

	* Clarify ncrcat packing issues in man page

2014-07-11  Charlie Zender  <zender@uci.edu>

	* Change FL_LST_IN_MAX_LNG from 10 MB to 504576001 B per request of Christine Smit
	Use case: 30 years of hourly data files each 192 characters long

2014-07-10  Charlie Zender  <zender@uci.edu>

	* Deprecate ENABLE_PNETCDF from meaning exposed PnetCDF API
	Soon it will mean that netCDF4 was built with --enable-pnetcdf

2014-07-08  Charlie Zender  <zender@uci.edu>

	* Handle CF ancillary_variables like, well, ancillary variables

2014-07-06  Charlie Zender  <zender@uci.edu>

	* Integrate netCDF4 MPI I/O calls in library, begin conversion with ncks

	* Clean-up nco_get_prg_info(), make consistent with newer netCDF regression tests

2014-07-05  Charlie Zender  <zender@uci.edu>

	* Remove Makefile cruft to simplify building parallel NCO

2014-07-04  Charlie Zender  <zender@uci.edu>

	* Use -5 --fl_fmt=pnetcdf to create NC_FORMAT_CDF5 files

	* Build simply when PNETCDF=Y

2014-07-01  Charlie Zender  <zender@uci.edu>

	* Improve CF-compliance checking infrastructure for mabel/ICESat2

2014-06-17  Charlie Zender  <zender@uci.edu>

	* Implement i18n in ncks, extend to es and fr

2014-06-15  Charlie Zender  <zender@uci.edu>

	* Apply copyright notice changes to most source files

2014-06-13  Charlie Zender  <zender@uci.edu>

	* Update and streamline project homepage

2014-06-12  Charlie Zender  <zender@uci.edu>

	* Improve ncrename diagnostics, fix unset pointer de-reference

2014-06-11  Charlie Zender  <zender@uci.edu>

	* Document --grp_xtr_var_xcl

2014-06-10  Charlie Zender  <zender@uci.edu>

	* Utilize @verbatim environment in all nco.texi @examples

2014-06-06  Charlie Zender  <zender@uci.edu>

	* Improve NCO compliance with NASA Reuse-Readiness Levels (RRLs)
	Reorganize documentation on citation, authorship, copyright, and licensing

	* Document NARR example of SLD statistics

2014-06-05  Charlie Zender  <zender@uci.edu>

	* nc_set_log_level(nco_dbg_lvl) to quiet HDF logging messages for ncdismember

2014-06-04  Charlie Zender  <zender@uci.edu>

	* Add pnetCDF token stubs. Build pnetCDF-enabled netCDF4 in /usr/local/parallel.

	* Filenames that begin with https:// now trigger DAP access code path

2014-05-31  Charlie Zender  <zender@uci.edu>

	* Mac OS X compatibility with bld/Makefile complete. No	regressions!
	Using MacPorts netCDF 4.3.1, Xcode 5.1, GNU coreutils (for cut)

2014-05-29  Charlie Zender  <zender@uci.edu>

	* NCO 4.4.4 release procedure:
 	Changes since nco-4_4_3: -x tolerance, --rad orphans, CERES, mmr, ncwa msk
	cd ~/nco;cvs tag -d nco-4_4_4;cvs tag -d nco-4_4_4-1
	cd ~/nco;cvs commit -m "Preparing nco-4.4.4 release"
	cvs tag -c nco-4_4_4;cvs tag -c nco-4_4_4-1

2014-05-28  Charlie Zender  <zender@uci.edu>

	* Update --mask_condition documentation

2014-05-27  Charlie Zender  <zender@uci.edu>

	* Regression test for negative-valued ncwa --mask_condition works

	* Isolated bug: ncap_ncwa_scn() lexing ignores msk_val minus sign in conditions
	Notes in ncap_lex.l near rules for parsing doubles and long doubles
	Does same problem exist in ncap2 treatment of conditions with negative numbers?

2014-05-26  Charlie Zender  <zender@uci.edu>

	* Start using NC_FILL_STRING

	* Leave ncap (not ncap2) bug found by clang in ncap_lex.l because ncap is deprecated

	* Fix units bug found by clang in nco_aux.c:nco_find_lat_lon()

	* Tidy to quiet clang warnings

2014-05-23  Charlie Zender  <zender@uci.edu>

	* ncdismember handles whitespace in group names in ncatted phase

2014-05-21  Charlie Zender  <zender@uci.edu>

	* Change ncdismember to use eval so ${opt}=${5} may contain multiple whitespace-separated arguments

	* Implement --grp_xtr_var_xcl for ncdismember. Fixes problems for TES, SMAP data.

2014-05-20  Charlie Zender  <zender@uci.edu>

	* Improve ncks -b --bnr --fl_bnr documentation

2014-05-19  Charlie Zender  <zender@uci.edu>

	* Tweak chunking for 1D record variables

2014-05-15  Charlie Zender  <zender@uci.edu>

	* netCDF 4.3.2 default chunksize of record variables is 1048576	not 1
	Alter regression tests to not fail with this, eliminate false negatives

2014-05-06  Charlie Zender  <zender@uci.edu>

	* Improve HDF4 documentation accuracy and clarity

2014-05-05  Charlie Zender  <zender@uci.edu>

	* Free hash table with nco_trv_hsh_del(tbl)

2014-05-04  Charlie Zender  <zender@uci.edu>

	* Fix indexing error with flg_dne, flg_dne2

2014-04-23  Charlie Zender  <zender@uci.edu>

	* Attempt regular expression parsing in nco_dmn_avg_mk() only when
	user explicitly specifies dimensions to process. This allows ncwa
	to work on files with crazy HDF names for dimensions.

	* Clean-up warnings for crazy HDF names

2014-04-22  Charlie Zender  <zender@uci.edu>

	* Finish hacks to nco_netcdf.c nco_inq_varid() and nco_def_dim()
	that allow file translation to work with crazy HDF names.

2014-04-20  Charlie Zender  <zender@uci.edu>

	* Update bld/Makefile for Yellowstone configuration changes

2014-04-16 Pedro Vicente  <pvicente@uci.edu>

	* nco_prc_cmn_nsm_att() Process (define, write) variables belonging to ensembles in both files (ncbo); special "attribute lookup" ensemble version

2014-04-16  Charlie Zender  <zender@uci.edu>

	* Restore former tolerance of -x EXCLUDE_INPUT_LIST for	non-existent elements
	Tolerance was lost in 4.2.x when nco_xtr_mk() replaced older method
	Thanks to Keith Oleson for this bug report

	* CDL mode prints orphaned dimensions with --rad flag

2014-04-15 Pedro Vicente  <pvicente@uci.edu>

	* ncks --rad, --orphan, --rph: Retain all (including orphaned) dimensions

	* nco_rad() Retain all dimensions.

2014-04-13  Charlie Zender  <zender@uci.edu>

	* Address Debian bug #744476 by utilizing dh_autoreconf in rules

	* Write nm2sng_nc() to netCDF-ize problematic HDF4 names
	Replaces slash and leading special characters by underscore

2014-04-12  Charlie Zender  <zender@uci.edu>

	* Fix nco_trm_trl_zro() bug which used last zero, if any, in
	exponent instead last zero after decimal point before exponent.
	This caused CDL and XML mode to truncate trailing zeros of exponent
	Hence all CDL and XML printing prior to 4.4.4 mis-prints floating
	point numbers with exponents +/- 10, 20, 30 ... 200, 210, 220...

	* Hunt for ncks --cdl formatting bug that truncates e-10 exponents...

2014-04-07 Pedro Vicente  <pvicente@uci.edu>

	* nco_nsm_att() Inquire if ensemble parent group has "ensemble_source" attribute (ncbo only)
	This attribute is saved in ncge

2014-04-06 Pedro Vicente  <pvicente@uci.edu>

	* Add /doc/README_msvc.txt, Microsoft Windows Visual Studio 2010 (MSVC) build instructions

2014-04-01  Charlie Zender  <zender@uci.edu>

	* NCO 4.4.3 release procedure:
 	Changes since nco-4_4_2: DAP srd fix, nsm brd, rgr wrk
	cd ~/nco;cvs tag -d nco-4_4_3;cvs tag -d nco-4_4_3-1
	cd ~/nco;cvs commit -m "Preparing nco-4.4.3 release"
	cvs tag -c nco-4_4_3;cvs tag -c nco-4_4_3-1

2014-04-01 Pedro Vicente  <pvicente@uci.edu>

	* Data file in_grp_7.cdl with group previously in in_grp_3.cdl, to avoid netCDF 4.1 repeated dimension IDs bug

	* Regression script NCO_rgr.pm detects return code made by function nco_get_prg_info()

	* nco_get_prg_info() Make return code 41 for netCDF version 4.1x linkage and return code 43 for netCDF version 4.3.1.x linkage

2014-03-27 Pedro Vicente  <pvicente@uci.edu>

	* ncge: Detect NCAR CCM/CCSM/CF conventions for handling fixed variables

	* nco_var_is_fix() Variable should be treated as a fixed variable

	* nces #21 Test CF fixed variables

2014-03-26 Pedro Vicente  <pvicente@uci.edu>

	* ncwa #58-62: Cell methods regressions

	* ncwa #63: Cell methods test with repeated dimension names (test absolute dimension name)

	* nco_cnv_cf_cll_mth_add() Use absolute dimension name to match dimensions

2014-03-19 Pedro Vicente  <pvicente@uci.edu>

	* ncbo #29: Process cases where both an absolute path variable exists in 2 files and
	a relative variable match exists as a result of processing ncge with 1 ensemble member

2014-03-13 Pedro Vicente  <pvicente@uci.edu>

	* nces #20: Checking of conforming dimensions between ensemble variables

	* nco_chk_nsm() Check if ensembles dimensions are valid

2014-03-12 Pedro Vicente  <pvicente@uci.edu>

	* Add test files in_grp_4.cdl, in_grp_5.cdl; generate test case for nces average members
	whose hyperslabs resolve to the same size

2014-03-10  Charlie Zender  <zender@uci.edu>

	* Build NCO on rhea at ORNL

2014-03-10 Pedro Vicente  <pvicente@uci.edu>

	* ncbo #29. Process relative matches, second file greater (obs.nc cmip5.nc)

2014-03-09 Pedro Vicente  <pvicente@uci.edu>

	* ncbo #27. Process ensembles in file 2 (obs.nc) with common variable at root in file 1 (mdl.nc)
	Check fixed variables

	* ncbo #28. Process relative matches, first file greater (cmip5.nc obs.nc)

	* nco_prc_rel_cmn_nm(). Process relative matches.

2014-03-06 Pedro Vicente  <pvicente@uci.edu>

	* ncbo #26. Process ensembles in file 2 (obs.nc) with common variable at root in file 1 (mdl.nc)

	* nco_prc_nsm(). Process ensembles in file 2 with common variable at root in file 1

2014-03-05 Pedro Vicente  <pvicente@uci.edu>

	* ncbo #25. Process ensembles in file 1 (mdl.nc) with common variable at root in file 2 (obs.nc)

	* nco_prc_nsm(). Process ensembles in file 1 with common variable at root in file 2

2014-03-04 Pedro Vicente  <pvicente@uci.edu>

	* ncbo #24. Process variables belonging to ensembles in both files

	* nco_prc_cmn_nsm(). Process variables belonging to ensembles in both files

2014-03-04  Charlie Zender  <zender@uci.edu>

	* User reported extreme slowdown accessing 3-D data with strides from DAP server
	Info from R. Signell and J. Whitaker suggests using nco_get_vars() instead of nco_get_varm()
	All NCO hyperslab code uses nco_get_varm() instead of nco_get_vars(), and supplies NULL * as mapping vector
	Replacing all instances of nco_get_varm() with nco_get_vars() solves access speed problem on DAP

2014-03-03  Charlie Zender  <zender@uci.edu>

	* Add NCOpy by Joe Hamman to homepage

2014-02-27  Charlie Zender  <zender@uci.edu>

	* Document HDF Group H4CF tool h4tonccf

2014-02-26  Charlie Zender  <zender@uci.edu>

	* Warn about record chunk sizes only after records have been written

2014-02-25  Charlie Zender  <zender@uci.edu>

	* Diagnose/fix ncwa/ncpdq dimension-matching algorithm
	Old algorithm matched any dimension that contained specified string

2014-02-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.4.2 release procedure:
 	Changes since nco-4_4_1: ncra.c mmr 4 LLVM/clang, -X, rx nsx, cll_mth, ncwa sng, cnk
	cd ~/nco;cvs tag -d nco-4_4_2;cvs tag -d nco-4_4_2-1
	cd ~/nco;cvs commit -m "Preparing nco-4.4.2 release"
	cvs tag -c nco-4_4_2;cvs tag -c nco-4_4_2-1

	* Slightly simplify logic in calling/utilizing nco_inq_format_extended()

	* Restore explanatory messages for new ncrename regression failures

	* Remove test group with hidden attributes from in_grp.cdl to prevent build failures with netCDF 4.1.1-
	Isolate this group in new file hdn.cdl so that in_grp.nc builds	and regressions pass

2014-02-19  Charlie Zender  <zender@uci.edu>

	* Turn-off OpenMP by setting thr_nbr_max_fsh == 1. Revisit when thoroughly tested.

	* Fix bad initialization of dmn_cmn in nco_cnk_sz_set_trv()

	* Clean-up compiler warnings for GCC 4.4.3- and for netCDF3-only builds (i.e., tephra)

	* Clarify nces behavior with coordinates

2014-02-19 Pedro Vicente  <pvicente@uci.edu>

	* Print error message for ncge, when second file contains ensembles not in first file

2014-02-18 Pedro Vicente  <pvicente@uci.edu>

	* nces regressions #18 Ensemble fixed variables

	* nco_nsm_def_wri() Define OR write ensemble fixed variables

2014-02-18  Charlie Zender  <zender@uci.edu>

	* Fix four crazy/busted ncrename regression tests.
	They only passed with netCDF < 4.3.1 because of library bug that
	renamed whole coordinates (variables + dimensions) instead of only dimensions.

2014-02-17  Charlie Zender  <zender@uci.edu>

	* Re-implement cell_methods from scratch

2014-02-13  Charlie Zender  <zender@uci.edu>

	* Change duration (drn) to subcycle (ssc), a more descriptive keyword

2014-02-12  Charlie Zender  <zender@uci.edu>

	* Workaround double-free() bug with ncwa min/max and string arrays
	Temporarily do not free string memory in nco_var_free() unless dbg_lvl=6

	* nco_var_rdc_[min|max|ttl]() copies first element of NC_CHAR and NC_STRING
	Previously, these routines did nothing with those variable types

	* Set only flg_mch (not flg_xtr) in nco_trv_rx_search()

	* Always call nco_def_var_deflate() with valid dfl_lvl in ncap2

	* Tidy configure.ac

2014-02-11  Charlie Zender  <zender@uci.edu>

	* Flag objects associated with both explicit _and_ rx-matched objects
	Now rx-matched groups have associated variables flagged in intersection mode

	* Call nco_cnk_ini() iff fl_out_fmt is netCDF4

2014-02-10 Pedro Vicente  <pvicente@uci.edu>

	* ncwa regressions #61, #62, #63 cell_methods CF attribute convention

2014-02-10  Charlie Zender  <zender@uci.edu>

	* ncks expand smr_sng to accomodate longer filenames, summaries	(fixes SMAP breakage)

2014-02-07  Pedro Vicente  <pvicente@uci.edu>

	* ncra regression #32 cell_methods CF attribute convention (create)

2014-02-07  Charlie Zender  <zender@uci.edu>

	* Make JSON look decent

	* Change cell_methods to agree with actual method used for coordinates

	* Change ncwa behavior to comply with longstanding intent & documentation that coordinate
	variables always return averages, never extrema or other statistics.
	ncra and nces have long-implemented this convention.

2014-02-06  Pedro Vicente  <pvicente@uci.edu>

	* Add test data for cell_methods CF attribute convention

	* ncwa regression #58, #59, #60 cell_methods CF attribute convention

2014-02-06  Charlie Zender  <zender@uci.edu>

	* Start node printing for JSON

2014-02-05  Pedro Vicente  <pvicente@uci.edu>

	* Add ncks regression #89 -X and associated coordinates

2014-02-05  Charlie Zender  <zender@uci.edu>

	* Add W10N/JSON stubs

	* Improve documentation build rules in ./configure

	* Explicitly add -Wuninitialized -Wmaybe-uninitialized to GCC in bld/Makefile

2014-02-04  Charlie Zender  <zender@uci.edu>

	* Pass same Make arguments to clang/LLVM as to gcc/GCC

	* Add byte/ubyte-valued nco_var_avg_rdc_ttl()/_min()/max()
	Was bug in native-byte arithmetic but NCO usually promotes to double...

	* Fix Clang/LLVM compiler warnings: nco_fl_blocksize() and nco_cnk_ini() prototypes,
	self-assign CEWI compiler warnings (now add zero).

2014-02-04  Pedro Vicente  <pvicente@uci.edu>

	* Add ncks regression #88 -X writing and associated coordinates

2014-02-02  Pedro Vicente  <pvicente@uci.edu>

	* Add ncks regression #90 -X writing and associated coordinates

2014-02-01  Pedro Vicente  <pvicente@uci.edu>

	* Add ncks regression #83 Test 'standard_name' attribute for "longitude" and "latitude" values

2014-01-31  Charlie Zender  <zender@uci.edu>

	* Crude implementation of cnk_map=rew

2014-01-31  Pedro Vicente  <pvicente@uci.edu>

	* nco_cnv_cf_cll_mth_add() Add cell_methods attributes (create mode)

	* Add ncwa regression #58 Add cell_methods attributes (create mode)

2014-01-30  Pedro Vicente  <pvicente@uci.edu>

	* nco_chk_dmn(): Check valid input dimension name (used for --fix_rec_dmn)
	Make group table construction function return NCO_CHK_NOERR or NCO_CHK_ERR

2014-01-30  Charlie Zender  <zender@uci.edu>

	* Improve REC_APN documentation

2014-01-29  Pedro Vicente  <pvicente@uci.edu>

	* Add ncks regressions #86 Change record dimension to fixed dimension --fix_rec_dmn

2014-01-29  Charlie Zender  <zender@uci.edu>

	* NCO 4.4.1 release procedure:
 	Changes since nco-4_4_0: -X grp, cnk_dmn grp, ncra_no_fl_close bugfix
	cd ~/nco;cvs tag -d nco-4_4_1;cvs tag -d nco-4_4_1-1
	cd ~/nco;cvs commit -m "Preparing nco-4.4.1 release"
	cvs tag -c nco-4_4_1;cvs tag -c nco-4_4_1-1

	* Verified ./configure works on Intel compilers on greenplanet, and
	bld/Makefile works on Intel compilers on yellowstone, and all regressions pass

	* Revert nco_close() and nco_fl_rm() to intended location within ncra.c file loop
	Fixes important bug since multi-file operator was not closing/removing input files
	Bug committed in ncra.c revision 1.430 on 20131107 thus affects	NCO 4.3.9-4.4.0.

	* Remove expected return value from free() in strcasecmp() for Mac OS 10.9 LLVM compatibility

2014-01-27  Pedro Vicente  <pvicente@uci.edu>

	* Add ncrcat regressions #28,29,30 Record appending for a group with one record, for a group with 2 records

2014-01-26  Charlie Zender  <zender@uci.edu>

	* Remove early exit from nco_cnk_sz_set(). Revert some changes.

	* Tidy nco_cnk.c

	* NB: Unidata renamed netCDF 4.3.1-rc7 as 4.3.1. Some NCO notes	still say 4.3.1-rc7.

2014-01-23  Pedro Vicente  <pvicente@uci.edu>

	* nco_dmn_malloc() Inquire about number of dimensions in group and return dynamic array of dimension IDs

2014-01-22  Pedro Vicente  <pvicente@uci.edu>

	* nco_prs_aux_crd() Parse auxiliary coordinates limits directly into traversal table

2014-01-21  Pedro Vicente  <pvicente@uci.edu>

	* Add nco_var_scp(). Check if one variable is in scope of another.

2014-01-21  Charlie Zender  <zender@uci.edu>

	* ncgen breaks on hidden attributes in CDL with netCDF 4.1.1- (201111)
	Hence NCO 4.4.0 has many regressions on older netCDF
	Need to move in_grp.cdl hidden attributes group g13 into its own "safe" file

	* Performed autoreconf --force to update config.{sub,guess} for	Debian AArch64

	* Add nces.1 manpage to automake instructions

2014-01-20  Pedro Vicente  <pvicente@uci.edu>

	* Add ncks regressions #81,#82,#83,84 --cnk_dmn full names

2014-01-17  Charlie Zender  <zender@uci.edu>

	* Turn-off shuffle when uncompressing otherwise chunking requests may fail

	* Add nco_def_var_fletcher32() wrapper and stub

2014-01-17  Pedro Vicente  <pvicente@uci.edu>

	* Add ncks regressions #81,#82 --cnk_dmn full names

	* Add ncks regressions #83 Chunking and shuffle filter

2014-01-16  Pedro Vicente  <pvicente@uci.edu>

	* Add test data for --cnk_dmn full names in_grp_3.cdl

	* Add ncks regression #80 Chunking and uncompression (-L 0)

	* Add utility functions nco_strrstr(), nco_is_fll_pth()

2014-01-16  Charlie Zender  <zender@uci.edu>

	* Fix to allow uncompressing files at the same time as chunking files

2014-01-14  Pedro Vicente  <pvicente@uci.edu>

	* Add test data for -X option in in_grp_3.cdl

2014-01-12  Pedro Vicente  <pvicente@uci.edu>

	* -X support for associated variables located anywhere in file hierarchy

	* Add ncks regression #70: -X for associated variables located anywhere in file hierarchy

2014-01-09  Charlie Zender  <zender@uci.edu>

	* Fix cnk lfp map bug, re-release 4.4.0

2014-01-08  Charlie Zender  <zender@uci.edu>

	* NCO 4.4.0 release procedure:
 	Changes since nco-4_3_9: hash, dyn mmr, ncra.c fixes, hdf4, autocnv, hdn, cnk
	cd ~/nco;cvs tag -d nco-4_4_0;cvs tag -d nco-4_4_0-1
	cd ~/nco;cvs commit -m "Preparing nco-4.4.0 release"
	cvs tag -c nco-4_4_0;cvs tag -c nco-4_4_0-1

	* Add hack to help convert empty variables with multiple record dimensions to all fixed dimensions and netCDF3 output

	* Fix subtle bug when overwriting attributes during autoconversion

2014-01-07  Charlie Zender  <zender@uci.edu>

	* Verify yellowstone build is clean, improve chunking error-tolerance

2014-01-07  Pedro Vicente  <pvicente@uci.edu>

	* Add ncpdq regression #46: Chunking -a lon,lat --cnk_dmn lat,1 --cnk_dmn lon,2 -v lat_2D_rct

	* Add ncecat regression #12: Chunking -v four_dmn_rec_var --cnk_dmn lat,2 --cnk_dmn lon,4

	* Add ncwa regression #57: Chunking with --rdd

2014-01-06  Pedro Vicente  <pvicente@uci.edu>

	* Add ncwa regression #55: Chunking -a time --cnk_dmn lon,4 -v byt_3D_rec

	* Add ncwa regression #56: Chunking -a /time --cnk_dmn /time,1 -v time

2014-01-06  Charlie Zender  <zender@uci.edu>

	* Use "_ChunkSizes" (plural) not "_ChunkSize" (singular) in NcML output

	* Add cnk_map argument to some executables that were missing it

	* Fix recidivist bug where if(sng_cnv_rcd) used instead of if(*sng_cnv_rcd)

2014-01-05  Pedro Vicente  <pvicente@uci.edu>

	* Add ncecat regression #11: Chunking --cnk_plc=all

2014-01-05  Charlie Zender  <zender@uci.edu>

	* Base default cnk_sz_byt on output filesystem blocksize

	* Add chk_sz_byt/cnk_byt input to all netCDF4 writers

2014-01-03  Charlie Zender  <zender@uci.edu>

	* Implement map_lfp and begin accounting for type size and chunk size in bytes

	* Implement plc_xst and map_xst

	* Implement plc_xpl and correct detour when must_be_chunked

	* Add stubs for two new (and not-yet-supported) chunking maps: map_xst and map_lfp

	* Verified nccopy does not preserve pre-set _Chunksizes when copying variables

	* Revert to completing nco_cnk_sz_set_trv() only when user-specified

	* Fix bug where nco_var_lst_dvd_trv() was called with cnk_map, cnk_plc instead of pck_map, pck_plc

2014-01-02  Charlie Zender  <zender@uci.edu>

	* Add nco_op_typ_cf_sng() for cell_methods functionality

	* Refactored chunking code. Exposed old bug in is_chunked flag. Many regressions.

	* Fixed nco_cnk_sz_set_trv() bug where nco_cnk_dsk_inq() was called with output not input ID

	* Replace cnk_sct with cnk_dmn, cnk with cnk_dmn in preparation	for new chunk structure

	* Add nco_[get/set]_chunk_cache() prototypes

	* Tidy nco_cnk_sz_set_trv()

2013-12-31  Charlie Zender  <zender@uci.edu>

	* Prevent printing hidden attributes on netCDF3 files

	* Fix error when new nco_inq_var_fill() stub used on netCDF3 files

	* XML mode deprecate emulation of toolsUI 4.3 _FillValue behavior for unsigned types (present in NCO 4.3.7-4.3.9)

2013-12-30  Charlie Zender  <zender@uci.edu>

	* ncks document --hdn, autoconversion, --fix_rec_dmn changes

	* Update copyright year to 2014

	* Verified snapshot passes tests on Yellowstone

	* NCO snapshot fails all ncra on tephra/netCDF3-only. No obvious valgrind issues.

	* Add regressions tests for ncra/ncrcat issues fixed at AGU
	including incorrect treatment of missing values with MRO, and
	detection of input_complete when stride skips user-specified idx_end_max

2013-12-29  Charlie Zender  <zender@uci.edu>

	* Print hidden attributes with --hdn, --hidden

	* ncks --fix_rec_dmn=all fixes all record dimensions

	* ncdismember put groups in per-file directory, call cfchecker in batch mode

2013-12-28  Charlie Zender  <zender@uci.edu>

	* Add HINT for NC_ECANTWRITE

	* ncdismember overwrite Conventions with version used by cfchecker

	* ncdismember match .hdf only as filename suffix for --hdf4 switch

	* Refine nco_xtr_grp_mrk() to check that marked groups match
	beginning/end of path boundaries. nco_xtr_mk() already does this.

2013-12-27  Charlie Zender  <zender@uci.edu>

	* Failed attempt to convert NC_STRING to NC_CHAR variables
	Would require implementing (possibly thousands of) dummy dimensions

	* Correctly handle output filenames that contain whitespace

	* ncdismember: Works with group names that contain whitespace

	* CDL-mode: print terminal group name comments in CDL-valid syntax to protect whitespace

	* Fix diagnostic INFO message for mk_rec_dmn/fix_rec_dmn in nco_cpy_var_dfn_trv(), nco_dmn_msa_tbl()

	* Autoconvert: fix when converting _FillValue, and restore defaults. MODIS works!

	* nco_att_cpy() autoconverts all netCDF4->netCDF3 types when appropriate in ncks

	* nco_msa_cpy_var_val_mlt_lmt_trv() use nco_var_cnf_typ() to autoconvert netCDF4->netCDF3

	* nco_msa_cpy_var_val_mlt_lmt_trv() use one code path for scalars and arrays

2013-12-25  Pedro Vicente  <pvicente@uci.edu>

	* Add ncks regression #78: CF extraction of in-scope variables

2013-12-25  Charlie Zender  <zender@uci.edu>

	* Replace harmless continue with more efficient break

2013-12-24  Pedro Vicente  <pvicente@uci.edu>

	* Add ncks regressions #75, #76: Default datasets (no options)

	* Add ncks regression #77: flatten with parallel variables (-3 -G : -g)

2013-12-23  Charlie Zender  <zender@uci.edu>

	* Add autoconvert stubs to nco_xtr_dfn() and nco_cpy_var_val_mlt_lmt_trv()

	* Clean-up nco_cpy_var_dfn_trv() before implementing autoconvert feature

	* Add HINT before exit() on NC_EBADTYPE

2013-12-22  Pedro Vicente  <pvicente@uci.edu>

	* Add ncks regression #74: -c option, extract all coordinate variables

2013-12-22  Charlie Zender  <zender@uci.edu>

	* ncks ~/nco/data/hdf.hdf now works!

	* Document new HDF4 capabilities

	* Eliminate need for --hdf4 switch if linked to netCDF 4.3.1-rc7+

	* Change from nco_hdf_cnv to nco_fmt_xtn enum/tokens

	* Add nco_inq_format_extended() stubs

	* Add hdf.cdl to generate HDF4 files for testing

	* Fix/change --nsm_fl, --nsm_grp switches to not expect arguments

2013-12-19  Pedro Vicente  <pvicente@uci.edu>

	* Fix -X bug, where extra array elements were being printed.

	* Add use case for -X in scope variables, in in_grp_3.cdl.

2013-12-19  Charlie Zender  <zender@uci.edu>

	* Document "group" option to ncatted

	* Tweak ncdismember to append specified CF Convention to each dataset

	* Add dsm.cdl to test ncdismember in ICESat-2 and Mable-like cases

	* Print metadata only groups in all desired cases

2013-12-18  Charlie Zender  <zender@uci.edu>

	* Print only extracted groups for prn_flg->trd in old format

	* Print group closing braces for prn_flg->trd in new format

	* Print metadata-only groups when all ancestors have extracted variables

	* Rely on nco_xtr_grp_mrk() and remove duplicate code from nco_xtr_mk()

	* Copy metadata-only groups. Introduce flg_mtd and use flg_xcl to handle group exclusion.

	* Tidy nco_grp_utl.[ch] before addressing metadata-only leaf-group extraction bug

2013-12-17  Charlie Zender  <zender@uci.edu>

	* Regression test for copy/print metadata-only leaf group

	* Better document ncrename behavior with coordinates and groups

2013-12-16  Pedro Vicente  <pvicente@uci.edu>

	* ncwa weights/masks names can be absolute names (start with '/')

	* Add regressions #52, #53 for ncwa weights/masks names with absolute names

2013-12-16  Charlie Zender  <zender@uci.edu>

	* Clarify ncrename coordinate documentation

	* Use target-specific rule to filter-out -Wcast-qual on files with uthash in prototypes

2013-12-12  Pedro Vicente  <pvicente@uci.edu>

	* Dimensions in hyperslabbing arguments are once again checked for
	validity prior to processing and invalid (i.e., non-existant)
	dimensions once-again cause operators to abort.

2013-12-11  Charlie Zender  <zender@uci.edu>

	* Stop writing global attributes twice in ncra.c

	* Re-enable history attribute in ncra.c

2013-12-10  Charlie Zender  <zender@uci.edu>

	* Tentative fix to mss_val/MRO bug: use mss_val from var_prc_out not var_prc in nco_opr_nrm()

	* Whitespace changes while attacking ncra mss_val/MRO bug

	* Fix ncra/ncrcat bug where extra record used when superfluous input files provided
	and stride places first index of superfluous files beyond user-specified last index.

	* Clean-up hash usage. Try different approaches prior to widespread implementation.

2013-12-10  Pedro Vicente  <pvicente@uci.edu>

	* Replace static dimensions arrays with dynamic. Causes a one order-of-magnitude speedup.

	* Limit structures are now contained in the traversal table build function
	Information about valid limit names is exported to main programs

2013-12-09  Charlie Zender  <zender@uci.edu>

	* Fix ncra/ncrcat bug where file loop exited after first record dimension completed

	* Whitespace changes while debugging MRO/DRN bug

	* Revert one-line CVS version 1.59->1.60 change in nco_omp.c committed on
	20131029 which caused many OpenMP-enabled operators to die when dbg_lvl > 2.

	* Prepare to attack ncra/ncrcat MRO/DRN bug

2013-12-09  Pedro Vicente  <pvicente@uci.edu>

	* Enable hash table lookup

2013-12-08  Pedro Vicente  <pvicente@uci.edu>

	* ncrename: Regression #22 Allow input syntax of new name as full path

2013-12-04  Charlie Zender  <zender@uci.edu>

	* Patch ncap2 format string vulnerability to prevent FTBFS error with -Werror=format-security
	Patch provided by Orion Poplowski

	* Turn-off deflate filter when dfl_lvl == 0

	* Fix many ncap2 compiler warnings

2013-12-04 Pedro Vicente  <pvicente@uci.edu>

	* Function that checks for invalid input dimensions

	* ncks: Regression #72 Invalid dimension input

2013-12-04  Charlie Zender  <zender@uci.edu>

	* De-compressing netCDF4 files/variables to level 0 works

2013-12-03  Charlie Zender  <zender@uci.edu>

	* Add g13 to in_grp.cdl to test compression and other hidden attributes

2013-12-02  Charlie Zender  <zender@uci.edu>

	* NCO 4.3.9 release procedure:
 	Changes since nco-4_3_8: nces, XML, ncatted NaN
	cd ~/nco;cvs tag -d nco-4_3_9;cvs tag -d nco-4_3_9-1
	cd ~/nco;cvs commit -m "Preparing nco-4.3.9 release"
	cvs tag -c nco-4_3_9;cvs tag -c nco-4_3_9-1

	* ncatted: Replace isnormal() with isfinite() macro to treat zero "normally"

	* nces: Clean-up nco_grp_utl.c, nco_grp_trv.c, ncra.c

	* Document nces and group mode in nco.texi, man pages, internally

2013-12-01  Charlie Zender  <zender@uci.edu>

	* Rename old ncea program to nces (netCDF ensemble statistics)

	* Rename old ncea-mode to ncfe-mode (netCDF file ensemble)

	* Rename old nces-mode to ncge-mode (netCDF group ensemble)

2013-11-23  Charlie Zender  <zender@uci.edu>

	* Add nco_srm.[ch] for streams

2013-11-22 Pedro Vicente  <pvicente@uci.edu>

	* nces: Regression #4 multi file ensembles

2013-11-22  Charlie Zender  <zender@uci.edu>

	* XML mode add informational comments like CDL with -D 1

	* XML mode isolate toolsui/ncgen/XML bugginess in buggy.cdl so in_grp.cdl "just works"

	* XML mode add precise multi-dimensional NC_CHAR warnings when dbg_lbl > 0

	* XML mode change default and backup string separator to "*" and "*|*" respectively
	NB: Buggy NcML toolsui breaks on long separators like "foobar"

	* XML mode add ugly shape="" attribute to scalars for fuller NcML compliance

2013-11-21  Charlie Zender  <zender@uci.edu>

	* XML mode ensure string variables and attributes do not contain string separator

2013-11-20  Charlie Zender  <zender@uci.edu>

	* XML mode never print blank (underscore) for missing values

	* Workaround NcML limitations on uint64 types by removing
	max(uint64) values from input CDL files other than buggy.cdl

2013-11-19  Charlie Zender  <zender@uci.edu>

	* XML mode print non-whitespace separators for 1D character array attributes

	* XML mode print non-whitespace separators for scalar strings for brain-dead programs

2013-11-18  Charlie Zender  <zender@uci.edu>

	* Neaten XML indentation

	* Add more backwards-incompatible members to buggy.cdl

	* XML mode use stub-name not full name in group name element

2013-11-16  Charlie Zender  <zender@uci.edu>

	* Omit XML default _FillValue when variable already has _FillValue

	* Eliminate all quotes from <values> elements

	* XML mode add default _FillValue attribute for unsigned variable types

	* XML mode add _Unsigned attribute for unsigned variable types

	* XML mode use xml_typ_nm() instead of cdl_typ_nm()

2013-11-15  Pedro Vicente  <pvicente@uci.edu>

	* nces: Regression #3 file ensemble with GPE

2013-11-15  Charlie Zender  <zender@uci.edu>

	* Add XML non-whitespace separator to multi-dimensional NC_CHAR variables

2013-11-13  Charlie Zender  <zender@uci.edu>

	* Numerous XML fixes spurred by Aleksandar Jelenak report:

	* Make XML separator configurable via ncks --xml_spr_chr, --xml_spr_nmr

	* Fix printf() format string for NC_INT64 in nco_typ_fmt_sng_att_xml()

	* Close content-less <variable> elements with "/>" not ">" (in contrast to ncdump -x, toolsui)

	* Add separator=", " attribute for non-whitespace separators

	* Add type="cdl_typ_nm" attribute to non-string attribute elements

	* XML print </variable> in metadata mode

2013-11-13  Pedro Vicente  <pvicente@uci.edu>

	* nces: Regression #1, #2. 1 file ensembles, with --nsm_sfx

2013-11-10  Charlie Zender  <zender@uci.edu>

	* nces first stab at --nsm_sfx switch. Must place in nco_xtr_mk() too.

2013-11-06  Charlie Zender  <zender@uci.edu>

	* NCO 4.3.8 release procedure:
 	Changes since nco-4_3_7: ncatted groups, -7, namespace safety
	cd ~/nco;cvs tag -d nco-4_3_8;cvs tag -d nco-4_3_8-1
	cd ~/nco;cvs commit -m "Preparing nco-4.3.8 release"
	cvs tag -c nco-4_3_8;cvs tag -c nco-4_3_8-1

	* Add example of removing "bounds" variable

	* Add -7 synonym switch for fl_fmt=netcdf4_classic

2013-10-31  Pedro Vicente  <pvicente@uci.edu>

	* ncatted: Regressions #6 to 11. Groups, for single variable, all
	variables, wildcard variables, group attributes, relative and
	absolute variable names, global attriutes.

2013-10-25  Charlie Zender  <zender@uci.edu>

	* Update config.[guess,sub] to enable builds on ARM64 (AArch64) machines

	* Add missing --op_typ/--operation switches to ncra.c

2013-10-23  Pedro Vicente  <pvicente@uci.edu>

	* Add option to configure --enable-openmp (default yes), disable with --disable-openmp

2013-10-23  Charlie Zender  <zender@uci.edu>

	* Update autobld/missing with missing from automake 1.13

	* Add GNU-required AUTHORS file to quiet autoreconf warnings

2013-10-21  Charlie Zender  <zender@uci.edu>

	* Rename most external symbols to have nco_ prefix
	This changes prg,prg_nm,dbg_lvl to nco_prg_id,nco_prg_nm,nco_dbg_lvl
	and prg_get(),prg_nm_get(),dbg_lvl_get() to nco_prg_id_get(),nco_prg_nm_get(),nco_dbg_lvl_get()
	This should considerably reduce chances of namespace pollution
	Other changes include prg_prs()->nco_prg_prs()
	Remaining namespace violators will be changed in the course of time
	This partially addresses external symbol conflicts with NCO 4.3.7 on yellowstone.ucar.edu

2013-10-20  Charlie Zender  <zender@uci.edu>

	* Add hashing to trv_tbl_mrk_xtr(). More regressions.

	* Document hash table behavior. Play with -Wcast-qual

	* Tidy group routines. Verify no regressions before implementing hashes.

2013-10-18  Charlie Zender  <zender@uci.edu>

	* Supplant strcmp() with hash table in trv_tbl_var_nm_fll()
	Works on all operators except ncbo

	* #define NCO_HSH_TRV_OBJ token to use hashes instead of strcmp() loops

	* Hash all objects in traversal table and store resultant hash table
	Use string-keyed hash based on full object name

	* Add uthash hash table functionality stubs and nco_uthash.h
	BSD-licensed code by Troy D. Hanson http://troydhanson.github.com/uthash

	* Warn about excessive malloc()-size requests.
	Namespace pollution caused request for 18446744073709551608 B = 16 EB

	* Move ncga enum to nces enum and place at end to workaround namespace pollution
	Pollution tainted shared libraries on Yellowstone at NWSC. To prevent recurrence
	must prefix all external symbols with nco_, and remove all global variables.

2013-10-17  Charlie Zender  <zender@uci.edu>

	* NCO 4.3.7 release procedure:
 	Changes since nco-4_3_6: --mrd, --hdf4, --xml, ncrename groups
	cd ~/nco;cvs tag -d nco-4_3_7;cvs tag -d nco-4_3_7-1
	cd ~/nco;cvs commit -m "Preparing nco-4.3.7 release"
	cvs tag -c nco-4_3_7;cvs tag -c nco-4_3_7-1

2013-10-16  Pedro Vicente  <pvicente@uci.edu>

	* Add ncrename regressions #1 to #21: attributes, dimensions, variables, groups.

2013-10-16  Charlie Zender  <zender@uci.edu>

	* Add --xml_no_location

2013-10-15  Charlie Zender  <zender@uci.edu>

	* Handle control characters slightly better XML mode

	* Add CDL tags <group>, isUnlimited, <values>. XML dumping is mostly complete.

2013-10-10  Charlie Zender  <zender@uci.edu>

	* Document -m -M -H

	* Treat PRN_VAR_DATA as CPY_VAR_DATA in ncks in.nc out.nc

	* Treat PRN_[GLB,VAR]_METADATA as CPY_[GLB,VAR]_METADATA in ncks in.nc out.nc

2013-10-09  Charlie Zender  <zender@uci.edu>

	* Document HDF4, --hdf4 switch

	* Add ncecat regression test of concatenating variables with different IDs

	* Re-add nco_var_mtd_refresh() to ncecat main loop

	* Fix cppcheck error using sng_val_sng as sprintf() parameter and destination

2013-10-08  Charlie Zender  <zender@uci.edu>

	* Clear garbage from stdin with safe method, not fflush(stdin)

	* Close fp_in file resource for MFOs reading fl_in lists from files

	* Received cppcheck static analysis check from dcb314
	Fixed three fprintf() formatting problems, one resource leak, one
	undefined behavior, one misuse of C++ vector .empty(), one
	potential NULL-deference.

2013-10-06  Charlie Zender  <zender@uci.edu>

	* Too many special cases so copy Unidata escaped_name() list

	* Fix ncpdq regression failures caused by --hdf being interpreted
	as --hdf4 (a new option) not --hdf_upk (the intended option).

	* CDL-mode prints CDL-compatible group/variable/dimension/attribute names
	Special characters in these names are now backslash-protected

2013-10-05  Charlie Zender  <zender@uci.edu>

	* Wrote nm2sng_cdl() to CDL-ize variable/dimension/attribute names

	* ncrename and ncatted do not work on HDF4 files because they
	attempt to modify the file on disk. netCDF4 cannot directly modify
	an HDF4 file. Rather, netCDF4 can read HDF4 files through the API.
	All other operators work because they construct the output file
	through the API. They never directly modify the HDF4 file.
	ncrename and ncatted, on the other hand, always attempt to
	directly modify the HDF4 file. The solution would be to make the
	--hdf4 switch trigger an API-based copy in ncrename and ncatted.

	* All operators with --hdf4 (except ncrename and ncatted) appear to work with HDF4 files

	* Add arithmetic functions for NC_BYTE and NC_UBYTE

2013-10-04  Charlie Zender  <zender@uci.edu>

	* Add --hdf4 switch to all operators except ncrename and ncatted

	* ncbo --hdf4 does arithmetic on (some) HDF4 files correctly!

	* ncks --hdf4 prints and writes (some) HDF4 files correctly!

	* Add --hdf4 flag to prevent NCO from interrogating compression/chunking on HDF4 files

	* First builds with --enable-hdf4

	* Skeleton nces loops

	* Support CF versioning in ncdismember

2013-10-03  Charlie Zender  <zender@uci.edu>

	* Add nces stubs to ncra.c

	* Tidy ncra.c

	* Document --mrd

	* Add --mrd = --multiple_record_dimension switch to allow ncecat,
	ncpdq to increase number of record dimensions in a variable as a
	natural or incidental consequence of processing netCDF4 files

2013-10-02  Charlie Zender  <zender@uci.edu>

	* cd ~/nco;cvs commit -m "Snapshot after move to Allura"
	cvs tag -c nco-4_3_7_postallura

	* Move SF NCO repository to Allura

	* cd ~/nco;cvs commit -m "Snapshot before move to Allura"
	cvs tag -c nco-4_3_7_preallura

2013-09-27  Charlie Zender  <zender@uci.edu>

	* NCO 4.3.6 release procedure:
 	Changes since nco-4_3_5: --flt, ncpdq/ncecat 1 rec dmn, ncwa/ncea fixes
	cd ~/nco;cvs tag -d nco-4_3_6;cvs tag -d nco-4_3_6-1
	cd ~/nco;cvs commit -m "Preparing nco-4.3.6 release"
	cvs tag -c nco-4_3_6;cvs tag -c nco-4_3_6-1

	* Add mdl_1.cdl

2013-09-26  Pedro Vicente  <pvicente@uci.edu>

	* ncwa: Add support for weights and masks per group. Regressions #49, #50

2013-09-26  Charlie Zender  <zender@uci.edu>

	* Document ncdismember and CF-compliance checker

2013-09-24  Pedro Vicente  <pvicente@uci.edu>

	* Add ncwa test #29 Weights and hyperslabs

2013-09-24  Charlie Zender  <zender@uci.edu>

	* Add dismember example to manual

	* Add --flt option to ncra.c (had forgotten it before)

2013-09-23  Pedro Vicente  <pvicente@uci.edu>

	* Add ncra test #29 Group with 2 record dimensions made with ncecat, reverted to 1 record with ncpdq

2013-09-23  Charlie Zender  <zender@uci.edu>

	* Change test DAP server from http://motherlode.ucar.edu:8080/thredds/dodsC/testdods/
	to http://thredds-test.ucar.edu/thredds/dodsC/testdods/

	* Add reference list of publications acknowledging NCO

2013-09-22  Charlie Zender  <zender@uci.edu>

	* No 4.3.5 Ubuntu packages built because mysterious bug where
	nc_rename_grp() symbol cannot be found in library. Stumped me.

	* NCO 4.3.5 release procedure:
 	Changes since nco-4_3_4: ncea/ncra/ncrcat groups, --dbl, ncwa hyp/avg, ncpdq rvr
	cd ~/nco;cvs tag -d nco-4_3_5;cvs tag -d nco-4_3_5-1
	cd ~/nco;cvs commit -m "Preparing nco-4.3.5 release"
	cvs tag -c nco-4_3_5;cvs tag -c nco-4_3_5-1

	* This is the second release tagged as 4.3.5 and fixes the ncecat
	problem and a memory problem with -X.

	* Releasing late on Friday actually worked well because we found
	and fixed the problem Saturday. Able to re-release on Sunday
	before people got back to work Monday. Sourceforge reported no
	downloads from Friday-Sunday.

2013-09-20  Charlie Zender  <zender@uci.edu>

	* NCO 4.3.5 release procedure: Followed but WW found ncecat problem next day

	* Move nc_rename_grp() stub prototype

	* Reminder that some time about a week ago Pedro fixed a bug in
	how ncpdq performs dimension reversal. Apparently dimension
	reversal was broken in group files since 4.3.2?

	* Write random walk description of precision degradation

2013-09-18  Pedro Vicente  <pvicente@uci.edu>

	* Add ncra regressions #27,28 2 records to process in 2 groups (do record and variables in group)

2013-09-18  Charlie Zender  <zender@uci.edu>

	* Add --flt and --rth_flt switches for symmetry to --dbl and --rth_dbl

2013-09-17  Pedro Vicente  <pvicente@uci.edu>

	* Add ncra regressions #25,26 2 records to process in 2 groups (do record in group only)

2013-09-17  Charlie Zender  <zender@uci.edu>

	* GPE operations allow netCDF3 output from netCDF4 input when
	groups are not required in the output file. This allows GPE
	flattening to directly create netCDF3 classic files for backward
	compatibility.

2013-09-12  Charlie Zender  <zender@uci.edu>

	* Finish documentation on type conversion, precision, and --dbl

2013-09-11  Pedro Vicente  <pvicente@uci.edu>

	* Add ncra regression #24 (records, group case)

2013-09-10  Charlie Zender  <zender@uci.edu>

	* Document groups for ncea, ncra, ncrcat

	* Stop nco.texi from triggering texinfo.tex bug just fixed by Karl Berry
	Bug not present in texinfo.tex version 2008-04-18.10 (used by Ubuntu 13.04)
	Bug     present in texinfo.tex version 2013-02-01.11 (used by FC19)
	Real fix:  install texinfo.tex version 2013-09-11+ (committed by Karl)
	Workaround is to remove apostrophe from manual title in "User's Guide"
	Workaround done to preserve build compatibility with broken texinfo.tex
	nco/autobld/texinfo.tex is now fixed version

2013-09-09  Charlie Zender  <zender@uci.edu>

	* Move table of contents from bottom to top of documentation

2013-09-08  Charlie Zender  <zender@uci.edu>

	* Verify new --dbl switch solves thermonuclear ncwa issue reported
	by Lori Sentman, Mark Flanner, and Gary Strand.
	Proof is in ~/netcdf_examples/bugs/ncwa_3528514/tst_gavg_nco.sh

2013-09-07  Pedro Vicente  <pvicente@uci.edu>

	* Add ncks regression #70, #71 (limits, group case)

2013-09-06  Charlie Zender  <zender@uci.edu>

	* Document Arithmetic Convention

	* Add new global variable nco_rth_cnv for Arithmetic Convention

2013-09-05  Pedro Vicente  <pvicente@uci.edu>

	* Add ncrcat regression #22 (group case)

	* Add ncea regression #11 (group case)

2013-09-05  Charlie Zender  <zender@uci.edu>

	* Get ncra.c OpenMP to compile. netCDF4 group traversal OpenMP needs testing.

	* ncra.c whitespace changes

2013-09-04  Pedro Vicente  <pvicente@uci.edu>

	* Add ncra regression #23 (group case)

2013-09-04  Charlie Zender  <zender@uci.edu>

	* Add tpt_flt and tpt_dbl to in.nc to demonstrate precision issues

2013-08-29  Charlie Zender  <zender@uci.edu>

	* nco_xtr_mk() correctly matches variable names that are proper subsets of ancestor group names

2013-08-28  Pedro Vicente  <pvicente@uci.edu>

	* Add in_grp_3.cdl group data for ncra testing

2013-08-27  Pedro Vicente  <pvicente@uci.edu>

	* Add ncwa test #41 Retain degenerate dimensions (one variable)

	* Add ncwa test #42 Retain degenerate dimensions (all variables)

	* nco_dmn_avg_mk() Build dimensions to average array from input dimension names

	* nco_dmn_out_mk() Build dimensions array to keep on output

	* nco_dmn_id_mk() Mark flag average for all dimensions that have the input ID

2013-08-27  Charlie Zender  <zender@uci.edu>

	* Restore history attribute to ncwa, consolidate global attribute copying

	* Build and successfully test GIT-tree versions of libnetcdf.a and libnetcdff.a

	* Fix memory leak in strcasecmp.c

	* Never build private version of strcasecmp() with g++

2013-08-11  Charlie Zender  <zender@uci.edu>

	* Verify that mysterious ncks whitespace printing bug related to shared libraries

2013-08-08  Charlie Zender  <zender@uci.edu>

	* Cleanup ncflint

	* Ensure all @item's have text on same line for texi2dvi backwards compatibility

2013-08-07  Charlie Zender  <zender@uci.edu>

	* Edit Wenshan's CMIP5 documentation

	* Print file summary in CDL-mode when dbg_lvl >= 1

2013-08-06  Charlie Zender  <zender@uci.edu>

	* Integrate Wenshan's CMIP5 documentation into nco.texi

	* Add missing semi-colon to nco_mmr.c line 520 so Cygwin can build

	* Tweak attribute indentation with -5 printing and prn_flg->trd

2013-08-05  Charlie Zender  <zender@uci.edu>

	* Add g3 and g5 to mimic CMIP5 problems in in_grp.cdl

2013-08-02  Charlie Zender  <zender@uci.edu>

	* Compound dimension functionality

2013-08-01  Charlie Zender  <zender@uci.edu>

	* Add stubs for printing braces for compound variables

	* Document ncrename -g

	* Document ncks -5 option for PRN_NEW_FORMAT

	* FC19 will not build current nco.texi, but Ubuntu will. Not sure why.
	Until fixing this, all documentation must be built on Ubuntu.

2013-07-31  Charlie Zender  <zender@uci.edu>

	* NCO 4.3.4 release procedure:
 	Changes since nco-4_3_3: CDL legibility, ncpdq -U fix, --hdf_upk
	cd ~/nco;cvs tag -d nco-4_3_4;cvs tag -d nco-4_3_4-1
	cd ~/nco;cvs commit -m "Preparing nco-4.3.4 release"
	cvs tag -c nco-4_3_4;cvs tag -c nco-4_3_4-1

	* Document and test --hdf_upk in all other applicable operators

	* Add ncpdq regression test to re-pack 1D variable from HDF convention to netCDF convention

	* Move header information from nco_netcdf.c to nco_netcdf.h

	* Tidy UDUnits parsing/handling code

	* Standardize UDUnits code on opaque return values, not shell return values

2013-07-29  Charlie Zender  <zender@uci.edu>

	* ncpdq unpacking is broken in 4.3.2-4.3.3 because packing attributes are still written

	* Explode CDL printing of NC_CHAR attributes that contain embedded newlines

	* --hdf_upk flag uses HDF unpack convention: unpacked=scale_factor*(packed-add_offset)

2013-07-26  Charlie Zender  <zender@uci.edu>

	* Document MSA user-ordering --msa_usr_rdr with longitude rotation example

2013-07-25  Charlie Zender  <zender@uci.edu>

	* Update old cruft in index.shtml

	* Fix nco_md5_ini() prototype

	* Fix const'ness of nco_cmp_crd_dpt()

	* Apparently C++ (or at least g++) always provides strcasestr()

	* Restore rnd_nbrf() prototype in nco_rth_flt.h

	* Tighten prototypes in nco_sng_utl.h

2013-07-24  Charlie Zender  <zender@uci.edu>

	* Conceal math float definitions in nco_rth_flt.h from LINUXAMD64 to allow yellowstone g++ to build ncap2

	* NCO 4.3.3 release procedure:
 	Changes since nco-4_3_2: CDL, XML, ncrename/ncwa groups
	cd ~/nco;cvs tag -d nco-4_3_3;cvs tag -d nco-4_3_3-1
	cd ~/nco;cvs commit -m "Preparing nco-4.3.3 release"
	cvs tag -c nco-4_3_3;cvs tag -c nco-4_3_3-1

	* Modernize configure.ac and Makefile.am as per automake/autoconf recommendations

	* Rename configure.in to configure.ac

	* Add autobld/test_driver (created with automake --add-missing)

	* Rewrite MD5 infrastructure the right way, i.e., like GPE: use/pass dynamic structures

2013-07-24  Pedro Vicente  <pvicente@uci.edu>

	* Add in_grp_3.cdl group data for ncwa testing

	* Add ncwa test #41 (Groups) Dimension reduction with min flag on type float variable
	* Add ncwa test #42 (Groups) Dimension reduction on type double variable with max switch and missing values
	* Add ncwa test #43 (Groups) Dimension reduction on type double variable
	* Add ncwa test #44 (Groups) rms with weights

2013-07-24  Charlie Zender  <zender@uci.edu>

	* Adhere to hdr_pad option when using ncpdq for packing

	* Place MD5 flags in md5_flg structure

	* Get ncwa OpenMP to compile. netCDF4 group traversal OpenMP needs testing.

	* Document new ncatted, ncrename, ncks, ncwa features in man pages, nco.texi

2013-07-23  Charlie Zender  <zender@uci.edu>

	* ncrename -g works when linked to new libnetcdf nc_rename_grp() function

	* ncks now writes MD5 attributes with --md5 -D 6+ to netCDF4 files

	* CDL mode prints NC_STRING's and arrays of NC_STRING correctly,
	in both attributes and data sections. CDL mode appears to be ready.

	* ncatted: Works with single NC_STRING's (previous versions of
	ncatted completely and utterly fail with all NC_STRINGs).
	Still fails on NC_STRING arrays because parser is not smart.

	* ncatted: Fix ambigous interpretation of type specifications

	* ncatted: Clarify netCDF4 atomic type specifications

	* CDL mode prefix NC_STRING attributes with "string "

	* CDL mode add double quotes to printing NC_STRING attributes

2013-07-22  Charlie Zender  <zender@uci.edu>

	* Add ncrename stubs and docs for libnetcdf version of nc_rename_grp()

2013-07-22  Pedro Vicente  <pvicente@uci.edu>

	* nco_dmn_trv_msa() Update dimension with hyperslabed size

	* nco_dmn_trv_msa_tbl() Update all GTT dimensions with hyperslabed size

	* nco_dmn_msa_tbl() Update GTT dimension with hyperslabed size

	* nco_prn_var_dfn() Print variable metadata; modified to use hyperslabed sizes

2013-07-19  Charlie Zender  <zender@uci.edu>

	* XML mode (with --xml) prints all test cases at least as well as ncdump -x

	* Fix bad memory dereference in nco_prn_var_val_trv()

2013-07-19  Henry Butowsky  <henryb@hush.com>

        * Added custom masking function for 2D vars:
	mask_out=imask_make(var_in,lat,lon)
	mask_out is a 0/1 mask of grid points whose value in var_in is missng_value but
	have an adjacent neighbour whose value is NOT missing
        var_out=imask_fill(var_in.mask_out,lat,lon)
        Points in var_in are filled if they are missing AND are specified in mask_out.
        Fill value is average of nearest neigbours in input, but if neighbour was
	just been filled then its value is NOT used in the calculation of the average.

2013-07-18  Pedro Vicente  <pvicente@uci.edu>

	* nco_dmn_avg_tbl() Transfer averaged dimensions information into GTT (-a for ncwa)

2013-07-18  Charlie Zender  <zender@uci.edu>

	* CDL mode prints all test cases at least as well as ncdump

	* Switch attribute NC_CHAR printing to chr2sng_cdl() infrastructure

	* Added chr2sng_cdl() so CDL mode prints control sequences visibly

	* CDL mode works on zero and one-dimension arrays of NC_CHAR strings

	* CDL mode works with GPE transformations with constant group level, e.g.,
	ncks --cdl -O -G f1:1 -g g1 ~/nco/data/in_grp.nc
	GPE transformations that alter group level are incorrectly sorted, indented, and braced

	* Create nco_gpe_evl_stb() to easily print GPE-transformed group stubs

	* Move GPE to pre-fl_out code so CDL mode can use it

	* Fix string and string-array printing for NC_STRING

	* Ooops, CDL mode always prints on-disk dimension sizes even when hyperslabbing

2013-07-17  Charlie Zender  <zender@uci.edu>

	* Document ncks --cdl switch. texi2dvi nco.texi works on Ubuntu, fails on Fedora

	* Change DDRA to print to stderr not stdout to simplify CDL mode

	* Fix dimension name printed in compact lists due to mis-nested indices

	* Implement CDL user switch --cdl

	* CDL output is more compact (less unnecessary information) than ncdump

	* Successful CDL output by ncks and conversion by ncgen

	* Tidy ncoGrammer.g

2013-07-16  Charlie Zender  <zender@uci.edu>

	* Mark extracted dimensions with nco_xtr_dmn_mrk()

	* Isolate nco_xtr_grp_mrk() from nco_xtr_dfn()

	* New MSVC macros for isinf(), isfinite(), isnan()"

	* CDL mode prints all floating point values correctly

	* Variable number of trailing zeros implemented with sng_trm_trl_zro()

	* Isolate MSVC definitions and macros in nco_rth_flt.h

2013-07-15  Charlie Zender  <zender@uci.edu>

	* sng_trm_trl_zro() trims trailing zeros

	* CDL mode works for non-char variables for attributes, dies for float attributes

2013-07-15  Pedro Vicente  <pvicente@uci.edu>

	* Add in_grp_3.cdl group data for ncwa testing

	* nco_var_get_trv() Fill-in variable structure for weighting variable "var_nm"

2013-07-12  Charlie Zender  <zender@uci.edu>

	* CDL mode for variable shape and attributes mostly works

	* Implement CDL mode in variable header in nco_prn_var_dfn()

	* Fix printing so only extracted sub-groups show up

	* Remaining issues include self-consistent group flg_xtr, also broken with old method

2013-07-11  Charlie Zender  <zender@uci.edu>

	* Debian Mayhem project reported five bugs due to unsanitized input:
	716127 (ncflint), 716128 (ncap), 716129 (ncap2), 716506 (ncbo), and 716602 (ncecat)
	Each bug causes a core dump rather than a clean exit(EXIT_FAILURE)
	Fixed four of these by checking return values on strchr()
	ncap2 bug triggered _inside_ strtoul() so hard to fix

	* New indentation works well enough. Begin implementing CDL option.

	* Strip all tabs and extra vertical space, ready to design new indentation

	* New print format almost glitch-free, old format intact, regressions all pass

2013-07-10  Charlie Zender  <zender@uci.edu>

	* nco_grp_prn() prints variables by group, with OK formatting

	* Tidy ncbo.c, nco_grp_utl.c

	* Introduce print flag structure prn_sct prn_flg in ncks

2013-07-09  Charlie Zender  <zender@uci.edu>

	* netCDF3 stubs for nco_inq_grp_parent(), nco_inq_grp_parent_flg()
	return NC_ENOGRP rather than NC_NOERR or assert(0)

	* Eliminate nc_id argument to nco_prn_att()

	* First version of group-recursive printer nco_grp_prn()
	Routine is cornerstone of more flexible print output formatting

2013-07-06  Pedro Vicente  <pvicente@uci.edu>

	* Add in_grp_3.cdl group data for ncpdq testing

	* Add ncpdq test #40 (Groups) Pack and then unpack scalar
	* Add ncpdq test #41 (Groups) Unpack 1D variable with MSA

2013-07-05  Charlie Zender  <zender@uci.edu>

	* NCO 4.3.2 release procedure:
 	Changes since nco-4_3_1: -X aux, ncflint/ncpdq -g -G --unn
	cd ~/nco;cvs tag -d nco-4_3_2;cvs tag -d nco-4_3_2-1
	cd ~/nco;cvs commit -m "Preparing nco-4.3.2 release"
	cvs tag -c nco-4_3_2;cvs tag -c nco-4_3_2-1

	* Implement/fix GPE in ncflint, ncpdq, ncecat

	* Implement --union, --intersection, GRP_VAR_UNN in ncflint, ncpdq

2013-07-04  Pedro Vicente  <pvicente@uci.edu>

	* Add in_grp_3.cdl group data for ncpdq testing

	* Add ncpdq test #39 (Groups) Re-order 2D variable with record (no -C, MSA)

2013-07-03  Pedro Vicente  <pvicente@uci.edu>

	* Add ncpdq test #38 (Groups) Re-order 2D variable with record (-C, MSA)

2013-07-02  Pedro Vicente  <pvicente@uci.edu>

	* Add in_grp_3.cdl group data for ncpdq testing
	* Add ncpdq test #36 (Groups) Re-order 2D variable with record (-C, no MSA)
	* Add ncpdq test #37 (Groups) Re-order 2D variable with record (no -C, no MSA)

2013-07-01  Pedro Vicente  <pvicente@uci.edu>

	* Add in_grp_3.cdl group data for ncpdq testing

	* Add ncpdq test #32 (Groups) Re-order 2D variable (-C, no MSA)
	* Add ncpdq test #33 (Groups) Re-order 2D variable (no -C, no MSA)
	* Add ncpdq test #34 (Groups) Re-order 2D variable (no -C, MSA)
	* Add ncpdq test #35 (Groups) Re-order 2D variable (-C, MSA)

2013-06-29  Charlie Zender  <zender@uci.edu>

	* Add -G, --gpe, --unn to ncpdq documentation

2013-06-28  Pedro Vicente  <pvicente@uci.edu>

	* nco_lst_dmn_mk_trv() Build Name-ID array from input dimension names

	* nco_var_dmn_scp() Variable has dimensions in scope of GTT dimension

2013-06-27  Pedro Vicente  <pvicente@uci.edu>

	* Add ncpdq test #24 Re-order several variables

2013-06-27  Pedro Vicente  <pvicente@uci.edu>

	* Add group use case for ncpdq in in_grp_3.cdl.

2013-06-25  Charlie Zender  <zender@uci.edu>

	* Mention implications of type promotion in memory requirements

	* Add Yellowstone default /ncar/opt/hpss/hsi to list of HSI search paths

	* Add NCO_MMR_DBG infrastructure for nco_malloc()
	Does not (yet) report requests made with nco_malloc_flg() and nco_malloc_dbg()
	export NCO_MMR_DBG=1;ncea -O -D 3 -d time,0,2 -p ~ big_bug5.nc ~/big_avg.nc

	* Replace many hardcoded dbg_lvl's with symbolic names

2013-06-24  Charlie Zender  <zender@uci.edu>

	* Prevent overwriting global attributes (like history) in ncecat, ncflint, ncpdq

2013-06-23  Charlie Zender  <zender@uci.edu>

	* Add nco_prc_stt_get() and nco_prc_stm_get() to poll /proc/PID/stat and /proc/PID/statm

2013-06-23  Pedro Vicente  <pvicente@uci.edu>

	* nco_var_dmn_rdr_mtd_trv() Determine and set new dimensionality in metadata of each re-ordered variable

	* nco_var_dmn_rdr_val_trv() Change dimension ordering of variable values

2013-06-22  Pedro Vicente  <pvicente@uci.edu>

	* Add ncpdq test #24 Reverse/Re-order 4D variable -a lev,time,-lon,-lat -v four_dmn_rec_var (MSA)
	* Add ncpdq test #25 Re-order all variables -a lat,time (MSA)

2013-06-21  Pedro Vicente  <pvicente@uci.edu>

	* Add ncpdq test #19 Reverse/Re-order 3D variable -a -lat,-time -v three_dmn_var_dbl
	* Add ncpdq test #20 Re-order several variables -a lat,time -v ty,three_dmn_rec_var (no MSA) Test 1
	* Add ncpdq test #21 Re-order several variables -a lat,time -v ty,three_dmn_rec_var (no MSA) Test 2
	* Add ncpdq test #22 Re-order several variables -a lat,time -v ty,three_dmn_rec_var (MSA) Test 1
	* Add ncpdq test #23 Re-order several variables -a lat,time -v ty,three_dmn_rec_var (MSA) Test 2

2013-06-19  Pedro Vicente  <pvicente@uci.edu>

	* Add ncpdq test #6 Re-order 3D variable with MSA -C -a lat,lon,time -v three_dmn_var_dbl
	* Add ncpdq test #7 Re-order 3D variable with MSA (stride) -a lat,lon,time -v three_dmn_var_dbl

2013-06-19  Charlie Zender  <zender@uci.edu>

	* Fix /proc/self/stat read types and add human-readable sizes for failed memory requests

2013-06-18  Pedro Vicente  <pvicente@uci.edu>

	* Add ncpdq test #13  Re-order 2D variable with record (-C, no MSA) -v two_dmn_rec_var -C -a lev,time
	* Add ncpdq test #14  Re-order 2D variable with record (no -C, no MSA) -v two_dmn_rec_var -a lev,time
	* Add ncpdq test #15  Re-order 2D variable with record (-C, MSA) -v two_dmn_rec_var -a lev,time
	* Add ncpdq test #16  Re-order 2D variable with record (no -C, MSA) -v two_dmn_rec_var -a lev,time

2013-06-17  Pedro Vicente  <pvicente@uci.edu>

	* Add ncpdq test #10  Re-order 2D variable (no -C, no MSA) -v two_dmn_var -a lev,lat
	* Add ncpdq test #11  Re-order 2D variable (-C, MSA) -v two_dmn_var -a lev,lat -d lat,1,1 -d lev,1,1
	* Add ncpdq test #12  Re-order 2D variable (no -C, MSA) -v two_dmn_var -a lev,lat -d lat,1,1 -d lev,1

	* nco_var_prc_msa_trv() Transfer MSA sizes from GTT to processed variables

	* nco_dmn_rdr_trv() Transfer dimension structures to be re-ordered (ncpdq) into GTT

	* nco_dmn_rdr_xtr() Form list of re-ordering dimensions from extracted input dimensions (ncpdq)

	* nco_dmn_lst_ass_var_trv() Create list of all dimensions associated with input variable list (ncpdq only)

	* nco_dmn_lst_ass_var_nbr_trv() Find number of dimensions associated with variables to be extracted (ncpdq only)

2013-06-17  Charlie Zender  <zender@uci.edu>

	* Implement robust Linux memory usage by polling /proc/self/stat with ncks --sysconf

	* Include <unistd.h> in nco_mmr.h for accessing sysconf() to get page size

2013-06-07  Charlie Zender  <zender@uci.edu>

	* Changes for Fedora Core 18 RPM compatibility

2013-06-05  Charlie Zender  <zender@uci.edu>

	* Tidy/fix ncflint OpenMP build. Tidy ncpdq.

2013-05-29  Pedro Vicente  <pvicente@uci.edu>

        * Add data/in_1.cdl, data/in_2.cdl CDL files to test 2 input file operators

2013-05-15  Pedro Vicente  <pvicente@uci.edu>

        * nco_cpy_fix_var_trv() Copy fixed variables from input to output file

2013-05-08  Pedro Vicente  <pvicente@uci.edu>

        * nco_var_trv() Fill-in variable structure for a named GTT variable

2013-05-09  Pedro Vicente  <pvicente@uci.edu>

        * ncflint test #6,7 --fix_rec_crd

2013-05-08  Pedro Vicente  <pvicente@uci.edu>

        * trv_tbl_mrk_typ() Mark output netCDF type in GTT

2013-05-07  Pedro Vicente  <pvicente@uci.edu>

        * ncflint test #5 Group weight 1D variable

        * nco_get_typ() Obtain netCDF type to define variable from NCO program ID

2013-05-07  Charlie Zender  <zender@uci.edu>

	* Document new ncflint, ncbo capabilities

2013-05-06  Pedro Vicente  <pvicente@uci.edu>

        * nco_fll_var_trv() Fill-in variable structure list for all extracted variables

2013-05-03  Pedro Vicente  <pvicente@uci.edu>

        * nco_bld_aux_crd() Parse auxiliary coordinates

        * ncks test #69 Parse auxiliary coordinates

2013-05-01  Charlie Zender  <zender@uci.edu>

	* Add byte arrays to in.cdl

	* NCO 4.3.1 release procedure:
 	Changes since nco-4_3_0: ncbo -G, --unn, symmetric, grp_brd
	cd ~/nco;cvs tag -d nco-4_3_1;cvs tag -d nco-4_3_1-1
	cd ~/nco;cvs commit -m "Preparing nco-4.3.1 release"
	cvs tag -c nco-4_3_1;cvs tag -c nco-4_3_1-1

	* Update Makefiles to build without failing new CDL files

2013-04-29  Charlie Zender  <zender@uci.edu>

	* Move buggy CDL code from in_grp.cdl to buggy.cdl

2013-04-28  Charlie Zender  <zender@uci.edu>

	* Use realistic temperatures in obs.cdl, cmip5.cdl

	* GCC 4.7.3 finally includes strcasestr() in string.h, I think

2013-04-26  Charlie Zender  <zender@uci.edu>

	* Document new ncbo, ncecat, group broadcasting features

2013-04-24  Charlie Zender  <zender@uci.edu>

	* ncrcat: Fix false positives on non-monotonicity checks in rec_crd_chk()
	by only checking monotonicity of first record coordinate encountered.

	* ncecat: Tidy OpenMP

2013-04-24   Pedro Vicente  <pvicente@uci.edu>

        * trv_tbl_mrk_prc_fix() Mark fixed/processed flag in table

        * ncecat test #6,7,8 Concatenate variables/groups: 1D,2D variables

2013-04-23   Pedro Vicente  <pvicente@uci.edu>

        * ncecat test #4,5 Concatenate variables/groups: scalars

2013-04-22  Charlie Zender  <zender@uci.edu>

	* ncecat: Tidy OpenMP

	* Document new ncbo, ncecat features

	* Document group broadcasting

2013-04-19  Charlie Zender  <zender@uci.edu>

	* ncatted: Fix passing NULL to strcmp() in netCDF4 code path.
	Bug identified and fix provided by Etienne Tourigny.

2013-04-17  Pedro Vicente  <pvicente@uci.edu>

        * nco_prc_cmn_nm() Process common objects

        * nco_cmn_nm_prt() Print list of common objects (same absolute path)

        * trv_tbl_mch() Match 2 tables (find common objects) and export common objects;
        previously object processing was done in this function, but now the list of common names
        is exported for use in operators other than ncbo

2013-04-16  Pedro Vicente  <pvicente@uci.edu>

        * nco_get_rec_dmn_nm() Return array of record names

2013-04-11  Pedro Vicente  <pvicente@uci.edu>

	* Add cmip5_1.cdl obs_1.cdl

        * ncbo test #22; Process relative match from model to observations cmip5_1.nc -> obs_1.nc

        * ncbo test #23; Process relative match from observations to model obs_1.nc -> cmip5_1.nc

2013-04-10  Pedro Vicente  <pvicente@uci.edu>

	* trv_tbl_rel_mch()  Relative match of object in table 1 to table 2

	* ncbo test #21; Relative match of object in table 1 to table 2

2013-04-09  Pedro Vicente  <pvicente@uci.edu>

	* gpe_chk() Check valid GPE new name

	* pck_cpy_attr() Inquire about copying attributes "scale_factor", "add_offset"

2013-04-08  Charlie Zender  <zender@uci.edu>

	* Add in_grp_[12].nc

2013-04-06  Pedro Vicente  <pvicente@uci.edu>

	* trv_tbl_prc() Match different types for processed objects

	* ncbo test #20; Match different types for processed objects

2013-04-03  Pedro Vicente  <pvicente@uci.edu>

	* trv_tbl_prc() Process common objects

	* trv_tbl_fix() Copy processing type fixed object

	* Add ncbo test #19; Copy associated coordinates as non processed

2013-03-29  Charlie Zender  <zender@uci.edu>

	* ncbo: now almost commutative w/r/t variable rank fixes TODO nco552

2013-03-28  Charlie Zender  <zender@uci.edu>

	* Clarify DAP server errors

	* ncbo: document GPE and --union

	* ncbo: Implement GPE

	* ncbo: Implement --union/--intersection switch

	* Fix ncbo bug: unswap CNV_CCM_CCSM_CF and FIX_REC_CRD arguments to trv_tbl_mch()
	http://nco.sf.net#bug_ncbo_ccm_ccsm_cf

	* NCO 4.3.0 release procedure:
 	Changes since nco-4_2_6: ncbo -g, ncatted NULs, ncap2 rounding
	cd ~/nco;cvs tag -d nco-4_3_0;cvs tag -d nco-4_3_0-1
	cd ~/nco;cvs commit -m "Preparing nco-4.3.0 release"
	cvs tag -c nco-4_3_0;cvs tag -c nco-4_3_0-1

	* Document one-hundred thousand file ncecat example

2013-03-28  Pedro Vicente  <pvicente@uci.edu>

	* Add ncbo test #15,16,17,18; Group addition, subtraction, multiplication, division, with limits

2013-03-27  Charlie Zender  <zender@uci.edu>

	* nco.texi: clarify why -O --no_tmp_fl in.nc in.nc _does not work_

	* Replace ?lround?() with ?lrint?() in internal NCO rounding
	Halfway cases that were rounded away from zero will now round to nearest even integer

	* Add lrint(), lrintf(), llrint(), llrintf() definitions

	* Fix/revert ncatted to not NUL-terminate attributes

2013-03-27  Pedro Vicente  <pvicente@uci.edu>

	* Enable nearbyint(), rint(), round(), trunc() for MSVC

	* Add ncbo test #14; Group addition

2013-03-26  Charlie Zender  <zender@uci.edu>

	* ncks: always copy group and variable metadata (fixes bug introduced in 4.2.6)

	* Re-activate ncap/ncap2 rounding functions: nearbyint(), rint(), round(), trunc()

	* Implement source code for nearbyint(), rint(), round(), trunc()

	* Add configure checks for nearbyint(), rint(), round(), trunc()

2013-03-22  Pedro Vicente  <pvicente@uci.edu>

	* ncbo: nco_var_op_typ() Find operation type on variable, fixed or processed

	* ncbo: nco_msa_var_get_trv() Get variable data from disk taking account of multihyperslabs

	* ncbo: trv_tbl_mch() Match 2 tables (find common objects) and process common objects

2013-03-20  Charlie Zender  <zender@uci.edu>

	* ncecat: insert stubs for netCDF4 RECORD_AGGREGATE

2013-03-19  Pedro Vicente  <pvicente@uci.edu>

	* ncbo: nco_dmn_ass_var_trv() creates list of dimensions associated with input
	variable list by marking flg_ass_var in	unique dimension list

2013-03-19  Charlie Zender  <zender@uci.edu>

	* NCO 4.2.6 release procedure:
 	Changes since nco-4_2_5: --rec_apn, non-atomics, --fix_rec_crd, scope
	cd ~/nco;cvs tag -d nco-4_2_6;cvs tag -d nco-4_2_6-1
	cd ~/nco;cvs commit -m "Preparing nco-4.2.6 release"
	cvs tag -c nco-4_2_6;cvs tag -c nco-4_2_6-1

2013-03-16  Pedro Vicente  <pvicente@uci.edu>

	* ncks -O -v two_dmn_rec_var ~/nco/data/in_grp.nc ~/foo.nc;ncks ~/foo.nc
        exposes TODO nco1091, a possible netCDF/HDF bug---duplicate dimension IDs are generated
        Seems to occur if dimension the same name when defined in a group and its ancestor group
        C program that reproduces it, using only netCDF API calls, in
	http://glace.ess.uci.edu/libs/netcdf/257980

2013-03-13  Pedro Vicente  <pvicente@uci.edu>

	* configure: detect Mac OS MacPorts netCDF library

2013-03-11  Charlie Zender  <zender@uci.edu>

	* ncecat remove lmt_all structure code from GAG branch

	* ncecat warn when automatically generated GPE paths conflict during GAG

	* Verify ncks dumps many NASA HDF5 and HDF-EOS5 files, though no HDF4 or HDF-EOS2 files

	* Clarify NC_ENOTNC and NC_ENOTBUILT errors

2013-03-10  Pedro Vicente  <pvicente@uci.edu>

	* Regression tests for order coordinates by group depth and "out of scope" coordinate

	* nco_cmp_crd_dpt() Compare coordinate structures by group depth

2013-03-08  Pedro Vicente  <pvicente@uci.edu>

	* Add regression tests for creation of variables with ancestor group dimensions (GPE, non-GPE)

	* nco_bld_var_dmn() Assign variable's dimensions to either coordinates or dimension structures
	Handle "out of scope" cases as non-assigned coordinate

	* Regression test for coordinate "out of scope" (group depth greater than variable that uses coordinate)

2013-03-08  Charlie Zender  <zender@uci.edu>

	* Implement and test ncflint --fix_rec_crd

2013-03-07  Charlie Zender  <zender@uci.edu>

	* Add hooks for ncflint --fix_rec_crd

2013-03-06  Pedro Vicente  <pvicente@uci.edu>

	* nco_scp_var_crd() Return in scope coordinate for variable

	* nco_bld_var_dmn() Assign variables dimensions to either coordinates or dimension structs

	* nco_get_sls_chr_cnt() Get number of slash characters in a string path

	* nco_get_str_pth_sct() Get full name token structure (path components)

	* Add regression tests for "parallel" scope

2013-03-05  Pedro Vicente  <pvicente@uci.edu>

	* nco_dmn_fll_nm_id() Return unique dimension full name from unique ID

	* nco_dmn_trv_sct() Return unique dimension object from unique ID

2013-03-05  Charlie Zender  <zender@uci.edu>

	* Add record character variables to in.cdl

2013-03-04  Pedro Vicente  <pvicente@uci.edu>

	* nco_bld_dmn_ids_trv() Build dimension info for all variables using unique dimension IDs

	* nco_has_crd_dmn_scp() Is there a variable with same name in dimension's scope?

2013-03-02  Pedro Vicente  <pvicente@uci.edu>

	* nco_xtr_crd_add() Add all coordinates to extraction list
	re-written for GTT instead of using netCDF API calls

2013-02-27  Pedro Vicente  <pvicente@uci.edu>

	* nco_cpy_msa_lmt() Copy MSA structs GTT to local function (print or write)

	* nco_prn_var_dfn() re-written for GTT

	* nco_cnk_sz_set_trv() re-written for GTT

2013-02-26  Charlie Zender  <zender@uci.edu>

	* Add nco_dbg_grp between nco_dbg_scl and nco_dbg_var

	* Improve epitaph from NC_ENOTNC to include diskless/RAM errors

	* ncrename dies more gracefully when required attributes do not exist

2013-02-26  Pedro Vicente  <pvicente@uci.edu>

	* rewrote nco_xtr_cf_prv_add() Add specified CF-compliant coordinates of specified variable to extraction list
    this fixes nco1086, deprecated functions used nco_aux_grp_id(), trv_tbl_fnd_var_nm()
    add regression test ncks#60

	* nco_prt_grp_nm_fll() Debug function to print group full name from ID

2013-02-25  Pedro Vicente  <pvicente@uci.edu>

	* nco_msa_wrp_splt_cpy() Split wrapped dimensions (make deep copy of new wrapped limits)

	* nco_msa_prn_var_val_trv() Print variable data; use GTT to get coordinates;
     this fixes nco1088

	* nco_cpy_var_val_mlt_lmt_trv() Copy variable data from input to output file

2013-02-25  Charlie Zender  <zender@uci.edu>

	* #define NCO_USE_FILL_VALUE before not after #ifdef NCO_USE_FILL_VALUE

2013-02-24  Pedro Vicente  <pvicente@uci.edu>

	* nco_bld_var_dmn() Build variables dimensions information (coordinate variables)

2013-02-23  Pedro Vicente  <pvicente@uci.edu>

	* nco_blb_crd_var_trv() Detect coordinate variables into GTT

	* nco_lmt_evl_dmn_crd() Parse user-specified limits into hyperslab specifications
	Can be used for dimensions or coordinate variables

	* nco_bld_lmt() Assign user specified dimension limits to GTT (Group Traversal Table)

	* ncks: regression test for limits with dimension/non coordinate case

2013-02-22  Charlie Zender  <zender@uci.edu>

	* Implement new nco_cpy_var_dfn() API which uses GPE and nco_inq_dmn_grp_id()
	New routines only called when dbg_lvl=5. Still buggy.
	Old routines, invoked when dbg_lvl != 5, work fine.

2013-02-21  Pedro Vicente  <pvicente@uci.edu>

        * ncks, ncbo, ncecat: aggregate building of GTT (Group Traversal Table) into a function
          nco_bld_trv_tbl(); allocate elements as needed

2013-02-21  Charlie Zender  <zender@uci.edu>

	* Tighten and complete algorithm to identify ancestor groups in nco_xtr_dfn()

2013-02-20  Pedro Vicente  <pvicente@uci.edu>

        * ncks eliminate lmt_all array and replace with GTT (Group Traversal Table)
        nco_cnk_sz_set_trv() set chunksize parameters using object variable

2013-02-20  Charlie Zender  <zender@uci.edu>

	* Die with graceful hint on NC_EFILLVALUE/NC_ELATEFILL errors

2013-02-19  Charlie Zender  <zender@uci.edu>

	* ncrename requires presence of attributes in all variables when attribute is not
 	prefixed with dot, unless attribute is a global	or group attribute.

2013-02-16  Pedro Vicente  <pvicente@uci.edu>

	* ncks eliminate lmt_all array and replace with GTT (Group Traversal Table)
	structure that stores full path names for dimensions and coordinate variables.
	nco_xtr_wrt_trv() writes extracted data to output file
	nco_xtr_dfn_trv() defines extracted groups, variables, and attributes in output file
	nco_prn_var_val_trv() prints variable data

	* ncks limits are stored in the GTT dimension structure and MSA is applied.
	Distribute these to variables when writing with nco_msa_prn_var_val_trv().
	nco_bld_lmt_trv() assigns user specified dimension limits to traversal table dimensions.

2013-02-14  Pedro Vicente  <pvicente@uci.edu>

	* ncks ncks eliminate lmt_all array and replace with GTT (Group Traversal Table)
	nco_bld_crd_var_trv() builds dimension information for all variables
	nco_var_dmn_scp() checks if variable is in dimension scope

	* ncks parses limits from dimension object associated functions:
	nco_bld_lmt_trv() Assign user specified dimension limits to traversal table dimensions

2013-02-13  Charlie Zender  <zender@uci.edu>

	* Copy grp_id_in and grp_id_out elements of traversal table
	variables into nm_id structure to enable MM3->MM4 and MM4->MM3.

2013-02-10  Charlie Zender  <zender@uci.edu>

	* Improve error message when appending variable with rank mismatch

2013-02-09  Charlie Zender  <zender@uci.edu>

	* Reformat metadata printing, include more max. depth, number variable attributes

2013-02-08  Charlie Zender  <zender@uci.edu>

	* Fix overcount of record dimensions

	* Match rx containing slashes to full path not to stub
	This allows rx's like /g11/uint_.+ to succeed
	Previously, rx's only worked on stubs (last components of full names)

	* Re-format global metadata output

	* Add all coordinates necessary to make in_grp.cdl well-defined CF file (i.e., squelch CF warnings)

	* Code to ignore non-atomic types appears to work

	* Add non-atomic types to in_grp.cdl.
	Initializations break ncgen from netCDF prior to ~201211. What to do?

	* Update to netCDF 20130208 snapshot

	* Add support for ignoring (instead of failing on) non-atomic types

2013-02-04  Charlie Zender  <zender@uci.edu>

	* Split ncks dimension report into unique fixed and record dimensions

2013-02-01  Charlie Zender  <zender@uci.edu>

	* Add --rec_apn documentation to nco.texi

2013-01-31  Charlie Zender  <zender@uci.edu>

	* Add --rec_apn regression tests

	* Add --rec_apn to ncra and ncrcat. Makes possible direct appends.

2013-01-29  Charlie Zender  <zender@uci.edu>

	* NCO 4.2.5 release procedure:
 	Changes since nco-4_2_4: fix ncks mk/fix_rec_dmn bugs, metadata printing
	cd ~/nco;cvs tag -d nco-4_2_5;cvs tag -d nco-4_2_5-1
	cd ~/nco;cvs commit -m "Preparing nco-4.2.5 release"
	cvs tag -c nco-4_2_5;cvs tag -c nco-4_2_5-1

2013-01-27  Charlie Zender  <zender@uci.edu>

	* Update documentation to refect new --fix_rec_dmn syntax

	* Fix 4.2.4 bug that broke --fix_rec_dmn

	* Add --fix_rec_dmn regression tests, including netCDF3 test with MM3 workaround

	* Remove tm2_tm3 from in_grp.cdl since ncgen netCDF 4.2.1- chokes on it

	* Allow for --fix_rec_dmn corner case in nco_cpy_rec_var_val(),
	i.e., when variable is record in input but not in output

	* Parse --fix_rec_dmn by prefixing dimension name with "fix_". Kludgy? Yes.

2013-01-26  Charlie Zender  <zender@uci.edu>

	* Remove all record-dimension handling from, and thus dramatically simplify, nco_xtr_dfn()

	* Test and merge nco_cpy_var_dfn() changes to nco_cpy_var_dfn_lmt()

	* ncks only copies global metadata once

	* ncks prints multiple root record dimensions

	* nco_prn_var_dfn() handles multiple record dimensions

	* Add tm2_tm3 to allow netCDF4 regression tests on variables with multiple record dimensions

	* Fix 4.2.4 bug that broke --mk_rec_dmn

	* Smarten nco_cpy_var_dfn() to allow multiple netCDF4 record dimensions

	* Add --mk_rec_dmn regression tests

	* New API: pass rec_dmn_nm to nco_cpy_var_dfn*() only when user-specified

2013-01-25  Charlie Zender  <zender@uci.edu>

	* Remove ENABLE_NETCDF4 from nco_cpy_var_val_lmt()

2013-01-23  Charlie Zender  <zender@uci.edu>

	* Prepare to implement --mk_rec_dmn functionality in nco_xtr_dfn()

2013-01-21  Charlie Zender  <zender@uci.edu>

	* NCO 4.2.4 release procedure:
 	Changes since nco-4_2_3: ncks & ncecat new xtr API, ncra bugfix, ncrename
	cd ~/nco;cvs tag -d nco-4_2_4;cvs tag -d nco-4_2_4-1
	cd ~/nco;cvs commit -m "Preparing nco-4.2.4 release"
	cvs tag -c nco-4_2_4;cvs tag -c nco-4_2_4-1

	* Harmonize printing of netCDF3 and netCDF4 metadata

	* Re-add --mk_rec_dim as synonym for preferred --mk_rec_dmn

2013-01-20  Charlie Zender  <zender@uci.edu>

	* Only print fully-qualified name of variables in non-root groups
	This preserves traditional printing format for netCDF3 files

2013-01-19  Charlie Zender  <zender@uci.edu>

	* Pass CPY_GRP_METADATA _and_ CPY_VAR_METADATA to nco_xtr_dfn()

	* Systematize extraction list function names

	* Remove cruft from nco_grp_utl.[ch]

	* Implement new extraction list API in ncecat

	* Restructure nco_xtr_dfn() to isolate variable from group definitions
	Group metadata now handled by separate block executed iff PRN_VAR_METADATA
	This give user ability to turn-off all metadata copying
	Group metadata now copied for empty ancestors of all extracted variables
	Previously group metadata were only written to groups containing variables
	New algorithm: 1. Ensures group metadata written only once.
	2. Creates consistent state for group and variable extraction with flg_xtr
	3. Handles corner cases where groups introduced after nco_mk_xtr()
	by, e.g., associated coordinates and CF conventions, now have flg_xtr.
	Overall, groups now more equal in treatment to variables
	This may be useful in extending future functionality

2013-01-18  Charlie Zender  <zender@uci.edu>

	* Remove cruft from nco_grp_utl.[ch]

	* Rename functions for clarity and to facilitate cruft removal

	* Move MM3 code into nco_xtr_wrt()

	* Split nco_grp_var_mk_trv2() into nco_xtr_dfn() and nco_xtr_wrt()

	* Add (uninitialized) group ID members to trv_obj structure

	* Delete ncks -B switch and require -b fl_bnr instead
	This simplifies logic---now use fp_bnr instead of NCO_BNR_WRT

2013-01-15  Charlie Zender  <zender@uci.edu>

	* Place explicit netCDF3 path in nco_inq_grp_full_ncid_flg()

	* Safeguard potential illegal memory access in nco_mk_xtr() string manipulation

2013-01-14  Charlie Zender  <zender@uci.edu>

	* Fix bug introduced in 4.2.1 that causes ncea to break when handling
	files that do not contain a record dimension. Thanks to Martin Otte
	for reporting the bug and providing a working fix.
	http://nco.sf.net#bug_ncea_rec_var

	* Memory error in nco_mk_xtr() triggers segfaults in autoconf build

	* Remove new regression tests that are fragile, i.e., whose answers change as in.cdl and in_grp.cdl change

2013-01-13  Charlie Zender  <zender@uci.edu>

	* Document union-mode and intersection-mode in nco.texi, and give
	examples with simultaneous anchoring and recursion

	* Add --ram_all to remaining usage strings in nco_ctl.c

	* Reorganize nco_grp_var_mk_trv2()

	* Rework details of NCO GSL code: use mss_val as argument name,
	eliminate C99/C++ "//" comment syntax, and attribute copyrights in original GSL code

2013-01-12  Charlie Zender  <zender@uci.edu>

	* Set is_crd_var to True in nco_var_fll() when variable referenced
	in either CF "bounds" or "coordinates" attributes. Effectively,
	the only consequence of this is that the arithmetic operators now
	treat CF coordinates like basic coordinates in all ways. More
	consistent to have time_bnds be an average, like time, rather than
	a total when -y ttl is specified. This simplifies nco_var_lst_dvd()
	which no longer separately checks for CF coordinates.

	* All regression tests pass on netCDF4-enabled NCO.

	* Enable new extraction maker nco_mk_xtr() version of ncks. This
	removes most explicit dependencies on netCDF format from main.c.
	MM3 temporarily disabled.

	* Tweak regression tests to work with intersections, non-recursive requests

2013-01-11  Charlie Zender  <zender@uci.edu>

	* Commit changes to all but source code files

2013-01-10  Charlie Zender  <zender@uci.edu>

	* Finish initializing flags. Implement unions/intersections.

2013-01-08  Pedro Vicente  <pvicente@uci.edu>

        * Add Qt/MSVC GSL 1.8d; to use add environment variables LIB_GSL and HEADER_GSL

2012-12-18  Charlie Zender  <zender@uci.edu>

	* More work on flags

	* Dupe netCDF4 stubs to present a fake library for manipulating netCDF3 files with the netCDF4 API

2012-12-17  Charlie Zender  <zender@uci.edu>

	* Use new extraction list checker nco_mk_xtr()

2012-12-16  Charlie Zender  <zender@uci.edu>

	* Fix bug introduced in 4.2.1 that caused ncra to skip writing
	results of final normalization if trailing files were superfluous.
	In the most common case, all zeroes appeared in the output file.

2012-12-14  Charlie Zender  <zender@uci.edu>

	* Document ncrename changes

	* ncrename -a global@old_att,new_att works for global attributes

2012-12-12  Charlie Zender  <zender@uci.edu>

	* ncrename -a @old_att,new_att works for global attributes

	* Start re-vamp of ncrename global attribute handling

	* Add NCO_NOERR and NCO_ERR tokens for generic success/failure return codes

	* Change strcmp("global") to strcasecmp("global") in ncatted

2012-12-07  Charlie Zender  <zender@uci.edu>

	* Change FL_LST_IN_MAX_LNG from 1 MB to 10 MB per user request

2012-12-06  Pedro Vicente  <pvicente@uci.edu>

	* bm: ncks #54 Extract CF 'coordinates' variables (netCDF4 file)

	* bm: ncks #55 Extract CF 'coordinates' variables (netCDF3 file)

	* bm: ncks #56 Extract CF 'bounds' variables (netCDF4 file)

	* bm: ncks #57 Extract CF 'bounds' variables (netCDF3 file)

2012-12-05  Pedro Vicente  <pvicente@uci.edu>

	* bm: ncks #51-53 Extract associated coordinates test 2-4 (netCDF3/4 file)

2012-12-04  Pedro Vicente  <pvicente@uci.edu>

	* bm: ncks #50 Extract associated coordinates test 1 (netCDF3 file)

2012-12-01  Pedro Vicente  <pvicente@uci.edu>

	* deprecate grp_nm member of nm_id_sct; use full group name to get name as needed

2012-11-30  Pedro Vicente  <pvicente@uci.edu>

	* bm: ncks #39 2D variable definition (netCDF4 file)

	* bm: ncks #40-49 Variable/Group extraction test 1-8

	* deprecate grp_id member of nm_id_sct; use full group name to get ID as needed

2012-11-29  Pedro Vicente  <pvicente@uci.edu>

	* bm: ncks #39 exclude variables (netCDF3 file)

	* deprecate nco_var_lst_xcl and use nco_var_lst_xcl_trv for both netCDF3 and netCDF4

	* Qt: allow Win32 build with netCDF3; define environment $(HEADER_NETCDF3) and $(LIB_NETCDF3)
	and use CONFIG += netcdf3 in /qt/nco.pri

2012-11-28  Pedro Vicente  <pvicente@uci.edu>

	* Add --get_file_info option

	* bm: ncks #33 --get_grp_info option (netCDF3 file)

	* bm: ncks #34 --get_grp_info option (netCDF4 file)

	* bm: ncks #35 --get_file_info option (netCDF3 file)

	* bm: ncks #36 --get_file_info option (netCDF4 file)

	* bm: ncks #37 exclude all variables (netCDF3 file)

	* bm: ncks #38 exclude all variables (netCDF4 file)

2012-11-27  Pedro Vicente  <pvicente@uci.edu>

	* Add --get_grp_info option

2012-11-27  Charlie Zender  <zender@uci.edu>

	* Create nco-bugs@lists.sourceforge.net address for AC_INIT()

2012-11-20  Pedro Vicente  <pvicente@uci.edu>

	* bm: NCO_AVOID_BM_REPORT avoids prompt to send benchmark results

	* bm: Detect ENABLE_NETCDF4 and HAVE_NETCDF4_H in config.h and run tests accordingly

2012-11-20  Charlie Zender  <zender@uci.edu>

	* Document anchoring and recursion at http://nco.sf.net/nco.html#rcr

	* Implement logic for anchoring and recursion in nco_chk_trv()

2012-11-18  Charlie Zender  <zender@uci.edu>

	* rx seems to work for both variables and groups in nco_chk_trv()

	* Move rx #ifdef logic from nco_chk_trv() down into nco_trv_rx_search()

	* Implement additional checks for variables in nco_chk_trv()

	* Implement rx for groups in nco_chk_trv()

	* Re-organize and rename nco_grp_trv structures

	* Functionalize nco_hash2comma()

2012-11-17  Charlie Zender  <zender@uci.edu>

	* Tidy nco_grp_utl.[ch]

	* Add NCO spiral logos in Scalable Vector Graphic and
	GIMP format, logo_srl.svg and logo_srl.xcf, respectively.
	Contributed by Andrea Cimatoribus A.Cimatoribus@uu.nl

	* Fix nco_chk_trv() off-by-one error on end boundary

	* Fix nco_chk_trv() for -g '' and -v ''

2012-11-16  Charlie Zender  <zender@uci.edu>

	* nco_chk_trv() allows multi-component user-supplied paths

2012-11-15  Pedro Vicente  <pvicente@uci.edu>

	* ncks regression test #32: Sort output alphabetically

2012-11-15  Charlie Zender  <zender@uci.edu>

	* Start multi-component path work in nco_chk_trv()

	* Change var and grp to obj where usage is generic

	* Change nc_typ to nco_obj_typ

2012-11-13  Charlie Zender  <zender@uci.edu>

	* ncunits filter

	* NCO 4.2.3 release procedure:
 	Changes since nco-4_2_2: GPE, ncecat fix, group atts.
	cd ~/nco;cvs tag -d nco-4_2_3;cvs tag -d nco-4_2_3-1
	cd ~/nco;cvs commit -m "Preparing nco-4.2.3 release"
	cvs tag -c nco-4_2_3;cvs tag -c nco-4_2_3-1

2012-11-11  Pedro Vicente  <pvicente@uci.edu>

	* ncks regression test #31: Group dimension hyperslabs

2012-11-09  Charlie Zender  <zender@uci.edu>

 	* GPE documentation

	* Change most "Global" to "Group" attributes when printing metadata

2012-11-08  Charlie Zender  <zender@uci.edu>

	* NCO 4.2.3 release procedure:
 	Changes since nco-4_2_2: GPE, ncecat fix, group atts.
	cd ~/nco;cvs tag -d nco-4_2_3;cvs tag -d nco-4_2_3-1
	cd ~/nco;cvs commit -m "Preparing nco-4.2.3 release"
	cvs tag -c nco-4_2_3;cvs tag -c nco-4_2_3-1

2012-11-08  Pedro Vicente  <pvicente@uci.edu>

	* ncks: GPE group attribute extraction

	* ncks regression test #30: GPE group attribute extraction

2012-11-07  Pedro Vicente  <pvicente@uci.edu>

	* ncks: nco_att_cpy_trv: Copy group attributes

2012-11-06  Pedro Vicente  <pvicente@uci.edu>

	* ncks: Handle GPE redundancy

2012-11-05  Charlie Zender  <zender@uci.edu>

	* ncks/ncecat: Complete and test GPE infrastructure

	* ncecat: Fix 4.2.2 bug that skips first input file in RECORD_AGGREGATE mode with NINTAP

2012-11-05  Pedro Vicente  <pvicente@uci.edu>

	* ncks regression test #29: Extract a 'bounds' variable

2012-11-02  Pedro Vicente  <pvicente@uci.edu>

	* ncks regression test #28: Extract coordinate variables

	* ncks: nco_var_lst_crd_add_trv: Add all coordinates to extraction list

2012-11-02  Charlie Zender  <zender@uci.edu>

	* Call nco_prs_gpe_arg() to parse GPE argument into GPE structure

	* Add Group Path Editing (GPE) structures

2012-11-01  Pedro Vicente  <pvicente@uci.edu>

	* ncks regression test #26: Extract group attributes

	* ncks regression test #27: Extract global attributes

	* ncks: nco_grp_var_mk_trv: Create groups/write variables in output file

2012-10-31  Charlie Zender  <zender@uci.edu>

	* ncflint: verify output type is float when interpolating between two packed floats

2012-10-29  Charlie Zender  <zender@uci.edu>

 	* NCO 4.2.2 release procedure:
 	Changes since nco-4_2_1: ncks groups, hdr_pad, NULs, _'s, ncecat GAG
	cd ~/nco;cvs tag -d nco-4_2_2;cvs tag -d nco-4_2_2-1
	cd ~/nco;cvs commit -m "Preparing nco-4.2.2 release"
	cvs tag -c nco-4_2_2;cvs tag -c nco-4_2_2-1

2012-10-28  Pedro Vicente  <pvicente@uci.edu>

	* ncks regression test #24: Hyperslabs (test -d with -v and -g)

	* ncks regression test #25: Dimensions (test -v dimension)

2012-10-27  Pedro Vicente  <pvicente@uci.edu>

	* ncks regression test #22: Extract variables in groups (test -g with -v)

	* ncks regression test #23: Create variables in groups (test -G with -v and -g)

2012-10-26  Charlie Zender  <zender@uci.edu>

	* ncecat: Copy global attributes of first file to root of output file

	* Place nco_hst_att_cat() after nco4_grp_lst_mk() so appending history command works

2012-10-25  Pedro Vicente  <pvicente@uci.edu>

	* nco_def_grp_flg() used in nco4_grp_lst_mk_itr() for append mode

2012-10-24  Pedro Vicente  <pvicente@uci.edu>

	* xtr_lst_fnd() finds full variable name in extraction list

	* nco_aux_grp_id() returns group ID given variable full name

	* Add to in_grp.cdl for CF tests: add gds_var, gds_crd, lat_gds, lon_gds

	* nco_fnd_var_trv() finds variable by relative name and exports to "nm_id"

	* nco_var_lst_crd_ass_add_cf() adds to extraction list all
	coordinates associated with CF convention; regression test ncks #21

2012-10-23  Pedro Vicente  <pvicente@uci.edu>

	* ncks: chunking in nco4_grp_lst_mk() (define output file recursively);
	regression test ncks #20

	* ncks: nco_dmm_trv() and nco_var_lst_crd_ass_add_trv() implement
	extraction of associated coordinate variables; regression test ncks #19

	* ncks: nco_prn_att_trv() implements recursive output of global (group) attributes

2012-10-23  Charlie Zender  <zender@uci.edu>

	* Adopt new naming convention in hand-written netCDF4 CDL files:
	g4g1g1 is the first subgroup of	g4g1 which is the first subgroup
	of g4 which is the fourth subgroup of /. The level of the group
	can be determined by counting the g's.

2012-10-22  Charlie Zender  <zender@uci.edu>

	* Built netCDF library patch for real nc_rename_grp() function:
	  http://dust.ess.uci.edu/tmp/nc_rename_grp.tar.gz
	  Function currently dies in H5Gmove() for unknown reasons
	  Details nc_rename_grp() in nco_netcdf.c

	* Wrote nc_rename_grp() stubs for distribution now with NCO

	* Call nco_rename_grp() from ncrename

	* Implement library stubs for nc_rename_grp()/nco_rename_grp()

	* Modify in_grp.cdl to allow for new tests

2012-10-21  Charlie Zender  <zender@uci.edu>

	* Prepare ncrename for -g group renaming arguments

	* ncks/ncecat -G accepts extended (depth > 1, multi-component) group names

2012-10-20  Charlie Zender  <zender@uci.edu>

	* Implement nco_def_grp_full() to define root group for extracted variables

	* Remake ncks -G --gag grp_out as root group for ouput √† la ncecat

	* Deprecate ncks -G into ncks --get_grp_info

2012-10-19  Charlie Zender  <zender@uci.edu>

	* Add Debian hardening tokens to bld/Makefile

	* Add ncecat -G regression test

	* ncecat -G appears to work on netCDF3 and netCDF4 files

	* Add in_grp.cdl -> in_grp.nc rules to configure and bld/Makefile

2012-10-18  Charlie Zender  <zender@uci.edu>

	* ncecat -G makes it through first file but nco4_var_lst_mk() needs re-initialization

	* Make nco4_inq_trv() return values only if pointers non-NULL

2012-10-16  Charlie Zender  <zender@uci.edu>

	* Merged ncks group code into ncecat GROUP_AGGREGATE code

2012-10-15  Charlie Zender  <zender@uci.edu>

	* Bifurcate ncecat logic into GROUP_AGGREGATE and RECORD_AGGREGATE

	* Initiate ncecat -G option for group aggregation

	* Stop printing variable and dimension IDs, since these cluttered
	the printed output and were only used for development purposes
	long ago.

2012-10-09  Charlie Zender  <zender@uci.edu>

	* Deprecate ncra2.c

	* Fix TODO nco1075 where ncpdq was broken for re-arrangements like
	ncpdq -O -C -v PS,time_lon -a lat,lon,time ~/nco/data/in.nc ~/foo.nc
	Eliminate pre-emptive check in nco_var_dmn_rdr_mtd() for condition
	which was not illegal yet led to exit() anyway.
	All that was necessary was to eliminate the exit() call.
	False-positive errors were produced for variables that were record
	in input, fixed in output, and themselves lacked the record
	dimension, i.e., they became fixed (were neutered?) because record
	dimension had to be fixed to satisfy re-ordering of other variables.

2012-10-07  Charlie Zender  <zender@uci.edu>

	* Die when user attempts --mk_rec_dmn with non-existent dimension

	* Fix mistaken handling of return values from nc_inq_unlimdim()
	which caused ncks --fix_rec_dmn to fail. Bug introduced 20111130
	but caught only now because fix_rec_dmn was never
	regression-tested.

2012-10-06  Charlie Zender  <zender@uci.edu>

	* Use nco_fmt_sng_printf_subst() to replace user-specified string
	when missing values encountered. rx needs work.

	* Add --no_blank switch to fix borken regression tests

	* ncks: print underscore ("_") instead of missing value

2012-09-28  Pedro Vicente  <pvicente@uci.edu>

        * ncks: do not create empty groups

2012-09-22  Pedro Vicente  <pvicente@uci.edu>

        * ncks: print variable's data for recursively nested netCDF4 files

2012-09-19  Pedro Vicente  <pvicente@uci.edu>

        * ncks: -G option prints extra dimension information with -D 4

2012-09-11  Charlie Zender  <zender@uci.edu>

	* Remove unused nbr_dmn_fl from nco_cnk_sz_set()

	* Tweak i18n machinery

2012-09-10  Charlie Zender  <zender@uci.edu>

	* Add median filter ncmdn

	* Refine DRN/MRO documentation

2012-09-09  Charlie Zender  <zender@uci.edu>

	* Improve diagnostics in nco_dfl_case_nc_type_err() error message

2012-09-07  Charlie Zender  <zender@uci.edu>

	* Add filters ncmax, ncavg, ncrng

2012-09-05  Pedro Vicente  <pvicente@uci.edu>

        * ncks: implement -c (extract coordinate variables) for group hierarchies

2012-09-04  Charlie Zender  <zender@uci.edu>

	* nco_att_cpy() now attempts to copy array-valued missing values
	Attempt will likely fail, but some old files have these arrays,
	and older versions of netCDF allow it to succeed.
	Since this is a metadata convention, and NCO is
	convention-agnostic, NCO will attempt it and allow the netCDF
	layer, not NCO, to cause the failure.

2012-09-03  Charlie Zender  <zender@uci.edu>

	* Restore trailing NUL to append mode, yet overwrite previous trailing NUL

2012-09-02  Charlie Zender  <zender@uci.edu>

	* Add trailing NUL character to ncatted in create/modify/overwrite modes

	* Add --hdr_pad to man pages

2012-09-01  Charlie Zender  <zender@uci.edu>

	* Add --hdr_pad to all remaining operators

2012-08-30  Pedro Vicente  <pvicente@uci.edu>

        * ncks: implement -x (convert extraction to exclusion list) for group hierarchies

2012-08-27  Henry Butowsky  <henryb@hush.com>

	* Fix insidious bug with ram_delete() now working!!

2012-08-24  Pedro Vicente  <pvicente@uci.edu>

        * ncks stdout handling of full hierarchy netCDF4 traversal; -g and -v control specific groups and variables

2012-08-23  Charlie Zender  <zender@uci.edu>

	* Remove -r option from wget. Behavior of -r may have changed.
	Thought it meant clobber existing file. It now means recursive.

	* Restrict wget to --tries=1 to fix "recursive" wgetting when DAP fails to NOAA NOMADS

2012-08-21  Henry Butowsky  <henryb@hush.com>

 	* Add semi-intelligent handling of missing values in bilinear
	interpolation functions bilinear_interp() bilinear_interp_wrap()

2012-08-20  Charlie Zender  <zender@uci.edu>

	* Windows MSVC builds ncwa without parser/lexer and -B option support

2012-08-17  Charlie Zender  <zender@uci.edu>

	* Distinguish between regular expressions for variable
	wildcarding, and filename expansion by shell globbing

2012-08-16  Charlie Zender  <zender@uci.edu>

	* Print filenames in errors when open() and create() calls fail

2012-08-15  Henry Butowsky  <henryb@hush.com>

	* Modify ncoGrammer to support negative srt/end index convention

2012-08-12  Charlie Zender  <zender@uci.edu>

	* Replace logo request on homepage with software stack image logo_nco_stk.png

2012-08-10  Charlie Zender  <zender@uci.edu>

	* Prune headers for strings.h and ctype.h

2012-08-07  Pedro Vicente  <pvicente@uci.edu>

        * ncks -G prints number of group's subgroups, dimensions, attributes, variables

2012-08-03  Charlie Zender  <zender@uci.edu>

	* Ensure netCDF3-only versions see prototypes for NCO netCDF4 functions, e.g., nco_inq_grp*

 	* NCO 4.2.1 release procedure:
 	Changes since nco-4_2_0: no_tmp_fl, NC_DISKLESS, -'ve -d, DRN/MRO
	cd ~/nco;cvs tag -d nco-4_2_1;cvs tag -d nco-4_2_1-1
	cd ~/nco;cvs commit -m "Preparing nco-4.2.1 release"
	cvs tag -c nco-4_2_1;cvs tag -c nco-4_2_1-1

	* Patch 4.2.1 tarball to work with netCDF3-only installs by replacing nc_inq*() with nco_inq*()

2012-08-02  Charlie Zender  <zender@uci.edu>

	* Swap ncra2.c with ncra.c so default ncra/ncrcat now has DRN/MRO

	* Fix ncra2.c bug #11: use flg_ntl_rth to correctly initialize nco_opr_drv

2012-08-01  Pedro Vicente  <pvicente@uci.edu>

        * Add a ncks -z option to iterate input netCDF file tree

2012-07-31  Charlie Zender  <zender@uci.edu>

	* Document DRN/MRO in nco.texi, man pages, and usage

2012-07-31  Pedro Vicente  <pvicente@uci.edu>

        * Re-base record bounds variables (e.g., time_bnds) in ncrcat/ncra

2012-07-31  Charlie Zender  <zender@uci.edu>

	* Warn in ncrcat/ncra when re-basing possibly necessary but UDUnits not installed

2012-07-30  Charlie Zender  <zender@uci.edu>

	* Add level_2_group_1 to in_grp.cdl

2012-07-27  Charlie Zender  <zender@uci.edu>

	* Add --mro option to ncra

	* Set rcd_stt after DAP success to correctly mimic stat() returns

	* Improve DRN/MRO warning/error messages

2012-07-26  Charlie Zender  <zender@uci.edu>

	* ZKB in DRN/MRO of ncra2.c and it is fully tested and passes all tests

	* Fix ncra2.c bug #10: correct idx_end_max_abs by rec_in_cml when lmt_typ_crd

	* Tighten-up DRN/MRO option error/warning/info-handling

	* Die if Fortran (1-based) index equals zero

	* Fix ncra2.c bug #9: end index in last file was corrupted by sloppy user arguments

	* Useful error message when --open_ram attempted on netCDF4 input

	* Add netCDF4 atomic types to in_4.cdl

2012-07-24  Charlie Zender  <zender@uci.edu>

	* Fix ncra2.c bug #8: maintain rec_rmn_prv_drn across files

	* Fix ncra2.c bug #7: pass initialization indicator not rec_usd_cml to nco_opr_drv()

	* Fix ncra2.c bug #6: reset LAST_RECORD_OF_CURRENT_GROUP appropriately

	* Fix ncra2.c bug #5: write MRO to idx_rec_out not always to index 0L

	* Fix ncra2.c bug #4: limit srd increments to when current stride is not last stride

	* Re-write diagnostic rec_nbr_rqs arithmetic to account for DRN groups

2012-07-23  Pedro Vicente  <pvicente@uci.edu>

        * Configure support for UDUnits2 for MacOSX using MacPorts package

2012-07-23  Charlie Zender  <zender@uci.edu>

	* ncra2.c: Do not bother to open trailing superfluous files

	* Implement new master while loop in ncra2.c

	* Add #inline max_int(), min_int() functions

	* Limit parsing, evaluation now rewritten, bug-free, and ready for DRN extensions

	* Correctly account for rec_skp_vld_prv in determining new start index

2012-07-22  Charlie Zender  <zender@uci.edu>

	* Update limit code. Introduce off-by-one error on stride. Will fix tomorrow.

2012-07-21  Charlie Zender  <zender@uci.edu>

	* De-conflate rec_skp_ntl_spf from rec_in_cml

2012-07-20  Charlie Zender  <zender@uci.edu>

	* Add regression test for and fix concatenation of record
	coordinate-bounded variable across non-monotonic files

	* Fix segfault parsing coordinate value hyperslabs where max
	specified and min omitted (TODO nco1062)

	* Initialize sng_cnv_rcd with NULL_CEWI instead of CHAR_CEWI

2012-07-19  Charlie Zender  <zender@uci.edu>

	* #include <strings.h> for strcasecmp() prototype

	* Add Multi-record Output (MRO) flag handling

	* Differentiate indices necessary to implement multi-record outputs

	* Rename idx_rec_out as rec_usd_cml, and idx_rec as idx_rec_crr_in,
	and add new idx_rec_out that means what it says.

	* Remove superfluous OpenMP headers from some library files

	* Functionalize ncea/ncra normalization in nco_opr_nrm()

	* Restructure initialize/compute/normalize/write logic of ncra2

2012-07-19  Pedro Vicente  <pvicente@uci.edu>

        * Configure support for UDUnits2 in recent RPM systems (Fedora 17)

2012-07-18  Charlie Zender  <zender@uci.edu>

	* Legalize drn in nco_lmt_prs(), nco_lmt_evl(), nco_msa_lmt_all_int()

	* Add drn to lmt structures

	* Rework error reporting in nco_aed_prs(), nco_lmt_prs(), nco_lmt_evl()

	* Branch ncra.c into ncra2.c to develop hyperslab duration (drn) option

	* Add filters ncdmnsz and ncrecsz

2012-07-18  Pedro Vicente  <pvicente@uci.edu>

        * Add a new Windows installer; avoids the need for the winzip utility

2012-07-16  Pedro Vicente  <pvicente@uci.edu>

        * Detect presence of netCDF library in configure; exit if not present

2012-07-15  Charlie Zender  <zender@uci.edu>

	* ncks: Print "Coordinate" or "Record Coordinate" instead of "(CRD)(REC)"

	* Add srandom() seed to UNIX to match MSVC implementation of rnd_nbr()

	* Document diskless/RAM and --no_tmp_fl options, and -'ve -d args

2012-07-13  Charlie Zender  <zender@uci.edu>

	* ncks: only add NCO version attribute when HISTORY_ATT_CAT == True

	* Add data/hdr_pad.sh to check metadata header size. Add --hdr_pad to man pages.

2012-07-13  Pedro Vicente  <pvicente@uci.edu>

        * Qt/MSVC add projects for ncrcat and ncea

2012-07-11  Pedro Vicente  <pvicente@uci.edu>

        * ncpdq unpack coordinate variables (nco1030)

2012-07-11  Charlie Zender  <zender@uci.edu>

	* Work on allowing inherited att_typ when aed_mode = modify

	* Add --hdr_pad, --bfr_sz, --no_tmp_fl, --ram_all to man pages

	* Remove 'convert' and nco.png from tags

2012-07-10  Pedro Vicente  <pvicente@uci.edu>

        * Qt/MSVC changes for strcasestr(); enable NEED_STRCASECMP in Qt project

2012-07-09  Charlie Zender  <zender@uci.edu>

	* Negative integer as min or max element of hyperslab specification indicates offset from end
	Fulfills 2008 feature request of Nick Bower

2012-07-09  Pedro Vicente  <pvicente@uci.edu>

        * Set configure option --enable-netcdf4 to yes by default

2012-07-08  Charlie Zender  <zender@uci.edu>

	* Update man pages with related commands

	* Enable --fl_fmt switch synonym to --file_format on all applicable operators

	* Apply bugfix from Roux so ncra always averages coordinate variables

2012-07-06  Charlie Zender  <zender@uci.edu>

	* Use strcasestr() instead of strstr() for fl_fmt conversions (i.e., netCDF4 = netcdf4)

	* Die when netCDF4 output explicitly requested from netCDF3-only NCO

	* Fix [-? ...] command line option help in nco_ctl.c

2012-07-05  Pedro Vicente  <pvicente@uci.edu>

        * Build doc/Makefile (and thus documentation) if 'makeinfo' program is installed

2012-07-05  Charlie Zender  <zender@uci.edu>

	* Update man pages

2012-07-03  Charlie Zender  <zender@uci.edu>

	* Document --ram and --no_tmp_fl switches

	* Un-break strtoll() compatibility function for AIX xlC

	* Make MSVC file opening Sleep() for same duration as UNIX sleep()

	* Write MSVC lround(),llround(),llround(),llroundf() definitions to obey standard prototypes
	Move their definitions/declarations to nco_rth_flt.[ch]

2012-07-02  Pedro Vicente  <pvicente@uci.edu>

        * Print $prefix (NCO installation path) in configure output

2012-07-02  Henry Butowsky  <henryb@hush.com>

	* Add exists(var_nm/att_nm) function to return 1 if "var" or "att" exist in Input or Output

2012-07-01  Pedro Vicente  <pvicente@uci.edu>

        * Test for presence of antlr in configure, and if not found, do not build ncap2

2012-06-30  Charlie Zender  <zender@uci.edu>

	* Use nco_fl_open() instead of nco_open() in ncap2

2012-06-28  Charlie Zender  <zender@uci.edu>

	* Harmonize _FillValue with variable type in in.cdl (backwards compatibility with netCDF 4.1.1)

	* Remove NaN values from in.cdl for backwards compatibility (netCDF 4.1.1 does not support)

	* Fix ncks netCDF4 backwards compatibility problem by using #ifdef ENABLE_NETCDF4

	* Tidy Invoke.cc and make ncap2 debug printing systematically quieter

	* --no_tmp_fl appears to work

	* Do not check for existence of temporary file when bypassing temporary file

2012-06-28  Pedro Vicente  <pvicente@uci.edu>

        * Add /qt/ncwa.pro Unix project (uses flex/bison); NCO Unix Qt build now includes all operators

2012-06-27  Charlie Zender  <zender@uci.edu>

	* Tidy nco_fl_utl.c for MSVC compilation

	* Add stubs for netCDF4 group routines. Fixes all known	problems compiling NCO without netCDF4.
	Realized compilation without netCDF4 may have been broken since	~201108, i.e., NCO 4.0.9!

	* Add is_miss() to return number of missing values in expr/var

2012-06-26  Pedro Vicente  <pvicente@uci.edu>

        * Remove NO_TMP_FL from Qt/MSVC projects, to match WRT_TMP_FL variable (ensure/cancel temporary files)

        * Add /qt/nco.pri file with common compiler and dependency libraries for Qt/MSVC build

        * Use -L -l syntax for library dependencies in Qt Unix projects

2012-06-26  Charlie Zender  <zender@uci.edu>

	* RAM_OPEN and RAM_CREATE now appear to work

	* Add WRT_TMP_FL and wrt_tmp_fl/no_tmp_fl switches to ensure/cancel temporary files

	* Add NC_ECANTREAD, NC_EDAPSVC, and NC_EBADGRPID backward-compatibility error codes to nco.h

2012-06-25  Charlie Zender  <zender@uci.edu>

	* Add Qt directories to 'make tags' sources

	* Handle NaNs better in in.cdl

	* Work on the most- and longest-requested NCO feature: avoiding temporary files.
	This feature, no_tmp_fl, responds to TODO nco326, nco567, nco781, and nco1014.

	* Do not mv/cp in nco_fl_mv()/nco_fl_cp() when files are identical

	* Change nco_fl_out_open() logic to define bfr_sz_hnt_lcl before use on MSVC

2012-06-24  Charlie Zender  <zender@uci.edu>

	* Propagate RAM_OPEN to nc_open() for all input files

	* Propagate RAM_CREATE to nc_create() for all new output files

2012-06-22  Charlie Zender  <zender@uci.edu>

	* Pass RAM_CREATE, RAM_OPEN flags to all operators via ram_all,
	create_ram, open_ram and diskless_all switches

	* Implement NC_DISKLESS in nco_open() in ncks.c via --ram_all switch

2012-06-21  Charlie Zender  <zender@uci.edu>

	* Successfully built and tested with netCDF 4.2.1-rc1

2012-06-14  Charlie Zender  <zender@uci.edu>

	* Replace sourceforge.net with sf.net

	* Clean-up contributors on homepage

2012-06-12  Charlie Zender  <zender@uci.edu>

	* NCO 4.2.0 release procedure:
 	Changes since nco-4_1_0: ncra -y ttl, %i fmt, ncwa NaN, nc__open, MVS
	cd ~/nco;cvs tag -d nco-4_2_0;cvs tag -d nco-4_2_0-1
	cd ~/nco;cvs commit -m "Preparing nco-4.2.0 release"
	cvs tag -c nco-4_2_0;cvs tag -c nco-4_2_0-1

2012-06-11  Charlie Zender  <zender@uci.edu>

	* Within last week Pedro committed Qt/MVS files and changes

	* ncap2: Added RAM variables: double: nan, inf; float: nanf, inff
	Problem may be with macro call double nan(const char *tagp)

2012-05-22  Charlie Zender  <zender@uci.edu>

	* ncap2 regression tests 10 and 11 fail only on givre, roulee,
	pass on all other computers, indicating...OpenMP issues?

2012-05-22  Charlie Zender  <zender@uci.edu>

	* All operators except ncap2 now pass all regression tests

	* Systematic overhaul of var list divide logic so that
	"coordinates" and "bounds" attributes are treated consistently.

	* Fix (do not process) variables listed in "bounds" attributes of
	size- and rank-preserving operators. Previsouly this exception was
	made for variables listed in "coordinates" attributes but this was
	insufficient. Variables like time_bnds were slipping through and
	causing problems. Now "coordinates" and "bounds" variables are
	treated equivalently in list-division. This fixes TODO nco1049.

2012-05-21  Charlie Zender  <zender@uci.edu>

	* Invoke nco_var_tll_zro_mss_val() again as post-processing step
	for ttl functions. Not terribly elegant solution to TODO nco1052.

	* Eliminate two false negative in regression tests cause by,
	respectively, new rounding behavior and new integer print format.

	* Realized this fix introduced a new regression because now pure
	missing value variables sum to zero rather than missing value.
	Need to ensure at end that when tally is zero, value is missing.

	* ncra -y ttl now works when first element is missing value
	nco_var_copy_tll() now sets accumulator to zero in this case
	Fixes TODO nco1051 and a regression.

	* ncra does not recognize first value of hyperslab as missing value
	This is TODO nco1051.

	* Change answer of ncra regression test #02 from 5 to 6 to reflect
	integer rounding behavior implemented on 20111020 for NCO 4.0.9.
	Fractions in [0.5) are rounded upward on conversion to integers.
	Fixes TODO nco1050.

	* Add newer regression test failures to TODO list

2012-05-20  Charlie Zender  <zender@uci.edu>

	* Quiet INFO and side effects from nco__open() and nco__create()

	* Prevent overwriting user-specified bfr_sz_hnt in nco_fl_open() and
	 nco_fl_out_open(). These include all uses of nco__open() and nco__create().

	* Open and then close TODO nco1047 generated by not re-setting a return code

	* Clean-up TODO lists

	* Annotate Contributors section of manual

	* Place ut_free_system() after all other ut_*() cv_*() calls
	This fixes double-free() error TODO nco1022 and nco1044 reported
	independently by Andrew Wittenburg and Peter Campbell.

2012-05-19  Charlie Zender  <zender@uci.edu>

	* Add ncattget example to documentation

2012-05-18  Charlie Zender  <zender@uci.edu>

	* Henry committed ncap2 code that fixes TODO nco7310:
	ncap2 append mode breaks when dimension already exists
	ncap2 -O -v -s 'time2=time' ~/nco/data/in.nc ~/foo.nc
	ncap2 -A -v -s 'foo=time' ~/nco/data/in.nc ~/foo.nc

2012-05-16  Charlie Zender  <zender@uci.edu>

	* ncecat no longer glues a record dimension to any auxiliary
	coordinate variables (latixy, longxy, ...) or bounds (lat_bnds,
	lon_bnds, ...). These are variables specified in the "coordinates"
	or "bounds" attribute, respectively. Note that regular (1D)
	coordinate variables (lat, lon, time) may also be listed as
	auxiliary coordinate variables. But ncecat never added a record
	dimension to "normal" 1D coordinates. Thanks to Patrick Brockmann
	for this suggestion.

2012-05-14  Charlie Zender  <zender@uci.edu>

	* Add scrutable hint for ncap2 -A append errors, and note in docs

2012-04-15  Charlie Zender  <zender@uci.edu>

	* Pass NC_SIZEHINT_DEFAULT as initialsz to nco__create()

	* Replace all nco_create() calls with nco__create()

2012-04-14  Charlie Zender  <zender@uci.edu>

	* Replace all nco_open() calls with nco_fl_open()

	* Document --bfr_sz_hnt

	* Functionalize nc__open() clause as nco_fl_open()

2012-04-04  Charlie Zender  <zender@uci.edu>

	* Deprecate nco_open() in ncks in favor of nco__open() since
	latter is equivalent to former with default arguments.

2012-04-03  Charlie Zender  <zender@uci.edu>

	* Add --bfr_sz_hnt option and nco__open() to ncks

2012-03-30  Charlie Zender  <zender@uci.edu>

	* ncks now prints variables of type NC_INT with %i instead of %li
	formatting. This fixes TODO nco1040.

	* Fix fundamental mistake in use of memset() in	nco_set_long()
	Buggy method tried to fill tally array with ones quickly
	Revert to slower but obviously correct array deferencing to fill tally
	Hard to believe this bug did not cause more errors
	This fixes TODO nco1039. Thanks to Ken5746 for reporting this.

	* Modify and test NC_FLOAT portion of nco_var_avg() for	NaN-compatibility
	Verify that ncwa will work with missing value = NaN with this algorithm

	* Clean-up nco_var_avg.c to prepare for NaN-handling

2012-03-29  Charlie Zender  <zender@uci.edu>

	* NCO 4.1.0 release procedure:
 	Changes since nco-4_0_9: sorts/maps, MD5, chmod, NaNs, MM3
	cd ~/nco;cvs tag -d nco-4_1_0;cvs tag -d nco-4_1_0-1
	cd ~/nco;cvs commit -m "Preparing nco-4.1.0 release"
	cvs tag -c nco-4_1_0;cvs tag -c nco-4_1_0-1

2012-03-23  Charlie Zender  <zender@uci.edu>

	* Add nclist shell alias/function examples to manual

2012-03-21  Charlie Zender  <zender@uci.edu>

	* Clean-up nco_msa.c

	* Place MM3 stubs in ncecat

	* nco_use_mm3_patchset() returns True for MM3->MM4 copies (i.e., case 3)

	* Rename LBF-patchset to MM3-patchset (Multi-record Multi-variable netCDF3 files)

2012-03-13  Charlie Zender  <zender@uci.edu>

	* Verified MM3-workaround appears to work
	Subsetting is now close	to raw /bin/cp speed on NCAR GLADE filesystem
	/glade/home/zender/bin/LINUXAMD64/ncks -O -D 3 -x -v TH ~/gary.nc ~/out3_mrg_4.1.0.nc
	/glade/home/zender/bin/AIX/ncks -O -D 3 -x -v TH ~/gary.nc ~/out3_blf_4.1.0.nc

2012-03-12  Charlie Zender  <zender@uci.edu>

	* Implement nco_cpy_rec_var_val() to finish ncks MM3-workaround

2012-03-11  Charlie Zender  <zender@uci.edu>

	* For unknown reasons, regression tests started passing again (!)

	* Implement nco_var_lst_fix_rec_dvd() as part of MM3 workaround

2012-03-09  Charlie Zender  <zender@uci.edu>

	* Add stubs to ncks for faster copies on Large Blocksize Filesystems (LBFs)

2012-03-08  Charlie Zender  <zender@uci.edu>

	* Allow ncatted to change missing value's that are NaNs
	Arithmetic operators will still treat NaNs incorrectly, but this
	allows users to get rid of all NaNs first

	* Add some NaNs to in.nc for testing

2012-03-07  Charlie Zender  <zender@uci.edu>

	* Try hooks to determine filesystem blocksize in prep for Rew workaround

2012-03-06  Charlie Zender  <zender@uci.edu>

	* Merge aux and lmt_all changes from ncpdq.c, ncra.c to mpncpdq.c mpncra.c

2012-03-01  Charlie Zender  <zender@uci.edu>

	* Clean-up ncap2.cc

	* Clean-up CPP token scope

	* Sub-routine-ize nco_fl_overwrite_prm() to cleanup ncatted.c, ncrename.c

	* Port new file copy/chmod code from ncrename to ncatted

	* Replace multiple instances of hard-coded limit with CPP token NCO_MAX_NBR_USR_INPUT_RETRY

	* Allocate tally array for degenerate averages in nco_var_avg()
	This fixes ncap2 problem. Not sure why ncwa never failed.

	* Add degenerate variables to in.nc for testing nco_var_avg()

	* nco_var_avg() crashes on degenerate arrays sent by ncap2 not ncwa
	ncap2 -O -v -s 'dgn_max=dgn.max()' ~/nco/data/in.nc ~/foo.nc # Fails
	ncwa -O -v dgn_var ~/nco/data/in.nc ~/foo.nc # Succeeds

2012-02-29  Charlie Zender  <zender@uci.edu>

	* Use chmod() C-library call instead of chmod shell-command

	* Fix stat() and chmod() logic in ncrename

	* Increase ncrename diagnostics consistency and verbosity

2012-02-28  Charlie Zender  <zender@uci.edu>

	* Implement chmod so ncrename succeeds when output file is specified and input file is read-only

2012-02-23  Charlie Zender  <zender@uci.edu>

	* Update documentation to include/use new sort/map routines

2012-02-21  Henry Butowsky  <henryb@hush.com>

	* Modified/added following sort functions:
	sort(), asort() -sort ascending with/without map
	dsort() sort descending with/without map
	remap() apply sort map to variable
	unmap() return variable that produced current variable using sort map
	invert_map() invert the mapping

2012-02-20  Charlie Zender  <zender@uci.edu>

	* Implement MD5_DIGEST in nco_msa_prn_var_val() so MD5 now active
	in all forms of ncks.

	* Clean-up nco_md5.[ch], mark TODO nco1027 and nco485 as done

	* MD5 optionally enabled (with --md5) for input on ncks, ncrcat, ncecat
	When so enabled, MD5 comparisons to output are automatic with ncrcat, ncecat

2012-02-19  Charlie Zender  <zender@uci.edu>

	* MD5 is now done for input side. Need to add read loop to check output.

	* Finish implementatation for MSA writes and verify hyperslabs are
	correctly digested by showing that the digest of the hyperslab
	from "abc" to "a" yields the same as the digest of "a" directly.

	* Verify NCO MD5 implementation works for LPD's test cases

	* Implement MD5 algorithm on all ncrcat record writes, and on ncks non-hyperslab writes

	* Add MD5 test variables to in.nc

	* Incorporate MD5 digest code by L. Peter Deutsch (LPD)
	Code is under separate BSD-like license. Compiles though not used yet.

	* Add nco_md5.[ch] for MD5 digests

2012-02-14  Charlie Zender  <zender@uci.edu>

	* Tested 4.0.9 on bluefire to find, of course, massive breakage

	* Update AIX options to netCDF 4.1.3 on bluefire

2012-02-13  Charlie Zender  <zender@uci.edu>

	* NCO 4.0.9 release procedure:
 	Changes since nco-4_0_8: array(), revert NO_FILL, rounding
	cd ~/nco;cvs tag -d nco-4_0_9;cvs tag -d nco-4_0_9-1
	cd ~/nco;cvs commit -m "Preparing nco-4.0.9 release"
	cvs tag -c nco-4_0_9;cvs tag -c nco-4_0_9-1

	* Put #ifdef HAVE_CONFIG_H clauses in nco_mmr.h,nco_var_lst.h,nco_lst_utl.h

	* Linux GCC 4.6 regex.h also now, like Mac OS X, depends on sys/types.h

	* Clean-up set-but-unused variables for GCC 4.6

	* Document improved ncap2 array() function

2012-02-08  Charlie Zender  <zender@uci.edu>

	* Document ncap2 array() function

	* Clean-up prs_cls.cc

2012-02-06  Charlie Zender  <zender@uci.edu>

	* Build with netCDF 4.2 snapshots.
	No more regressions than with 4.1.3 so 4.2 is new default.

2011-12-31  Charlie Zender  <zender@uci.edu>

	* Update NCO homepage to announce ACCESS and deprecate SDO

2011-12-24  Charlie Zender  <zender@uci.edu>

	* Change copyright year to 2012

2011-12-23  Charlie Zender  <zender@uci.edu>

	* Warn when number of attributes exceeds NC_MAX_ATTRS

	* Learned NASA will fund ACCESS proposal!

2011-12-10  Charlie Zender  <zender@uci.edu>

	* Print helpful hint with NC_EVARSIZE errors

2011-12-07  Charlie Zender  <zender@uci.edu>

	* Tidy nco_cln_utl.c

	* Fix TODO nco1025: Warn when catting files with different scale factors

	* Tidy ncra.c

2011-12-06  Charlie Zender  <zender@uci.edu>

	* Document hyperslabbing irregular regions based on variable values

2011-12-01  Charlie Zender  <zender@uci.edu>

	* Fixed TODO nco1029: warn on ncks -A when dim(old_record) != dim(new_record)

2011-11-29  Charlie Zender  <zender@uci.edu>

	* Quiet set-but-not-used warnings appearing since GCC 4.6+

2011-11-22  Charlie Zender  <zender@uci.edu>

	* Update to Ubuntu 11.10 build chain and GCC 4.6

	* Re-base libtool using autoreconf -f -i
	This fixes some configure compile errors reported by Henry

2011-11-14  Charlie Zender  <zender@uci.edu>

	* Realized that ncwa was working on asymmetric weighting
	Added new test cases, also working. Unable to replicate Sentman	bug.

2011-11-12  Charlie Zender  <zender@uci.edu>

	* Add test cases to NCO_rgr.pl to detect TODO nco1026

	* Verify ncwa weighted average bug reported by Lori Sentman TODO nco1026

2011-10-25  Charlie Zender  <zender@uci.edu>

	* Make another backwards compatibility change to in_nomismatch.cdl

2011-10-20  Charlie Zender  <zender@uci.edu>

	* Implement l[l]round[f]() rounding patch suggested by Neil Davis
	Convert floating points to integers with lround(), lroundf(), llround(), and llroundf()
	Fixes unintended bias in packing with unrounded numbers
	Requires introducing <math.h> dependency in nco_cnf_typ.h and nco_rth_utl.h
	Causes unintended regressions in ncra, ncrcat

2011-10-09  Charlie Zender  <zender@uci.edu>

	* Tidy NCO_rgr.pl

2011-10-05  Henry Butowsky  <henryb@hush.com>

	* Fixed long standing problem with attribute propagation.
	scale_factor and add_offset were being propgated to the LHS.
	This caused problems when packed vars were on the RHS.
	These atts are now never propagated to the RHS.

2011-09-09  Charlie Zender  <zender@uci.edu>

	* Change "RAM size" to "size (in RAM)"

2011-09-07  Charlie Zender  <zender@uci.edu>

	* Burning Man! Rites of Passage! Wow.

2011-08-23  Charlie Zender  <zender@uci.edu>

	* Transitional nco4_inq() in ncks.c backwards compatible with nco_inq()

2011-08-22  Charlie Zender  <zender@uci.edu>

	* Insert crucial "else" in patch!

	* Verify patch appears to fix ncea -y ttl bug

	* Write nco_copy_var_tll() and nco_set_long() as better squasher for ncea bug

	* Write nco_var_tll_zro_mss_val() to squash ncea bug

	* Add regression test for ncea -y ttl treatment of missing values

	* Verify ncea -y ttl treats missing values incorrectly.
	ttl seems to be the only operation with this problem.

2011-08-05  Charlie Zender  <zender@uci.edu>

	* Add in_nomismatch.cdl to work around strict ncgen errors

2011-08-02  Charlie Zender  <zender@uci.edu>

	* Prototype nco4_inq() function to replace nco_inq()

	* Add grp_id to nm_id_sct

	* Fix NUL-termination problem with var_nm_fll in loop

	* Fix offset of group variables into global array

	* Fix function name in nc_inq_grpname_len()

2011-08-01  Charlie Zender  <zender@uci.edu>

	* Fix incorrect pointer in nco_grp_stk_pop()

	* Fix ininite recursion in stack memory cleanup

	* Fix off-by-one error in nco_inq_grps_full()

	* Fix incorrect reference to grp_id instead of grp_id_crr

	* Fix off-by-one error in nco_grp_stk_pop()

	* Add in_grp.cdl to test group functionality

2011-07-31  Charlie Zender  <zender@uci.edu>

	* Finish group iterators and nco_var4_lst_mk() compiles

	* Finish dynamic array implementation of group stack

2011-07-28  Charlie Zender  <zender@uci.edu>

	* Embed include <sys/resource.h> within #ifdef HAVE_GETRUSAGE for
	older GNU compilers, e.g., gcc 3.4.x.

2011-07-25  Charlie Zender  <zender@uci.edu>

	* Finished implementing NCO wrappers for group API

	* Group patches read/write (but do not populate) selected groups

	* Group stubs compile, build, and cause no regressions

2011-07-24  Charlie Zender  <zender@uci.edu>

	* Integrate nco_grp_utl.[ch] into build system

	* Revert to using NC_NOFILL on all writes, thus presuming netCDF 4.1.3

	* Add nco_grp_utl.[ch] and get to compile

2011-07-22  Charlie Zender  <zender@uci.edu>

	* Add secret hooks to ncks -g flag for group sub-setting

2011-07-15  Charlie Zender  <zender@uci.edu>

	* Remove last known USE_FORTRAN_ARITHMETIC token

2011-07-14  Charlie Zender  <zender@uci.edu>

	* More clean-up of ncap2 documentation

2011-06-27  Charlie Zender  <zender@uci.edu>

	* Clean-up UDUnits in preparation for solving TODO nco1022

	* Verify dpkg-buildpackage produces netCDF4-, UDUnits2-, DAP-enable NCO
	against current daily snapshot of netCDF 4.1.3, HDF 1.8.7.

	* Verify pbuilder          produces netCDF4-, UDUnits2-, DAP-enable NCO
	against current debian Sid

	* Incorporate more useful hints from Denis Heimbigner when DAP fails

2011-06-26  Charlie Zender  <zender@uci.edu>

	* Remove UDUNITS section of configure.in because it was overly
	complex to maintain with UDUNITS2 which supersedes it

	* Remove DAP-OPENDAP section of configure.in because it was overly
	complex to maintain with DAP-NETCDF which supersedes it

	* Re-introduce ENABLE_NETCDF4

	* Remove MPI section of configure.in because it was nasty and unsupported

	* Remove non-working CPPFLAGS += -DHAVE_NETCDF4_H hack from debian/rules

	* Use AC_CHECK_DECL() instead of AC_EGREP_HEADER() to find
	NC_CHUNKED in test to define HAVE_NETCDF4_H. Suggested by
	anonymous poster on Bug tracker, may improve netCDF4 configure
	problems considerably.

	* Add lat_bnd, time_bnds to in.cdl to improve CF "bounds" handling

	* Do not ship .la files in Debian (Closes: #622527) by Luk Claes

2011-06-10  Charlie Zender  <zender@uci.edu>

	* #define NCO_XLC_LIKELY when xlC compiler probably used

2011-06-08  Charlie Zender  <zender@uci.edu>

	* #define NCO_XLC_LIKELY when xlc compiler probably used

2011-06-02  Charlie Zender  <zender@uci.edu>

	* Add include ncra -Y, --pseudonym to ncks --secret output

2011-05-20  Charlie Zender  <zender@uci.edu>

	* configure.in modifications as per ocehugo suggestions

2011-05-10  Charlie Zender  <zender@uci.edu>

	* Webpage updates

	* NB: Debian pbuilder has been broken on Ubuntu Natty Narwhal for weeks
	This prevents serious work on a 4.0.9 release, improving configure, etc.

2011-04-28  Charlie Zender  <zender@uci.edu>

	* NCO 4.0.8 release procedure:
 	Changes since nco-4_0_7: HPSS, NOFILL, CF bounds & noleap, ncatted, NC_BYTE
	cd ~/nco;cvs tag -d nco-4_0_8;cvs tag -d nco-4_0_8-1
	cd ~/nco;cvs commit -m "Preparing nco-4.0.8 release"
	cvs tag -c nco-4_0_8;cvs tag -c nco-4_0_8-1

2011-04-27  Charlie Zender  <zender@uci.edu>

	* Report netCDF error strings on DAP-failures in fl_mk_lcl()

2011-04-26  Charlie Zender  <zender@uci.edu>

	* Simplifying configure.in to work with netCDF4 on neige
	Assume that nc-config exists and is findable

	* Lots of small changes related to NOFILL bug

	* Disable NC_NOFILL mode until netCDF 4.1.3 released

2011-04-22  Charlie Zender  <zender@uci.edu>

	* Test disabling NC_NOFILL mode

2011-04-20  Charlie Zender  <zender@uci.edu>

	* Built NCO on NCAR Mirage and GLADE filesystem. Seems OK.

	* Fix NC_BYTE and NC_UBYTE printing for attributes

2011-04-19  Charlie Zender  <zender@uci.edu>

	* Tweak NC_BYTE printing routines (again!)

	* Migrate to netCDF 4.1.2. Test suite passes.

	* Append -lexpat to -ludunits2 to satisfy netCDF 4.1.2
	libudunits2.so dependencies in Debian/Ubuntu systems

	* Remove msrcp, msread, nrnet functionality

	* Implement and document 'hsi get' command

	* Prepare nco_fl_mk_lcl() for HPSS access using 'hsi get' command

2011-04-11  Charlie Zender  <zender@uci.edu>

	* Kludgy fixes to bld/Makefile for AIX which lacks nc-config

2011-04-03  Charlie Zender  <zender@uci.edu>

	* Alter bld/Makefile link line to use nc-config --libs

2011-03-21  Charlie Zender  <zender@uci.edu>

	* Change "no_leap" to "noleap" for CF-compliance

2011-03-18  Charlie Zender  <zender@uci.edu>

	* Fix netCDF4/_FillValue/overwrite-create code path in nco_aed_prc()
	Solves TODO nco1011

	* Fix nco_aed_prc() so that it does not attempt nco_att_rename()
	on non-existent netCDF4 missing value attributes.
	Helps, though does not fix, TODO nco1011 reported by Kyle Wilcox.
	Bug still triggered elsewhere in the code.

	* Clarify code path in nco_aed_prc()

2011-03-11  Charlie Zender  <zender@uci.edu>

	* Include instructions for beta-releases of executables for AIX

2011-03-05  Charlie Zender  <zender@uci.edu>

	* Change prerelease.txt to beta.txt and update it for TAGS

2011-03-04  Charlie Zender  <zender@uci.edu>

	* NB: "bounds" support re-exposes bug TODO nco111 triggered by ncap.in test script

	* Document CF "bounds" support, including -c and -C compliance

	* Implement CF "bounds" support, including -c and -C compliance

	* Add CF "bounds" support to TODO and add some bounds infrastructure

2011-03-03  Charlie Zender  <zender@uci.edu>

	* Complete debian-required change from libcurl3-dev to libcurl4-gnutls-dev

	* Tag first 4.0.8 beta version

2011-03-01  Charlie Zender  <zender@uci.edu>

	* Use %zu instead of %li for printf() format of size_t

2011-02-22  Charlie Zender  <zender@uci.edu>

	* NCO 4.0.7 release procedure:
 	Changes since nco-4_0_6: fix bug_hyp_dgn
	cd ~/nco;cvs tag -d nco-4_0_7;cvs tag -d nco-4_0_7-1
	cd ~/nco;cvs commit -m "Preparing nco-4.0.7 release"
	cvs tag -c nco-4_0_7;cvs tag -c nco-4_0_7-1

	* Add libcurl4-gnutls-dev to debian/control

	* Still need to update MPI executables mpncpdq, mpncra, mpncwa
	to the same feature set as the normal, non-MPI executables so that
	all MPI executables are feature-equivalent to serial codes.

	* Mark nco1007 as fixed and opening nco1010 specifically for degenerate auxiliary hyperslabs

	* Yet more nco_aux.c clean-up

	* Exit with error when nco_aux_evl() finds no coordinates in bounding-box
	This fixes most the rest of TODO nco1007. Only remaining task is
	to (like regular hyperslabs) return nearest point when
	lat_min=lat_max and/or lon_min=lon_max.

	* Clean-up nco_aux.c and most of its functional interfaces

2011-02-21  Charlie Zender  <zender@uci.edu>

	* TODO nco1007 now mitigated so that failure occurs only with auxiliary coordinates

	* Remove two ncks tests from NCO_rgr.pm.
	Should add them back once script allows error exit to be intended result.

	* Threaded needle with new fix so wrapped hyperslabs work as before

	* Added partial fix to TODO nco1007 that now breaks double-wrapped hypserslab test

	* Replace nco_get_vara() with nc_get_vara_double() in nco_lmt_evl()

	* Clean-up, add diagnostics to nco_lmt_evl() while working to fix TODO nco1007

2011-02-17  Charlie Zender  <zender@uci.edu>

	* Change scp paths from greenplanet to gplogin2

2011-02-12  Charlie Zender  <zender@uci.edu>

	* Migrate from old sourceforge (SF) paths, e.g.,
	/home/groups/n/nc/nco/htdocs/index.shtml
	to new paths, e.g.,
	/home/project-web/nco/htdocs/index.shtml

2011-02-03  Charlie Zender  <zender@uci.edu>

	* Change ndrv from 65534 to 65532 as per Griffith Young

2011-01-18  Charlie Zender  <zender@uci.edu>

	* Fix NC_MAX_BYTE typo in nco.h which affected nco_pck.c

2011-01-16  Charlie Zender  <zender@uci.edu>

	* Tidy ncatted.c, ncrename.c

	* Add helpful debugging output to nco_aed_prc()

2011-01-14  Charlie Zender  <zender@uci.edu>

	* NCO 4.0.6 release procedure:
 	Changes since nco-4_0_5: clang, YYYYMMDD-averaging, xtr ass crd
	cd ~/nco;cvs tag -d nco-4_0_6;cvs tag -d nco-4_0_6-1
	cd ~/nco;cvs commit -m "Preparing nco-4.0.6 release"
	cvs tag -c nco-4_0_6;cvs tag -c nco-4_0_6-1

	* Debian rules: Build with dap-netcdf netcdf4 udunits2 by default

	* Update NCO ANNOUNCE to clarify outstanding bugs

2011-01-03  Charlie Zender  <zender@uci.edu>

	* Define and document, but do not solve, degenerate hyperslabbing
	bug reported by Jeff Daily.

	* Be excruciatingly precise about variable list merging

	* Tidy error messages in nco_dmn_utl.c and nco_var_lst.c prior to
	fixing false positive WARNING with ncbo operating on a coordinate
	and the scalar-average of the coordinate.

2010-12-31  Charlie Zender  <zender@uci.edu>

	* Fix nco_var_lst_crd_ass_add() to reset rcd inside loop.
	This fixes TODO nco1006: associated coordinates not found.
	Symptom was that associated coordinates were not added to
	extraction list if they were declared after any non-coordinate
	dimensions.

2010-12-28  Charlie Zender  <zender@uci.edu>

	* Tidy help messages

2010-12-21  Charlie Zender  <zender@uci.edu>

	* Update copyright to 2011

2010-12-06  Charlie Zender  <zender@uci.edu>

	* Change comment line 866 of nco_pck.c to not break PGI pgcc
	From "If max-min = 0 then variable is constant..."
	  to "If max-min == 0 then variable is constant..."
	pgcc is garbage. pgCC is too (cannot compile ncap2).

2010-11-30  Charlie Zender  <zender@uci.edu>

	* Subtract two from ndrv to leave room in packing for missing_value

	* Warn when missing value outside pack range

2010-11-29  Charlie Zender  <zender@uci.edu>

	* Quiet lengthy missing_value != _FillValue message

	* Clean-up and fix order of operations

	* Work to guarantee that _FillValue is within packing range

	* Quiet lengthy thread messages

	* Merge ncflint.c (including MSA, AUX) from 4.0.5 into mpncflint.c

	* Merge ncecat.c (including MSA, AUX) from 4.0.5 into mpncecat.c

	* Merge MSA aspects of ncbo.c from 4.0.5 into mpncbo.c

	* Change URLs of NCO forums to, e.g.,
	http://sourceforge.net/projects/nco/forums/forum/9830

2010-11-23  Charlie Zender  <zender@uci.edu>

	* Merge ncbo.c from 4.0.5 into mpncbo.c
	Code compiles and links. Behavior is untested.

2010-10-27  Charlie Zender  <zender@uci.edu>

	* Fix clang C++ warnings about missing parentheses in while loops
	"while result of assignment is true" (not an equality comparison)
	Many more of these need fixing, need automated method.

	* Rename nco_is_rnk_prv_rth_opr() to nco_is_sz_rnk_prv_rth_opr()
	to reflect actual usage as preserving both size and rank.
	This makes explicit that ncra is not such an operator.

2010-10-26  Charlie Zender  <zender@uci.edu>

	* Change nco_cnv_ccm_ccsm_cf_date() to handle date variable
	in output var list as either NC_INT or NC_DOUBLE.
	Necessitated because nco_cnv_ccm_ccsm_cf_date() is called when
	"date" may be stored as double to facilitate averaging.
	This has been the case for many years, since packing introduced?
	So TODO nco998 appears to be an _old_ bug.
	Now seems to work. Test with
	ncra -O -v nbdate,date,time -p ~/nco/data in.nc ~/foo.nc
	ncks -H -m -v 'date.*' ~/foo.nc

	* Change date in in.cdl to better test YYMMDD averaging

	* Change ncra from rank preserving arithmetic operator to not one
	This allows ncra to average date and helps fix TODO nco998

	* NCO compiles and executes error-and-warning-free with clang

	* Small syntax changes for clang-compliance

2010-10-19  Charlie Zender  <zender@uci.edu>

	* Merge first half of ncbo.c 4.0.5 into mpncbo.c

2010-10-17  Charlie Zender  <zender@uci.edu>

	* Fix typos and missing semi-colons in ncap2 docs

2010-10-13  Charlie Zender  <zender@uci.edu>

	* Revert comment mangled by rx in nco_netcdf.c

	* NCO 4.0.5 release procedure:
 	Changes since nco-4_0_4: fix ncks hyp NC4 bug, ncra CF crd bug
	cd ~/nco;cvs tag -d nco-4_0_5;cvs tag -d nco-4_0_5-1
	cd ~/nco;cvs commit -m "Preparing nco-4.0.5 release"
	cvs tag -c nco-4_0_5;cvs tag -c nco-4_0_5-1

	* Make buildpackage and pbuilder scripts use DEB_BUILD_OPTIONS

	* Revert to pre-20101007 behavior to NOT-translate two-character
	user-input string "\0" to NUL.

2010-10-12  Charlie Zender  <zender@uci.edu>

	* Change bld/Makefile defaults to NETCDF4=Y, UDUNITS2=Y

2010-10-11  Charlie Zender  <zender@uci.edu>

	* Alter builds to use Debian-supplied UDUnits2

	* Verify Debian builds netCDF4 and DAP-enabled NCO with libnetcdf6

	* Change from Debian libnetcdf4 to libnetcdf6 thanks to Maverick Meerkat

	* Fix (perhaps) HDF5_LIB_DIR handling in configure.in

	* Daily-build libnetcdf4 fixes problem writing ushort_max=65535us

2010-10-08  Charlie Zender  <zender@uci.edu>

	* Improve debugging messages in nco_lmt.c

	* Fix typos in comments

	* Improve in.cdl diagnostics for packed variables and _FillValue

2010-10-07  Charlie Zender  <zender@uci.edu>

	* Translate two-character user-input string "\0" to NUL.
	This allows ncatted and ncap2 users to insert NUL into strings
	and to NUL-initialize strings with, e.g.,
	sng_new[lat,sng_lng]="\0";

2010-10-06  Charlie Zender  <zender@uci.edu>

	* Fix bug where ncra incorrectly treats record variable as a
	fixed variable if it is specified in the "coordinates" attribute
	of any variable	in a file being processed under CCM/CCSM/CF
	metadata conventions. This bug caused core dumps. And even
	weirder behavior like creating imaginary time slices.

2010-10-05  Charlie Zender  <zender@uci.edu>

	* Fix ncks chunking bug http://nco.sf.net#bug_ncks_cnk

2010-09-29  U-neige\zender  <zender@uci.edu>

	* Add informative message when using DAP

2010-09-24  Charlie Zender  <zender@uci.edu>

	* NCO 4.0.4 release procedure:
 	Changes since nco-4_0_3: chunking everywhere, ncrename bugfix, ncks -m
	cd ~/nco;cvs tag -d nco-4_0_4;cvs tag -d nco-4_0_4-1
	cd ~/nco;cvs commit -m "Preparing nco-4.0.4 release"
	cvs tag -c nco-4_0_4;cvs tag -c nco-4_0_4-1

	* Use longer but more bullet-proof and less warning-prone netcdf.h
	backwards compatibility token definitions in nco_typ.h

	* Finish handling strtod()/strtol() returns
	Corner case where sng_cnv_rcd == NUL not handled?
	'man strtol' has convoluted description using errno for this

	* Henry fixed ncap2 dsort() bug

	* Clean-up calendar types and acronyms so building with CC=g++ works

2010-09-23  Charlie Zender  <zender@uci.edu>

	* Document that ncecat does not process coordinate variables

	* Adding string conversion checking to nco_lmt.c, nco_att_utl.c
	caused one ephemeral new ncrcat regression? Which has mysteriously
	disappeared....

	* Fix harmless problem that valgrind flagged where ncap2 relied on
	an uninitialized value of dmn->cid in nco_var_fll().

	* Rebuild ncap2...seems to work fine

	* Sort dmn_sct, var_sct in nco.h, change var_sct.is_fix_var flag from int to short

	* Cleanup chunking/deflation initialization

2010-09-19  Charlie Zender  <zender@uci.edu>

	* Note that ncks 4.0.3 and earlier suffer from a bug Henry caught
	in nco_cpy_var_dfn_lmt() where the shuffle and deflate arguments
	to nco_def_var_deflate() were reversed. This would cause
	propagation of deflate and shuffle attributes from in.nc to out.nc
	to go awry when shuffle or deflate, but not both, were true.

	* Continue error handling of string-conversion, now strtod()

2010-09-18  Charlie Zender  <zender@uci.edu>

	* Begin codebase-wide error handling of string-conversion to int
	with nco_sng_cnv_err(), and error handling of string-conversion to
	float with nco_sng_cnv_err(). Many problems encountered.
	Using ncflint.c to prototype strtod() handling and
	ncpdq.c to prototype strtol() handling.

2010-09-17  Charlie Zender  <zender@uci.edu>

	* Make ncpdq follow same rules as ncbo, ncra, etc. in whether to
	pack grid properties. Accomplish this by adding ncpdq (packing,
	not permuting) to list of operators that return true in call to
	nco_is_rnk_prs_rth_opr().

2010-09-16  Charlie Zender  <zender@uci.edu>

	* Prevent ncpdq from packing coordinate variables
	Coordinate variables are 1D, so packing saves little space,
	and makes resulting files hard to read.
	If users wish to pack coordinate variables, we should implement
	new packing policies that explicitly pack coordinate variables.

	* Add synonym/pseudonym section to nco.texi

	* Update notes on propagating dfl_lvl and cnk_sz into ncap2

2010-09-15  Charlie Zender  <zender@uci.edu>

	* Add DMG file info to homepage

2010-09-14  Charlie Zender  <zender@uci.edu>

	* Document chunking better in nco.texi

	* Clean-up ncflint.c, ncwa.c, ncra.c

2010-09-14  Henry Butowsky  <henryb@hush.com>

	* Enabled chunking in ncwa

2010-09-13  Charlie Zender  <zender@uci.edu>

	* Fix erroneous error exit in ncrename when no attributes were renamed
	Code was working and writing correct file then exiting as if error
	had occurred since the return code was not handled properly.

	* Implement nco_inq_var_packing() in ncks printing

	* Change metadata print format to be more Englishy

2010-09-08  Charlie Zender  <zender@uci.edu>

	* Maintain input deflation level where identifiable (fixes TODO nco990)

	* Create test case to diagnose TODO nco990:
	ncks maintains input deflation level, other operators do not

	* Implement nco_sng_cnv_err() for strtol()-type calls, fixes TODO nco987

	* Use NCO_SNG_CNV_BASE10 instead of naked 10

2010-09-06  Charlie Zender  <zender@uci.edu>

	* Add chunking options to user-visible documentation

	* Add (finally) chunking infrastructure to all operators
	Exception is ncwa which does not yet use lmt_all_sct (why?)
	Capability not yet vetted, yet regression tests all pass

2010-09-03  Charlie Zender  <zender@uci.edu>

	* Remove SDO from most of homepage since name never stuck

2010-09-02  Charlie Zender  <zender@uci.edu>

	* NCO 4.0.3 release procedure:
 	Changes since nco-4_0_2: nco_cnv_ccm_ccsm_cf_date() bug, ncbo bug, configure tweaks
	cd ~/nco;cvs tag -d nco-4_0_3;cvs tag -d nco-4_0_3-1
	cd ~/nco;cvs commit -m "Preparing nco-4.0.3 release"
	cvs tag -c nco-4_0_3;cvs tag -c nco-4_0_3-1

	* Document ncra date bug at http://nco.sf.net#bug_ncra_date

2010-09-01  Charlie Zender  <zender@uci.edu>

	* Belatedly removed nco_cal.[ch] (subsumed into nco_cln_utl.[ch])

	* Document UDUNITS_PATH and UDUNITS2_XML_PATH in nco.texi

2010-08-31  Charlie Zender  <zender@uci.edu>

	* Add protective #ifndef clauses to netCDF4 token definitions in nco_utl.hh
	#ifndef <TOKEN>; #define <TOKEN> in Makefile.old

	* Change conditions on compatibility token definitions from
	#ifdef ENABLE_NETCDF4 to #ifndef <TOKEN>; #define <TOKEN> in Makefile.old
	since that more precisely determines when token definitions are needed

	* Document TODO nco986, clean up ncbo.c patch

2010-08-30  Charlie Zender  <zender@uci.edu>

	* Document TODO nco986, an ncbo bug exposed by AIX xlC compilers. No fix yet.

	* Clean-up nco_cal.c

2010-08-09  Charlie Zender  <zender@uci.edu>

	* NCO fails dpkg-buildpackage configure-build with shared netCDF4 in /usr/local
	This may be expected and OK because buildpackage checks, with
	dh_shlibdeps, that shared library dependencies are resolvable
	within the dpkg universe which does not include /usr/local.
	Thus, this builpackage problem may vanish with netCDF .debs
	that include libnetCDF4.so.

	* NCO seems to configure-build fine with shared netCDF4 in /usr/local

	* Finally built recent netCDF with shared libs in /usr/local to
	facilitate testing NCO configure mechanism with shared libs.

	* Relax configure rule that netCDF4 must be built static

2010-08-05  Charlie Zender  <zender@uci.edu>

	* Revised M4 definition of NCO_CHECK_FUNCS provided by Eric Blake of RedHat

	* NB: configure is currently broken due to NCO_CHECK_FUNCS m4 macro

	* Make ncks --data synonymous with ncks -H

2010-07-29  Charlie Zender  <zender@uci.edu>

	* Ensure CPP validity of NCO_CHECK_FUNCS tokens with AS_TR_CPP

	* Add whitespace to clarify conditional #include config.h, getopt.h and nco_getopt.h

	* Look for udunits2.xml in /usr/local/share/udunits/

	* Correct nco_getopt.[ch] handling by autotools

	* Using M4 definition of NCO_CHECK_FUNCS provided by Eric Blake of RedHat

2010-07-28  Charlie Zender  <zender@uci.edu>

	* Allow DEB_BUILD_OPTIONS to Debian rules for netCDF4/UDUnits2

	* Fix compiler error warning initialization (CEWI) problems in nco_cln_utl.c

	* Do not write to NULL-pointer for date in nco_cnv_ccm_ccsm_cf_date()

2010-07-27  Charlie Zender  <zender@uci.edu>

	* Add more complicated build instructions for ./configure to homepage

	* Configure now works with ncap2, netCDF4, UDUnits2, netCDF-DAP on givre

	* Always include -lcurl when building with DAP

	* Place configure GSL switches after netCDF switches

	* Change configure defaults to enable-dap-netcdf=yes and enable-dap-opendap=no

2010-07-09  Charlie Zender  <zender@uci.edu>

	* Add prerelease.txt and point to from homepage

	* Fix definition of nco_udunits2_xml in configure.in

2010-07-05  Charlie Zender  <zender@uci.edu>

	* Add -lresolv to MACOSX links in Makefile.old

	* Add x86_64 to MACOSX possibilities in pvmgetarch

2010-06-28  Charlie Zender  <zender@uci.edu>

	* Make ncatted man page lint-compliant by removing complex example

2010-06-27  Charlie Zender  <zender@uci.edu>

	* Add debian/source/format to Debian build procedures

	* NCO 4.0.2 release procedure:
 	Changes since nco-4_0_1: namespace, ncatted NUL, ncap2 1-d arrays
	cd ~/nco;cvs tag -d nco-4_0_2;cvs tag -d nco-4_0_2-1
	cd ~/nco;cvs commit -m "Preparing nco-4.0.2 release"
	cvs tag -c nco-4_0_2;cvs tag -c nco-4_0_2-1

2010-06-22  Charlie Zender  <zender@uci.edu>

	* Fix ncap2 to correctly cast variables with single dimension of size one
	Formerly, ncap2 wrote these as scalars in certain situations
	Thanks to Hugo for pointing this out and to Henry Butowsky for fixing it

2010-06-21  Henry Butowsky  <henryb@hush.com>

	* Fixed bug with casting  a variable of size one.
	This NOW works 'defdim("one",1);irmax[$one]=20L;'

2010-05-24  Charlie Zender  <zender@uci.edu>

	* Mark Hadfield reports that my Cygwin ncap2 build works fine
	His machines have working java setup, mine do not
	Either way, all NCO-caused issues with Cygwin have been resolved

2010-05-20  givre zender  <zender@uci.edu>

	* Makefile fixes for netCDF4 on AIX (bluefire)

2010-05-19  givre zender  <zender@uci.edu>

	* Fix Makefile.old for libnco_c++.a build on Cygwin

2010-05-03  Charlie Zender  <zender@uci.edu>

	* Upgrading to Kubuntu 10.04 Lucid Lynx failed, so spent day to
	get NCO running on Cygwin 1.7.5-1 under Vista. Everything was supplied by
	Cygwin:	GSL, or compiled fine from source: netCDF4/HDF5 and Antlr
	(actually antlr-2.7.7 needs #include <cstring> patch to CharScanner.hpp).
	So NCO with DAP, UDUnits2, netCDF4, ncap2 built fine! Amazing.
	Only problem is executing ncap2, which cannot find java.

2010-05-02  Charlie Zender  <zender@uci.edu>

	* Generate autoconf/libtool sources with Ubuntu 10.04 Lucid Lynx stack

2010-04-29  Charlie Zender  <zender@uci.edu>

	* Clean-up nco_aux.[ch] to work better with WRF files

2010-04-27  Charlie Zender  <zender@uci.edu>

	* Merge Francesco Paolo Lovergine's downstream Debian changes

2010-04-27  Henry Butowsky  <henryb@hush.com>

	* Added to manual chapter on GSL Random Number generation

2010-04-18  Charlie Zender  <zender@uci.edu>

	* Allow deflation and chunking on both netCDF4 filetypes

	* Warn when attempting to deflate or chunk either netCDF3 filetype

2010-04-09  Charlie Zender  <zender@uci.edu>

	* Fix off-by-one error in ncatted appends for type NC_CHAR (TODO nco985)
	Extra NULs are no longer inserted with each append
	Thanks to A.T. Wittenburg for this bug report

	* Clean-up ncatted to address NUL-append problem

2010-04-08  Charlie Zender  <zender@uci.edu>

	* Namespace patches seem to work with bld/Makefile and with configure.

	* Apply patches from Denis Nadeau to prevent namespace clashes
	between NCO symbols generated by Flex/Bison, and those symbols
	generated by other programs (MPI, netCDF) that also use
	Flex/Bison.

2010-04-06  Charlie Zender  <zender@uci.edu>

	* Oops! VERSION file released with 4.0.1 may say version is 4.0.0?

	* NCO 4.0.1 release procedure:
	Changes since nco-4_0_0: fix_rec_dmn, mk_rec_dmn, .ncrename
	cd ~/nco;cvs tag -d nco-4_0_1;cvs tag -d nco-4_0_1-1
	cd ~/nco;cvs commit -m "Preparing nco-4.0.1 release"
	cvs tag -c nco-4_0_1;cvs tag -c nco-4_0_1-1

2010-04-05  Charlie Zender  <zender@uci.edu>

	* Revert change to libnetcdf-dev (>= 1:4.0.0) in control since
	Ubuntu does not yet support newer version.

2010-04-04  Charlie Zender  <zender@uci.edu>

	* Change Debian to libnetcdf4 with libnetcdf-dev (>= 1:4.0.0) in control

2010-03-29  Charlie Zender  <zender@uci.edu>

	* Cleanup and document '--mk_rec_dmn' switch

2010-03-22  Henry Butowsky  <henryb@hush.com>

	* Add '--mk_rec_dmn' switch to ncks:
	Allows user to (re-)define the record dimension. If the redefined
	record dimension is not the first dimension of a given variable,
	then ncks fails with an error message.

2010-03-15  Charlie Zender  <zender@uci.edu>

	* Remove consti-fication of return values in global functions

2010-03-13  Charlie Zender  <zender@uci.edu>

	* Comment-out "\input texinfo" from my-bib-macros.texi to prevent
	that string from appearing in printed output.

2010-03-11  Charlie Zender  <zender@uci.edu>

	* Fix ncrename.c to not die after skipping non-existent targets
	(variables/dimensions/attributes) preceded by '.'. Longstanding bug!

	* Supercede NO_REC_DMN with FIX_REC_DMN

	* Various cleanups of ncoGrammer.g, nco_mss_val.c, ncks.c, nco_var_utl.c

2010-03-11  Henry Butowsky  <henryb@hush.com>

	* Add '--no_rec_dmn' switch to ncks: causes record dimension in
	input to be converted to a regular dimension in output.

2010-03-01  Henry Butowsky  <henryb@hush.com>

	* Added to manual chapter on Re-basing Time Coordinate

2010-02-16  Charlie Zender  <zender@uci.edu>

	* Cleanup nco_lmt.c

2010-02-16  Henry Butowsky  <henryb@hush.com>

	* Add ncrcat tests for modifications below

2010-02-15  Henry Butowsky  <henryb@hush.com>

	* Hyperslab limits of type lmt_crd_val/lmt_udu_sng with
	stride > 1 now work with multifile operators, e.g.,
	ncrcat -v time -d time,3.0,30.0,8 t1.nc t2.nc out.nc

2010-02-09  Charlie Zender  <zender@uci.edu>

	* Remove MPI print line from non-MPI code in mpncra.c to fix build
	bug reported by Mark Van Moer

2010-02-05  Charlie Zender  <zender@uci.edu>

	* Cleanup ncbo.c

2010-01-29  Henry Butowsky  <henryb@hush.com>

	* Tidy-up value_list action in tree parser.
	  Added value_list_string for NC_STRING

	* Added ncap_typ_hgh() to libnco

2010-01-26  Charlie Zender  <zender@uci.edu>

	* As of 20091030 NCO_TYP_INT defaults to int rather than long
	Following changes bring nomenclature into alignment with this

	* Change NC_INT variable names from *_lng to *_ntg

	* Change ptr_typ union for NC_INT from lp to ip

	* Change val_typ union for NC_INT from l to i

	* Remove nco_gmm.[ch] to avoid Burkardt copyright
	Gamma functions now supplied by GSL.

	* Replace " != NULL" and " != NULL_CEWI" with ""
	This is just code cleanup which is always valid
	When pointer values are evaluated as boolean conditions, it is
	identical to comparing the pointer to NULL.
	Hence code now has, e.g., if(cmd_ln) ... instead of if(cmd_ln != NULL)
	Could/should also replace "foo == NULL" with !foo?

2010-01-19  Charlie Zender  <zender@uci.edu>

	* Workaround ncoGrammer.g dependence on NC_MAX_INT which DNE
	in netcdf.h until ~2009

2010-01-19  Henry Butowsky  <henryb@hush.com>

	* Add chapter on "GSL Least-Squares Fitting" to ncap2 manual

2010-01-18  Charlie Zender  <zender@uci.edu>

	* Fix out of range index in fmc_gsl_cls.c

2010-01-14  Charlie Zender  <zender@uci.edu>

	* Patch configure.in for broken GSL installations like bluefire's,
	where GSL exists though gsl-config does not

	* Only attempt duplicating netCDF4 settings when output is netCDF4
	Do not rely on no-ops from netCDF3 and netCDF4-classic files

2010-01-08  Charlie Zender  <zender@uci.edu>

	* Patch --enable-netcdf-4 implementation

2010-01-05  Charlie Zender  <zender@uci.edu>

	* configure: make --enable-netcdf-4 synonym for --enable-netcdf4

	* Add ${misc:Depends} to Depends rule in debian/control

	* NCO 4.0.0 release procedure:
	Changes since nco-3_9_9: bilinear, fitting, chunking
	cd ~/nco;cvs tag -d nco-4_0_0;cvs tag -d nco-4_0_0-1
	cd ~/nco;cvs commit -m "Preparing nco-4.0.0 release"
	cvs tag -c nco-4_0_0;cvs tag -c nco-4_0_0-1

	* Change HAVE_NEW_CHUNKING_API to NC_HAVE_NEW_CHUNKING_API to
	leverage information now in netcdf.h about correct API.
	Required for successful .deb builds with netCDF3.

2009-12-10  Henry Butowsky  <henryb@hush.com>

	* Added initialization to NULL of chunk sizes prs_arg.cnk_sz in
	ncap2.cc. This was causing a bug on CentOS builds.

2009-11-20  Henry Butowsky  <henryb@hush.com>

	* Added to manual chapter on bilinear_interp_wrap()

2009-11-16  Henry Butowsky  <henryb@hush.com>

	* Tidy ups in main() ncpdq/ncecat/ncflint/ncra/ncbo

2009-11-09  Henry Butowsky  <henryb@hush.com>

	* Modify 'dsort(var,&var_mp)'
	if output file is netcdf4 then the created map is of type NC_UINT64
	else it is of type NC_INT

	* Refactor all gsl_stats code -hnd_fnc_stat? So that
	the 'size_t n' argument is user input to functions

2009-11-07  Charlie Zender  <zender@uci.edu>

	* Verify nco_is_spc_in_crd_att() implementation on NARCCAP file

	* Add nco_is_spc_in_crd_att() to test whether variable is
	specified in "coordinates" attribute

	* Change sprintf() and scanf() formatting for nco_int from long to int

	* Implement empirical list of N-D coordinate "fixed" variables:
	lat, lon, lev, longxy, latixy

	* Change fixed variable exclusion condition from is_ncbo to
	is_rnk_prs_rth_opr()

2009-10-30  Charlie Zender  <zender@uci.edu>

	* #define NCO_INT NCO_TYP_INT instead of NCO_TYP_LONG
	Longs are 8-bytes on 64-bit systems, and NCO_INTs are always 4 bytes.
	Stuffing the 4 bytes into 8 bytes of RAM is harmless locally, and
	ensures the NCO code is robust in other ways.
	However, it also seems to confuse/break DAP-handling of ints.

2009-10-29  Charlie Zender  <zender@uci.edu>

	* Add short option -6, and better document -6, --64, --64bit options

2009-10-21  Henry Butowsky  <henryb@hush.com>

	* Ensure ncap2 compiles	with NCO_INT==NCO_TYP_INT. Affects
	fmc_all_cls.cc msk_cls srt_cls fmc_gsl_cls.cc, map_srt_tmp.hh,
	ncoGrammar.g

2009-10-15  Henry Butowsky  <henryb@hush.com>

	* Tidy-up sort methods srt_cls

2009-10-13  Henry Butowsky  <henryb@hush.com>

	* Add secret flag tst_udunits option to ncks.
	Usage: --tst_udunits,'units_in','units_out','calendar type'

2009-09-30  Charlie Zender  <zender@uci.edu>

	* Remove attempt to set chunking in ncap2 writes

2009-09-26  Charlie Zender  <zender@uci.edu>

	* Add CNK option to Makefile to set HAVE_NEW_CHUNKING_API to
	handle netCDF 4.0.x vs. netCDF 4.1+ chunking API differences

	* Fix library flags for parallel HDF/netCDF4

2009-09-24  Henry Butowsky  <henryb@hush.com>

	* Add manual sub-section on calendar CF support in UDUnits node

2009-09-21  Charlie Zender  <zender@uci.edu>

	* Implement Intel mpicc/mpiCC compilers on greenplanet with lustre

2009-09-11  Henry Butowsky  <henryb@hush.com>

	* Committed first cut of nco_cal.{c,h}

	* These are calendar functions for hyperslabbing coordinate
	variables with CF attribute "calendar". Currently supported
	are "360_day","no_leap","365_day". Other values for date
	evaluation default to "standard", the  	UDUnits1/2 calendar
	functionality. NB: regardless of the chosen calendar type all date
	strings are parsed by UDUnits1/2

2009-08-28  Charlie Zender  <zender@uci.edu>

	* Add spiral logo by Andrea Cimatoribus to bakeoff

2009-08-26  Henry Butowsky  <henryb@hush.com>

	* Change nco_lmt_udu_cnv() UDUnits1 code branch
	Parse bare date with utScan() instead of manually

2009-08-25  Charlie Zender  <zender@uci.edu>

	* Add numeric cog logo by Rob Hetland to the bakeoff

2009-08-21  Henry Butowsky  <henryb@hush.com>

	* Tidy-up of srt_cls---functions for sorting vars

2009-08-21  Henry Butowsky  <henryb@hush.com>

	* Fix spline interpolation with	gsl-1.12

	* Tidy-up gsl_spl_cls()

2009-08-19  Henry Butowsky  <henryb@hush.com>

	* Add first cut of GSL least squares fitting to fmc_gsl_cls

2009-08-17  Henry Butowsky  <henryb@hush.com>

	* Modify nco_lmt_typ() to recognize plain dates of form
	"%d-%d-%d" as valid UDUnits strings

2009-08-10  Charlie Zender  <zender@neige>

	* Define chunking compatibility tokens in nco_netcdf.c

	* Verify WIN32 build on neige

2009-08-07  Charlie Zender  <zender@uci.edu>

	* Chunking passes all regression tests and makes sense at last

	* Ensure that record, compressed, and checksummed variables are
	chunked, stay chunked, and are not subject to unchunking attempts.
	Passes regression tests.

	* Only fill in shuffle, deflate, dfl_lvl when pointers are
	non-NULL in netCDF3 nco_inq_var_deflate()

	* Add nco_inq_var_fletcher32()

2009-07-26  Charlie Zender  <zender@uci.edu>

	* More man page tweaks for ellipses

2009-07-24  Charlie Zender  <zender@uci.edu>

	* Fix small memory leak in nco_vrs_att_cat()

2009-07-23  Charlie Zender  <zender@uci.edu>

	* Remove NULL-dereferencing, segfault-causing problem in nco_netcdf.c

2009-07-21  Henry Butowsky  <henryb@hush.com>

	* Add first cut of bil_cls - functions for bilinear interpolation
	of gridded 2D data

2009-07-16  Charlie Zender  <zender@uci.edu>

	* Replace ellipsis ("\.\.\.") to better ROFF ellipsis ("\ .\|.\|.\ ")
	Found this hack by examining /usr/share/man/man1/nroff.1.gz

	* Convert ROFF hyphens ("-") to ROFF minuses ("\-")

	* Examined Debian build logs and cleaned up minor problems

	* Correct ROFF hypens to minuses, and format ellipsis in man pages

	* NCO is once again C++-compliant, compiles/runs/tests fine with g++

	* Explicitly set ddra_info.flg_ddra=False in g++-compiled code
	since C++ does not allow structure-member initialization

	* Satisfy C++ by explicitly casting (void *) to (lmt_sct *) and to
	(char *) (rather than relying on implicit conversion)

2009-07-15  Charlie Zender  <zender@uci.edu>

	* Thank all packagers in nco.texi

	* Barry deFreese uploaded 3.9.9 to Debian Sid. Hallelujah!

	* NCO 3.9.9 release procedure:
	Changes since nco-3_9_8: chunking, NC_STRING, GSL stats/interp, rebasing
	cd ~/nco;cvs tag -d nco-3_9_9;cvs tag -d nco-3_9_9-1
	cd ~/nco;cvs commit -m "Preparing nco-3.9.9 release"
	cvs tag -c nco-3_9_9;cvs tag -c nco-3_9_9-1

	* Cleaned up and annotated copyright history in copyright file

	* Added Benjamin Sittler and John Burkhardt to copyright file

	* Received copyright assignment and removed Henry Butowsky
	from copyright headers in nco_msa.c, nco_msa.h

	* Received copyright assignment and removed Karen Schuchardt
	from copyright headers in nco_aux.c

2009-07-14  Charlie Zender  <zender@uci.edu>

	* Henry fixed UDUnits1 code to pass all UDUnits2 regression tests

2009-07-13  Charlie Zender  <zender@uci.edu>

	* Cleanup and annotate nc_def_var_chunking() API problems

	* Fix HAVE_NETCDF4_H test when enable_netcdf4=yes

	* Change Debian tgz file suffix from erroneous '-1.tar.gz' to '.orig.tar.gz'

	* Upgrade debhelper compatibility by changing debian/compat from 4 to 5

	* Fix configure.in bug in HAVE_NETCDF4_H test

2009-07-12  Charlie Zender  <zender@uci.edu>

	* 20090712: For unknown reason autobuild sees netCDF4 netcdf.h
	header when it should not. Moreover, autobuild thinks
	"const nco_string *sng" conflicts with "const char **sng"
	in all nc_put_var?_string() and nc_put_att_string() functions.
	Even though nco_string = char * = should be synonymous
	Implement kludge workaround to latter until former is solved

	* Fix prototype error for NCO_GET_VAR[1ASM]_USHORT, NCO_GET_ATT_USHORT
	Buffer had erroneously been set to nco_ubyte in these functions

	* Introduce HAVE_NETCDF4_H to indicated presence of netCDF4
	headers but not necessarily netCDF4 libraries.
	Use HAVE_NETCDF4_H instead of ENABLE_NETCDF4 in some checks
	ENABLE_NETCDF4 now refers to presence of netCDF4-enabled library
	Thus ENABLE_NETCDF4 implies HAVE_NETCDF4_H
	The converse is not true

	* Clean-up, de-space NCO_rgr.pm

2009-07-07  Charlie Zender  <zender@uci.edu>

	* Add Rich Signell's "cog" logos to homepage and doc directory

2009-06-26  Henry Butowsky  <henryb@hush.com>

	* New GSL class gsl_spl_cls provides GSL spline interpolation wrappers

	* LHS hyperslabs of multidimensional variables with a single index
	three_dmn_var_dbl(1,1,2)=10.0 is equivalent to three_dmn_var_dbl(14)=10.0

2009-06-15  Charlie Zender  <zender@uci.edu>

	* Restrict gsl_stats_correlation() to NCO_GSL_MINOR_VERSION >= 10

2009-06-14  Charlie Zender  <zender@uci.edu>

	* Only unchunk chunked variables

2009-06-11  Charlie Zender  <zender@uci.edu>

	* Clean-up re-basing code

2009-06-09  Charlie Zender  <zender@uci.edu>

	* Chunking works: plc=all for map=rd1,dmn
	Chunking fails  : plc=g?d for map=rd1,dmn
	Chunking fails  : plc=uck

	* Allow cnk_map=dmn to work with record hyperslabs, e.g.,
	ncks -O -4 -D 4 --cnk_map=dmn -d time,0,3 ~/nco/data/in.nc ~/foo.nc

	* Improve chunking corner-case logic

	* Restore precedence of explicitly specified chunking for record
	dimension over that implicitly specified by chunking map rd1

	* Discriminate between BASIC_DMN and non BASIC_DMN

	* Fix chunking to look at dmn_sz_org for record variables

2009-06-05  Henry Butowsky  <henryb@hush.com>

	* nco_lmt_udu_cnv() supports UDUnits2 for parsing
	timestamps in user specified co-ordinate limits

	* Added hnd_fnc_stat4() method to gsl_cls to handle
	gsl_stats_covariance/gsl_stats_correlation
        gsl_stats_pvariance/gsl_stats_ttest

2009-06-02  Charlie Zender  <zender@uci.edu>

	* Add CUDA options to Makefile

2009-05-29  Charlie Zender  <zender@uci.edu>

	* Improve chunking diagnostics when copying files with ncks

	* ncks and ncecat chunksize implementations seem to perform identically

	* Implement new chunksize API into ncecat.c for testing

	* Remove old chunksize API from non-ncks operators

2009-05-29  Henry Butowsky  <henryb@hush.com>

	* Tidy up nco_lmt_udu_cnv() into three functions
	1) for no udunits
	2) for udunits1
	3) for udunits2

2009-05-26  Charlie Zender  <zender@uci.edu>

	* Change rcd_one to rd1

	* Add chunksize usage to ncks in nco_ctl.c, nco.texi, ncks.1

	* Improve cnk_map/cnk_plc defaults, minimize their main.c footprints

	* ncks copies original deflation and chunking parameters by default

2009-05-25  Charlie Zender  <zender@uci.edu>

	* Per-dimension chunksizes in nco_prn()

	* nco_cnk_sz_set() beta works well, still need uck

	* Draft nco_cnk_sz_set() ready for testing

	* Add nco_vrs_att_cat() for later use

	* Harmless nco_cnk_sz_get() implemented for ncks

2009-05-22  Charlie Zender  <zender@uci.edu>

	* Comment lmt_all_lst handling

	* Adapt chunksize infrastructure from limit parsing

	* bin_cnt.nco documentation

	* nco_typ_sgn() infrastructure

2009-05-17  Charlie Zender  <zender@uci.edu>

	* Add nco_cnk.[ch] for chunking functions

2009-05-19  Henry Butowsky  <henryb@hush.com>

	* Committed first cut of GSL statistical functions

2009-05-08  Charlie Zender  <zender@uci.edu>

	* Begin chunking documentation in nco.texi

2009-05-07  Charlie Zender  <zender@uci.edu>

	* Add autogen.sh from Magnus Hagdorn

	* Patch configure.in for antlr detection and netcdf.h (Magnus Hagdorn)

	* Clean up NC_STRING handling and add printed ncks info.

2009-05-05  Charlie Zender  <zender@uci.edu>

	* Need test for whether installed netCDF is version 3 or 4

	* Re-do netCDF4 configure: Remove redundants tests, new features:
	enable-netcdf4 is default true
	disable-netcdf4 should work when only netCDF4 installed?

	* Configure allows --enable-shared with netCDF4-enabled NCO

2009-05-05  Henry Butowsky  <henryb@hush.com>

	* Tidy up user error messages in fmc_all_cls.cc

2009-05-04  Charlie Zender  <zender@uci.edu>

	* Create/diagnose more complete netcdf4.nc files from netcdf4.nco

	* Verify that netCDF4 problems in netcdf4.nco as of 20080512 have
	been fixed (by updating to snapshot netCDF4) as of 20090504.
	One remaining problem is that NCO silently succeeds on overflows.
	Should it?

	* Improve logic/warnings/info for DAP-wget fall-throughs

2009-05-03  Charlie Zender  <zender@uci.edu>

	* Some chunking parameters work, some cause "Bad chunk sizes" errors

	* libnco builds cleanly on gcc and icc with netCDF3/4

	* Cast NC_TYPE naked tokens to nc_type to finesse icc compiler warnings

	* Link to libnsl.a only for Solaris and HPUX

	* Tweak NCO wrappers to isolate all weak prototype compiler
	warnings (caused by netCDF4 prototypes) in nco_netcdf.[ch]

2009-05-02  Charlie Zender  <zender@uci.edu>

	* Verify cnk_sz stubs pass all regression tests

	* Allow DAP_NETCDF with ENABLE_NETCDF4 in Makefile's

	* Add cnk_sz to var_sct, dmn_sct, var_dfl_set(), nco_var_free(),
	  and nco_var_dpl()

	* Add chunking section to manual

	* Change cnk_sz from int * to size_t *

	* Include newer nco++ files in "make tags"

	* Improve in_4.cdl availability, conversion, documentation

	* Print chunking parameters, when used, with ncks -m

2009-05-01  Charlie Zender  <zender@uci.edu>

	* Enable command-line chunking arguments to ncks only
	Generic chunking requires dimension/variable-specific routines
	similar to dimension limits for hyperslabbing, something like
	rcd=nco_cnk_sz_set(cnk_sz_lst,cnk_nbr)
	nco_cnk_sz_get(dmn_lst,chk_sz)

	* Add NCO-wide chunking infrastructure

2009-05-01 Henry Butowsky  <henryb@hush.com>

	* Rewrite RHS hyperslabbing routine var_lmt() in grammar file

	* More hyperslabbing tests in ncap2_tst.nco

2009-04-30  Charlie Zender  <zender@uci.edu>

	* Output GCC compiler version from nco_cmp_get()

2009-04-29  Charlie Zender  <zender@uci.edu>

	* Changes since nco-3_9_7: DAP-netCDF support, sort(), GSL distributions, chunksize
	  cd ~/nco;cvs tag -d nco-3_9_8;cvs tag -d nco-3_9_8-1
	  cd ~/nco;cvs commit -m "Preparing nco-3.9.8 release"
	  cvs tag -c nco-3_9_8;cvs tag -c nco-3_9_8-1

	* man pages tweaks for nroff

	* UDUnits2 build tweaks for Debian

	* Change debian files per Barry deFreese's instructions

2009-04-29  Henry Butowsky  <henryb@hush.com>

	* Add array function usage: var_out=array(srt,ncr,$dim);

	* Add more GSL handler functions for _ran and _pdf

2009-04-23  Henry Butowsky  <henryb@hush.com>

	* Add total() regression test for missing_values to ncap2_tst.nco

2009-04-22  Henry Butowsky  <henryb@hush.com>

	* Added unary functions abs(), sqr(), fabs():
	abs()=absolute value for any type; fabs()=absolute value for
	float/double types; sqr()=square of number for any data type

2009-04-21  Charlie Zender  <zender@uci.edu>

	* Add COPYING and INSTALL to top-level directory to make
	autoreconf, and FSF, happy

2009-04-20  Charlie Zender  <zender@uci.edu>

	* ncks --secret lists hidden/unsupported functions

	* UDUnits2 supported by configure --enable_udunits2

2009-04-18  Charlie Zender  <zender@uci.edu>

	* NCO_GSL_MINOR_VERSION >= 8 for select GSL *_cdf_* and *_ran_* functions

	* Add abs() as synonym for fabs() in ncap2

2009-04-16  Charlie Zender  <zender@uci.edu>

	* Add nco_def_var_chunking() and stubs for chunk-size patch

2009-03-27  Charlie Zender  <zender@uci.edu>

	* Add ncap2 threading to all docs: .texi, .man, ncap2 -r

	* Restrict other operators to maximum four threads by default

	* Turn-off ncap2 threading (until ANTLR threading issues resolved?)

	* Clean-up ncap2

2009-03-26  Charlie Zender  <zender@uci.edu>

	* Place new NCO logo candidate, logo_pch, by Tony Freeman, on homepage

2009-03-25  Henry Butowsky  <henryb@hush.com>

	* Change assign action to redefine non-scalar variable with RHS scalar:
	  e.g., n1=three_dmn_var_dbl;n1=20;
	  fills 3-D array n1 with 20 and retains missing value, if any

2009-03-21  Charlie Zender  <zender@uci.edu>

	* More attempts to configure DAP-netCDF

2009-03-20  Charlie Zender  <zender@uci.edu>

	* Introduce full DAP-netCDF block to configure

2009-03-19  Charlie Zender  <zender@uci.edu>

	* Changes since nco-3_9_6: improve GSL-builds, ncap2 threading
	  cd ~/nco;cvs tag -d nco-3_9_7;cvs tag -d nco-3_9_7-1
	  cd ~/nco;cvs commit -m "Preparing nco-3.9.7 release"
	  cvs tag -c nco-3_9_7;cvs tag -c nco-3_9_7-1

	* Remove archaic TEST_DAP

	* Finally get gsl-config to work in automake

	* Cleanup compiler warnings in fmc_gsl_cls.cc

2009-03-18  Charlie Zender  <zender@uci.edu>

	* Dummy stub function so fmc_gsl_cls.o not empty when GSL unavailable

2009-03-17  Charlie Zender  <zender@uci.edu>

	* Convert DAP to DAP_OPENDAP, add stub for DAP_NETCDF in configure.in

	* Eliminate obsolete ${DAP_ROOT} lines from configure.in

	* Rename DAP option to DAP_OPENDAP in preparation DAP_NETCDF option

	* More GSL tidying

2009-03-06  Charlie Zender  <zender@uci.edu>

	* Yet another GSL configure patch

2009-03-05  Charlie Zender  <zender@uci.edu>

	* GSL configure patch

2009-02-27  Henry Butowsky  <henryb@hush.com>

	* Add srt_cls to fmc_all_cls.cc
	Only one method at the moment var_expr.sort()

2009-02-26  Charlie Zender  <zender@uci.edu>

	* GSL build tweaks for NCO_GSL_MINOR_VERSION

	* Adding texinfo bibliography to nco.texi

2009-02-25  Charlie Zender  <zender@uci.edu>

	* Edit ncap2 GSL documentation

2009-02-24  Henry Butowsky  <henryb@hush.com>

	* Add basic macro to the spreadsheet doc/nco_gsl.ods
	Macro outputs selection in texi @multitable format

2009-02-24  Charlie Zender  <zender@uci.edu>

	* Add doc/.htaccess file to copy to sourceforge to re-enable
	directory index display

2009-02-24  Henry Butowsky  <henryb@hush.com>

	* Add chapter on ncap GSL functions

2009-02-23  Charlie Zender  <zender@uci.edu>

	* Use native float prototypes for math functions if __INTEL_COMPILER

2009-02-13  Henry Butowsky  <henryb@hush.com>

	* Global ncap_gsl_mode_prec initialized from environment $GSL_PREC_MODE
	This sets the precision of the Airy & elliptical functions:
	GSL_PREC_DOUBLE=0
	GSL_PREC_SINGLE=1
	GSL_PREC_APPROX=2

2009-02-12  Henry Butowsky  <henryb@hush.com>

	* Made gsl_cls aware of GSL library version
	Add pre-processor token NCO_GSL_MINOR_VERSION
	Token is initialized in nco++/Makefile.old

2009-02-09  Charlie Zender  <zender@uci.edu>

	* Added sym_cls.[cc,hh] and fmc_all_cls.[cc,hh] to configure

2009-02-03  Charlie Zender  <zender@uci.edu>

	* Tweak ./configure for GSL

2009-02-02  Charlie Zender  <zender@uci.edu>

	* Add variable wildcarding in ncatted example

	* Use nco_lst_prs_sgl_2D() not nco_lst_prs_2D() to avert TODO nco944
	in nco_var_lst_crd_add(). Fixes crash on 'ncks -c ~/nco/data/in.nc'
	separately listed as TODO nco963.

	* ncks --no_dmn_var_nm implements naked printing requested in TODO nco962

2009-01-28  Charlie Zender  <zender@uci.edu>

	* Specify Szip library in bld/Makefile[.old] with SZ and SZ_LIB

	* automake now builds src before doc in case makeinfo not present

	* Allow specification of Szip library in bld/Makefile with SZ and SZ_LIB

	* Allow configure to work when GSL_ROOT specified and when
	gsl-config is not necessarily on path

	* Eliminate GSL references from libnco++ when GSL not present

	* Tweak configure.in for GSL

2009-01-27  Charlie Zender  <zender@uci.edu>

	* Prefix GSL header file search path with 'gsl/'

2009-01-22  Charlie Zender  <zender@uci.edu>

	* cd ~/nco;cvs tag -d nco-3_9_6;cvs tag -d nco-3_9_6-1
	  cd ~/nco;cvs commit -m "Preparing nco-3.9.6 release"
	  cvs tag -c nco-3_9_6;cvs tag -c nco-3_9_6-1
	  Changes since nco-3_9_5: fix MSA bug, add GSL

	* Added m4 directory

	* Updated m4, libtool, autoconf macros with autoreconf -f -i

2009-01-20  Charlie Zender  <zender@uci.edu>

	* Separate HDF5_ROOT from NETCDF4_ROOT in bld/Makefile

	* Update copyright year to 2009

2009-01-20 Henry Butowsky  <henryb@ntlworld.com>

	* Removed gmm_inc_cls() and associated code from ncap2_utl.cc.
	Superceded by GSL library gamma functions.

2009-01-16  Charlie Zender  <zender@uci.edu>

	* Add warning about MSA threading bug

2009-01-13  Charlie Zender  <zender@uci.edu>

	* Tweaked bld/Makefile to incorporate Russ Rew's modifications

2009-01-08 Henry Butowsky  <henryb@ntlworld.com>

	* Added gsl wrapper functions fmc_gsl_cls.cc,
	fmc_gsl_cls.hh. Added test script data/gsl_sf.in

2008-12-10  Charlie Zender  <zender@uci.edu>

	* Check for external (rather than internal) netCDF4 function
	nc4_enddef_netcdf4_file() in libnetcdf.a

2008-12-03  Charlie Zender  <zender@uci.edu>

	* Implement --enable-gsl in configure

	* Add ENABLE_GSL functionality to configure and to most source code
	Still needs correct propagation into fmc_cls.cc, maybe ncoGrammar.g

2008-11-04  Charlie Zender  <zender@uci.edu>

	* Document new ncatted rx capabilities for var_nm

2008-11-04  Henry Butowsky  <henryb@ntlworld.com>

	* Added variable wildcarding to ncatted -a arg
	-a att_nm,var_nm,mode,type,type,val
	var_nm can now be a regular expression

2008-10-30  Charlie Zender  <zender@uci.edu>

	* Add GSL functionality to nco++/Makefile.old

2008-10-29  Charlie Zender  <zender@uci.edu>

	* Update to build on NCAR bluefire

2008-10-17  Charlie Zender  <zender@uci.edu>

	* Add ncdump -k method to learn file format. Revise NCO method.

	* Implement new SF shell access through web.sf.net

2008-10-08  Henry Butowsky  <henryb@ntlworld.com>

	* Added indexing to ncap2 section

2008-10-05  Henry Butowsky  <henryb@ntlworld.com>

	* Added to manual chapter on ID Quoting, include files & general tidy up

2008-10-02  Henry Butowsky  <henryb@ntlworld.com>

	* Reversed out new var/att/dim quoting

	* Tidy up of fmc_cls.cc

2008-09-29  Charlie Zender  <zender@uci.edu>

	* Clean-up ncap_var_var_gmmi() */

2008-09-27  Charlie Zender  <zender@uci.edu>

	* Prototype ncap2 supports for incomplete gamma functions:
	gamma_inc_regular(a,x), gamma_inc_complement(a,x),
	gamma_inc_upper(a,x), gamma_inc_lower(a,x),

2008-09-25  Charlie Zender  <zender@uci.edu>

	* Added nco_gmm.[ch] for incomplete gamma function. Source from
	http://people.scs.fsu.edu/~burkardt/cpp_src/asa032/asa032.html

2008-09-24  Charlie Zender  <zender@uci.edu>

	* Added Invoke.hh

2008-09-24  Henry Butowsky  <henryb@ntlworld.com>

	* ncap2 supports #include files, syntax is #include "pi.nco"

2008-09-22  Henry Butowsky  <henryb@ntlworld.com>

	* Added get_miss() method to utility class returns the missing value
	of a variable in Input/Oytput

2008-09-18  Charlie Zender  <zender@uci.edu>

	* make lib_cln now removes NCO C++ libraries libnco++.a and libnco_c++.a

2008-09-17  Charlie Zender  <zender@uci.edu>

	* --version ported to rest of operators

	* --version only calls nco_vrs_prn() in ncks, rest to follow

2008-09-15  Henry Butowsky  <henryb@ntlworld.com>

	* New rules for variable/attribute/dimension quoting

	* Can now do 'var_nm'@att_nm  or 'var_nm'@'att_nm' or var_nm@'att_nm'

        * Dimension quoting now $'dim_nm'

	* Quoting supports the following characters:
          'a..z'|'A..Z'|0..9|'_'|'-'|'+'|'.'|'('|')'|':'|'@'

2008-09-12  Henry Butowsky  <henryb@ntlworld.com>

	* Added convert(nctype) method

2008-09-02  Charlie Zender  <zender@uci.edu>

	* Add ncks --library to print library version and exit

	* Split nco_cnf_prn() out of nco_lbr_vrs_prn()

2008-09-02  Henry Butowsky  <henryb@ntlworld.com>

	* Re-enabled -f switch in ncap2. Prints methods available to user.

2008-08-18  Charlie Zender  <zender@uci.edu>

	* Fix/cleanup nco_att_cpy() when _FillValue is global attribute

2008-08-14  Henry Butowsky  <henryb@ntlworld.com>

	* Deleted from parser nonsense NCL-style operators "<<=" ">>="

2008-08-05  Charlie Zender  <zender@uci.edu>

	* More nco_aed_prc() cleanup

2008-07-31  Charlie Zender  <zender@uci.edu>

	* nco_aed_prc() cleanup

2008-07-28  Henry Butowsky  <henryb@ntlworld.com>

	* Permanent fix for TODO nco944:
	New parsing function nco_lst_prs_sgl_2D()
        Returns only non-zero length strings unlike nco_lst_prs_2D()

2008-07-25  Charlie Zender  <zender@uci.edu>

	* Applied 20080718 patch to nco_cnv_csm.c and deferred permanent
	fix to TODO nco944: handle redundant whitespace "coordinates"
	attributes before calling nco_lst_prs_2D()

2008-07-23  Charlie Zender  <zender@uci.edu>

	* Notes and cleanup on TODO nco941 kludge

2008-07-22  Charlie Zender  <zender@uci.edu>

	* "ill-defined" warning in nco_var_lst_dvd() uses correct var_typ_fnk

2008-07-18  Charlie Zender  <zender@uci.edu>

	* Allow spaces at the end of CF-convention coordinate attribute
	strings in nco_var_lst_crd_ass_add() call to nco_lst_prs_2d().

2008-07-07  Charlie Zender  <zender@uci.edu>

	* Verify bug TODO nco941 where ncra tries to average nc_char variables
	Reported by Alberto Corbi Bello

2008-06-17  Charlie Zender  <zender@uci.edu>

	* Limit OpenMP thr_nbr_rqs=1 for netCDF4-enabled operators. TODO nco939.

2008-06-02  Charlie Zender  <zender@uci.edu>

	* Patch ./configure for Solaris gcc

2008-05-30  Charlie Zender  <zender@uci.edu>

	* Add Scott's example ncap2 script for 500mb heights

	* Remove _POSIX_SOURCE from ./configure on Solaris

2008-05-26  Henry Butowsky  <henryb@ntlworld.com>

	* mods to ncatted so it works with _FillValue in NETCDF4

2008-05-26  Charlie Zender  <zender@uci.edu>

	* Change test version to 3.9.6

	* Make NCO_NETCDF4_AND_FILLVALUE available in all source files

2008-05-12  Charlie Zender  <zender@uci.edu>

	* cd ~/nco;cvs tag -d nco-3_9_5;cvs tag -d nco-3_9_5-1
	  cd ~/nco;cvs commit -m "Preparing nco-3.9.5 release"
	  cvs tag -c nco-3_9_5;cvs tag -c nco-3_9_5-1
	  Changes since nco-3_9_4: MSA everywhere

	* Correct -X documentation

	* Clean-up nco_aux.c

	* Add -X to ncecat, ncflint, ncpdq

2008-05-11  Charlie Zender  <zender@uci.edu>

	* Add -X to ncbo

	* Add -X to more man pages

	* Improve -X and ncap2 documentation

2008-05-02  Charlie Zender  <zender@uci.edu>

	* Cleanup ncbo, ncecat, ncflint, ncks, ncpdq, ncra *.c files

2008-04-23  Charlie Zender  <zender@uci.edu>

	* Replace H5LT_open_id with H5LT_find_attribute in configure.in
	Fixes cygwin build problem with netCDF4. Thanks to Mark Hadfield.

2008-04-21  Charlie Zender  <zender@uci.edu>

	* Merge recent 3.9.0-1.1 Debian NMU patches into upstream

	* Un-DOS-ify files

2008-04-10  Henry Butowsky  <henryb@ntlworld.com>

	* Added multi-hyperslabbing code to ncra

2008-04-04  Henry Butowsky  <henryb@ntlworld.com>

	* Added multi-hyperslabbing code to ncecat

2008-04-02  Charlie Zender  <zender@uci.edu>

	* Prevent copying global metadata with ncecat -M

	* Print netCDF4-dependent switches only if netCDF4 is enabled

2008-04-01  Charlie Zender  <zender@uci.edu>

	* Add rule to post-process ANTLR-files with broken tokens:
	nco_antlr_pst_prc.pl < ncoParserTokenTypes.hpp > ncoEnumTokenTypes.hpp
	This should fix build problems on Solaris

2008-03-13  Charlie Zender  <zender@uci.edu>

	* Improve error messages

2008-03-06  Charlie Zender  <zender@uci.edu>

	* Add new author's note

2008-03-04  Charlie Zender  <zender@uci.edu>

	* Add man pages to tags

	* cd ~/nco;cvs tag -d nco-3_9_4;cvs tag -d nco-3_9_4-1
	  cd ~/nco;cvs commit -m "Preparing nco-3.9.4 release"
	  cvs tag -c nco-3_9_4;cvs tag -c nco-3_9_4-1
	  Changes since nco-3_9_3: -3, -X, --msa_usr_rdr, ncap2 mask, WIN32

	* Make netCDF4 changes to libnco_c++ back-compatible with
	  netcdf 3.6.1 still widely used including by FC DAP RPMs.

	* Add netCDF4 put_varx_string() functions to nco_c++

2008-03-02  Charlie Zender  <zender@uci.edu>

	* Compiler warning message cleanup for ncks.c, nco_msa.c, nco_aux.c

	* Change malingering GPL2 files to GPL3

2008-02-22  Charlie Zender  <zender@uci.edu>

	* Add auxiliary coordinate test variables to in.cdl

	* Document lon_min,lon_max,lat_min,lat_max ordering

	* Plug auxiliary coordinate memory leaks (aux=malloc(),aux_arg[]=strdup())

	* -X now implies --msa_usr_rdr

2008-02-21  Charlie Zender  <zender@uci.edu>

	* Use 64-bit fill values for uint and long long types

	* Make compatible with hdf-1.8.0 final and netcdf-4.0-snapshot2008022009

	* Transplant chunks of nco_typ.h into nco_utl.hh to make
	libnco_c++ forward-backward compatible with netCDF3/netCDF4

	* Rely on netcdf4 netcdf.h for NCO_FILL_STRING

2008-02-20  Charlie Zender  <zender@uci.edu>

	* Preliminary -X documentation

2008-02-19  Charlie Zender  <zender@uci.edu>

	* Add flg_ddd stub to ncwa to delete degenerate dimensions

	* MSA miscellania

2008-02-18  Charlie Zender  <zender@uci.edu>

	* ncks --msa_usr_rdr causes MSA to leave hyperslabs in user order

2008-02-13  Henry Butowsky  <henryb@ntlworld.com>

	* First cut of NCL-style operators "<<", "<<=", ">>", ">>="

2008-02-06  Henry Butowsky  <henryb@ntlworld.com>

	* Added functions "mask" & "mask_clip"

2008-01-22  Henry Butowsky  <henryb@ntlworld.com>

	* Work-arounds related NCO_NETCDF4_AND_FILL_VALUE changes to
	ncap_var_write_omp(). Added NCAP4_FILL property to prs_cls.

2008-01-17  Charlie Zender  <zender@uci.edu>

	* Re-define NCO_NETCDF4_AND_FILLVALUE to workaround CPP problems

2008-01-16  Charlie Zender  <zender@uci.edu>

	* nco.h now #defines NCO_NETCDF4_AND_FILLVALUE when NCO is
	netCDF4-enabled and nco_mss_val_sng_get() returns "_FillValue"

	* Finish -3 option implementation, add --3 too

2008-01-15  Charlie Zender  <zender@uci.edu>

	* Add -3 option to produce CLASSIC files for symmetry with -4
	option that produces NETCDF4 files

2008-01-11  Charlie Zender  <zender@uci.edu>

	* Add nco_create_mode_prs() functionality to libnco_c++

2008-01-07  Charlie Zender  <zender@uci.edu>

	* Fix OpenMP builds of ncap2 with pgCC

2008-01-06  Charlie Zender  <zender@uci.edu>

	* xlC needs to search /usr/vacpp/include to find atan2()

	* Autoconf builds with AIX fail because unable to find atan2()

	* Use nco_inq_attlen() to avoid pointer warning in nco_aux.c

	* Update copyright year to 2008

2008-01-05  Charlie Zender  <zender@uci.edu>

	* Mark TODO nco852 as done (Henry fixed some time ago)

2007-12-29  Charlie Zender  <zender@neige>

	* Put nco_sng_utl.h in headers that may reference strdup() compatibility function

	* Add math.h definitions to nco_aux.c to resolve M_PI on WIN32

	* Fix strdup()-compatibility function prototype

	* Cleanup some WIN32 warnings

2007-12-22  Henry Butowsky  <henryb@ntlworld.com>

	* Work-arounds for NCO_NETCDF4_AND_FILL_VALUE changes to
	  ncap_var_write_omp(). Added NCAP4_FILL property to prs_cls.

2007-12-20  Charlie Zender  <zender@uci.edu>

	* Use NCO_GET_ATT_CHAR() instead of nc_get_att_text()

	* Change lenp from size_t to long in nco_aux.c

2007-12-19  Charlie Zender  <zender@uci.edu>

	* Verified no new regressions

	* Merged nco_aux patch by Karen Schuchardt

	* Tagged nco-20071219_pre_nco_aux_patch prior to adding nco_aux.c

	* Fix mpncrcat to work with netCDF4 (thanks to Takeshi Enomoto)

2007-12-16  Charlie Zender  <zender@uci.edu>

	* Add ncecat -u mods to mpncecat TODO nco918

2007-12-14  Charlie Zender  <zender@uci.edu>

	* Add ncecat -u example to manual

2007-12-14  Henry Butowsky  <henryb@ntlworld.com>

	* Added new functions atan2(y,x) and pow()

2007-12-13  Charlie Zender  <zender@uci.edu>

	* Add hint for NC_ENOTNC errors

	* Make nco_inq_var_deflate() wrapper support netCDF3 and netCDF4

2007-12-12  Charlie Zender  <zender@uci.edu>

	* Fix output/input file consanguinity (TODO nco836)

2007-12-11  Charlie Zender  <zender@uci.edu>

	* ncks prints netCDF4 LZ compression information to stdout TODO910

	* ncap2 calls nco_thr_att_cat() to archive nco_openmp_thread_number

2007-12-11  Henry Butowsky  <henryb@ntlworld.com>

	* Added print attributes function e.g., print(global@history)

2007-12-10  Charlie Zender  <zender@uci.edu>

	* Fix ncks.1 typos reported by Rich Signell

	* CVS rm ssdap

2007-12-09  Henry Butowsky  <henryb@ntlworld.com>

	* ncap2 now uses ncap_lmt_evl() instead of nco_lmt_evl()
	  This fixes problems with record dimension in limits

2007-12-08  Charlie Zender  <zender@uci.edu>

	* Add hooks to nco_prn_var_dfn() to print compression state

	* cd ~/nco;cvs tag -d nco-3_9_3;cvs tag -d nco-3_9_3-1
	  cd ~/nco;cvs commit -m "Preparing nco-3.9.3 release"
	  cvs tag -c nco-3_9_3;cvs tag -c nco-3_9_3-1
	  Changes since nco-3_9_2: SWAMP, ncecat -u, wget, ncap2 OpenMP, GCC 4.2

	* Update documentation for SWAMP, AGU, and IJHPCA

2007-11-29  Henry Butowsky  <henryb@ntlworld.com>

	* First cut of OpenMP for ncap2

	* ncap2 processes ncap2.in in parallel on LINUX & AIX platforms

2007-11-27  Henry Butowsky  <henryb@ntlworld.com>

	* Added "hyperslab normalization" to the parser

2007-11-16  Charlie Zender  <zender@uci.edu>

	* Add NcapVar.cc to distribution to fix native AIX ncap2 bug

2007-11-13  Charlie Zender  <zender@uci.edu>

	* Propagate Makefile OPTS argument to children

	* Allow specification of record dimension name with ncecat -u dmn_nm

2007-11-11  Charlie Zender  <zender@uci.edu>

	* Add packing caveat to ncrcat and ncecat documentation

2007-10-31  Charlie Zender  <zender@uci.edu>

	* Update man page ncwa.1

	* Add -t thr_nbr to applicable man pages

	* Remove (temporarily?) deprecated ncwa -n and -W options from nco.texi

2007-10-24  Charlie Zender  <zender@uci.edu>

	* OpenMP-enabled, gcc-compiled NCO passes regression test

	* Enable OpenMP with GCC 4.2 gcc, g++, gfortran

	* Change MUST_CONFORM from private() to shared() in ncflint

2007-10-22  Charlie Zender  <zender@uci.edu>

	* Add Makefile support for GCC OpenMP

2007-10-21  Charlie Zender  <zender@uci.edu>

	* Tweak nco_cmp_get() to work with GCC on AIX

2007-10-02  Charlie Zender  <zender@uci.edu>

	* Periods in attribute names choke OPeNDAP
	Temporarily removed att_nm.dot from var_nm.dot in in.nc

2007-09-18  Charlie Zender  <zender@uci.edu>

	* xlC and SGI CC no longer search for <stdint.h> in nco_var.hh

2007-09-17  Charlie Zender  <zender@uci.edu>

	* Add big.nc to CLEANFILES to (hopefully) fix Debian FTBFS problem
	with two consecutive builds

2007-09-12  Charlie Zender  <zender@uci.edu>

	* Add helpful hint for DAP -l mis-users

2007-09-03  Charlie Zender  <zender@uci.edu>

	* Finish implementing and testing wget capability. Looks good.

	* Use wget -r: re-download file (clobber existing file of same name, if any)

	* Remove leading slash from derived local path for HTTP_URL retrievals

2007-09-02  Charlie Zender  <zender@uci.edu>

	* wget retrieval works iff -l used, regardless of -p use

	* More exhaustive debugging and local file searches prior to wget attempt

	* Implement nco_close() to pair with nco_open() in DAP probe.
	  Not doing this previously probably means that NCO via DAP
	  left lots of open files dangling on the DAP server.
	  This may have caused noticeable drag on large jobs.

	* Finish wget draft code, introduce nco_open_flg() for DAP attempts

	* Add stubs to retrieve non-DAP HTTP files with wget

2007-09-01  Charlie Zender  <zender@uci.edu>

	* Fix #ifdef NEED_NC_INQ_FORMAT to have else so NCO/netCDF3
	  build with OPeNDAP DAP=Y option so long as NEED_NCO

2007-08-31  Charlie Zender  <zender@uci.edu>

	* cd ~/nco;cvs tag -d nco-3_9_2;cvs tag -d nco-3_9_2-1
	  cd ~/nco;cvs commit -m "Preparing nco-3.9.2 release"
	  cvs tag -c nco-3_9_2;cvs tag -c nco-3_9_2-1
	  Changes since nco-3_9_1: GPL3, UDUnits2, _FillValue,
	  ncap2 printing

	* Support nco_put/get_att_string/ubyte() now in netCDF4

	* Update to netCDF4 daily snapshot 20070822

	* Abandon TKN2SNG(x) method for nco_mss_val_sng
	  Use direct global variable to get rid of superfluous double quotes
	  This fixes all regressions with _FillValue<->missing_value switch

2007-08-29  Charlie Zender  <zender@uci.edu>

	* Regressions with _FillValue<->missing_value switch

	* Supplant missing_value with _FillValue in documentation

2007-08-29  Henry Butowsky  <henryb@ntlworld.com>

	* First cut of  user functions permute() & reverse()
	  see examples in ncap2.in.

2007-08-23  Charlie Zender  <zender@uci.edu>

	* Implemented Henry's new ncap2 files, smaller ncoGrammer.g

2007-08-22  Charlie Zender  <zender@uci.edu>

	* Quiet UDUnits "override" messages to stderr unless dbg_lvl >= 9

2007-08-21  Charlie Zender  <zender@uci.edu>

	* UDUnits2 finds default database, obeys UDUNITS2_XML_PATH

2007-08-07  Charlie Zender  <zender@uci.edu>

	* Simple UDUnits2 test works with many TODOs for me, Unidata

	* Complete compilable UDUnits2 implementation for all units except
	  (I think) time = time since ... units

	* Splice udunits2 functionality stubs inside HAVE_UDUNITS2 tokens

2007-07-24  Charlie Zender  <zender@uci.edu>

	* pbuilder successfully built an NCO deb in a sid chroot!

2007-07-23  Charlie Zender  <zender@uci.edu>

	* Add pbuilder-sid to build NCO in a chroot environment

2007-07-22  Charlie Zender  <zender@uci.edu>

	* Add license text to nco++ source files

	* Change licenses from GPL2 and FDL1.1 to GPL3 and FDL1.2 for code
	and documentation, respectively

	* Try to prevent debian rules configure/libtool from invoking RPATH

2007-07-19  Charlie Zender  <zender@uci.edu>

	* Add ncap2_tst.nco, Henry's ncap2 test script, to distribution

2007-07-18  Henry Butowsky  <henryb@ntlworld.com>

	* Turned prs_sct into class. It has four methods:
	contructor, ncap_var_init(), ncap_var_write(), ncap_def_ntl_scn()

2007-07-14  Charlie Zender  <zender@uci.edu>

	* Add failsafe NC_FORMAT_CLASSIC definition so tst.cc builds with
	OPeNDAP netcdf.h, which lacks pre-netCDF 3.6.1 tokens

2007-07-09  Henry Butowsky  <henryb@ntlworld.com>

	* First cut of print function can do the following
	  print(var_id),print(var_id,"format_string")

2007-07-04  Charlie Zender  <zender@uci.edu>

	* Warn when nbr_xtr_1 < nbr_xtr_2 in ncbo

	* Note ncap2 type-conversion support

2007-06-30  Charlie Zender  <zender@uci.edu>

	* Add -4 and -L dfl_lvl to man pages

2007-06-29  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-3_9_1-2

	* Define NC_64BIT_OFFSET no-matter-what so FC6 RPMs build with OPeNDAP

	* cd ~/nco;cvs tag -d nco-3_9_1;cvs tag -d nco-3_9_1-1
	cd ~/nco;cvs commit -m "Preparing nco-3.9.1 release"
	cvs tag -c nco-3_9_1;cvs tag -c nco-3_9_1-1
	Changes since nco-3_9_0: netCDF4 deflation support, ncap2 loops,
	build improvements on many platforms

	* Finish deflation in ncap and ncap2

2007-06-28  Charlie Zender  <zender@uci.edu>

	* Beef up deflation documentation

	* Add deflation to low-level ncap, ncap2 routines

	* Put deflation in ARM convention routine

	* Implement deflate command-line switches in all applicable (i.e.,
	variable-defining) operators

	* Allow ncbo to subtract files with more processed variables in file_2
	This is done by excluding file_2 variables that are not in file_1

2007-06-27  Charlie Zender  <zender@uci.edu>

	* Polish deflate functionality and documentation

2007-06-26  Charlie Zender  <zender@uci.edu>

	* Describe deflation in nco.texi

	* Request variable deflation iff dmn_nbr > 0
	This works around netCDF4/HDF5 limitation where deflating a scalar crashes

2007-06-19  Charlie Zender  <zender@uci.edu>

	* nco.spec patch by Daniel to always put netcdf-3 on path and, for
	x86_64, add -L/usr/lib64, when present, to correctly resolve
	32/64-bit libraries

	* Define some netCDF tokens for really old versions of libnetcdf.a
	still in use on enterprise distributions like RHEL/CentOS.
	These tokens need are defined both in nco.h and nco_netcdf.c to
	enforce code firewall to keep netCDF wrappers separate from NCO.

2007-06-18  Charlie Zender  <zender@uci.edu>

	* Remove configure.in rule to add -DNC_64BIT_OFFSET even when DAP version > 3.6.1

	* Add SWAMP test template ~/nco/data/swamp.sh

	* Place DAP netcdf.h path ahead of system netcdf.h path in configure.in

2007-06-14  Charlie Zender  <zender@uci.edu>

	* Fix flukey ncks %s printing

	* Alter bin_cnt.nco to use loops

2007-06-14   Henry Butowsky  <henryb@ntlworld.com>

	* Commited the first cut of while loops and for loops
	Can use "break" & "continue" in both. Can have any level of nesting.
	These are vanilla unoptimized loops. Optimization to come!!

2007-06-07  Charlie Zender  <zender@uci.edu>

	* Add [put/get]_string functions now in netcdf4 daily snapshots
        In particular, synchronize with snapshot2007060701

2007-06-05  Charlie Zender  <zender@uci.edu>

	* Remove stdint.h from xlC and SGI builds of ncap2
	stdint.h "helps" g++ builds (by defining [U]LLONG_MAX)
	stdint.h is required by icpc builds (by defining int64_t)

2007-06-03  Charlie Zender  <zender@uci.edu>

	* Switch to daily snapshot 20070603 for development

2007-06-01  Charlie Zender  <zender@uci.edu>

	* Unable to get compression working. Generates HDF5 errors.

	* Implement --dfl_lvl to set HDF Lempel-Ziv deflation level
	Always turn shuffle on, since it is inexpensive and improves compression

	* Allow user-specified down-conversion of netCDF4->netCDF3

	* Include stdint.h where "long long" types are used
	This should fix build problems with icpc

	* Add nco_var_def_deflate() and stub to libnco

2007-05-31  Charlie Zender  <zender@uci.edu>

	* Fix typos spotted by donor Kevin Raeder

2007-05-25  Charlie Zender  <zender@uci.edu>

	* NC_64BIT_OFFSET patch in configure.in causes beaucoups de RPM warnings

	* Fix version in nco.spec

	* cd ~/nco;cvs tag -d nco-3_9_0;cvs tag -d nco-3_9_0-1
	cd ~/nco;cvs commit -m "Preparing nco-3.9.0 release"
	cvs tag -c nco-3_9_0;cvs tag -c nco-3_9_0-1
	Changes since nco-3_2_0: netCDF4 atomic type support, ncks attributes

	* Fix nco_prn_att() to handle netCDF4 atomic types

	* Use type-appropriate conversion to read ncatted attribute values

	* Document netcdf4 ncatted features

	* Add netcdf4 atomic type functionality to ncatted nco837

2007-05-24  Charlie Zender  <zender@uci.edu>

	* Include NC_UBYTE and NC_STRING as funky variable types in var_lst_dvd()

	* Add better ncdiff regression for packed subtraction

	* Change put_var(var_prc_out[idx]->type) to var_prc_out[idx]->typ_upk
	in arithmetic operators to output inflated variables to disk.
	This should fix TODO nco862, a regression introduced sometime
	between 2.7.1 and 3.2.0 and noticed by Remik Ziemlinski.

	* Postpone 3.9.0 release until ncdiff/packing bug TODO nco862 is fixed

2007-05-23  Charlie Zender  <zender@uci.edu>

	* Add nco_inq_format() compatibility stubs for pre-netCDF3.6.1 libraries

2007-05-22  Charlie Zender  <zender@uci.edu>

	* Added netCDF4 support section: http://nco.sf.net/nco.html#nco4

	* Decided to release as 3.9.0 rather than 3.2.1

	* cvs tag -c nco-3_2_1_beta2
	Changes since last tag:
	NCO builds and tests fine from both netCDF3 and netCDF4!
	Candidate is releasable. ncap2 NC_UBYTE problem is not solved.

	* Testing with ~/c++/ccc.cc shows that NC_UBYTE support is non-trivial
	No need to hold up release to finish this

	* antlr 2.7.6 fails on mpc64.nacs.uci.edu with pgCC
	This does not seem to be an NCO problem

	* NCO builds and tests fine from both netCDF3 and netCDF4!

	* Verified sng2nbr() handles cross-platform strtoll(), strtoull()
	issues with AIX xlC and PGI pgCC compilers.

	* Typecast CEWI variables in nco.h for safety

	* Added sng2nbr() from ~/c++/utl.hh to sdo_utl.hh

2007-05-20  Charlie Zender  <zender@uci.edu>

	* AIX xlC has ncap2 build problem: "std::strtoll" is not declared.

	* Cast all naked nc_type tokens being thrown around in ncap2 code
	In addition to being bad programming style, these naked tokens
	trigger the netCDF3/netCDF4 nc_type incompatibility bug.
	The bug is that the nc_type NC_TYPE tokens are enumerated (enums)
	in netCDF3 and are simple pre-processor tokens in netCDF4.

	* cvs tag -c nco-3_2_1_beta1
	Changes since last tag:
	netCDF3 build works again and tests fine. Huzzah.
	Candidate is releasable except for ncap2 NC_UBYTE problem

	* Add empty netCDF3 forward compatibility stubs for all netCDF4
	new atomic type I/O functions

	* cvs tag -c nco-3_2_1_alpha4
	Changes since last tag:
	netCDF4 works fine with all operators and regression tests.
	Exceptions are that ncap2 does not work with ubyte and that
	netCDF3 does not build because ncoGrammer.g lacks netcdf4 #ifdef's

	* Add netcdf4.nco test script for netCDF4-enabled ncap2

	* Add netCDF4 casting functions ushort(), int64(), etc. to ncap_lex.l

	* Verified ncap ll,LL,ull,ULL,us,ui, etc. parsing works

	* Finished netCDF4'ing ncap_lex.l, ncap_yacc.y, ncap_utl.c

2007-05-19  Charlie Zender  <zender@uci.edu>

	* Verified that ddra.nco works with int64 types so storing large
	counts as floats no longer necessary!

	* cvs tag -c nco-3_2_1_alpha3
	Changes since last tag:
	After netCDF4'ing most files.
	netCDF4 references in ncoGrammer.g break netCDF3 ncap2

	* Success at creating all netCDF4 atomic types with ncap2 except NC_UBYTE

	* Add netCDF4 atomic types (except NC_STRING) ncoGrammer.g

2007-05-18  Charlie Zender  <zender@uci.edu>

	* Add netCDF4 atomic types (except NC_STRING) ncap2_utl.cc, ncap_yacc.y

	* Replace nc_type with nco_rth_prc_rnk() in ncap2.cc

	* Fix type spaghetti in nco_lst_utl.c

	* Create nco_rth_prc_rnk(nc_type) to determine relative precision

	* Add netCDF4 atomic types (except NC_STRING) to ncap_lex.l

	* Add netCDF4 atomic types to nco_rec_var.c, nco_rth_utl.c

	* Commit working build with netCDF4 atomic types in previously listed files

	* Add netCDF4 atomic types to mpncwa.c, nco_lmt.c, nco_lst_utl.c, nco_pck.c

	* Define fl_in_fmt before using in ncap.c, ncap2.cc

	* Working build with netCDF4 atomic types in nco_var_rth.c, nco_var_scv.c

	* Working build with netCDF4 atomic types in nco_var_avg.c

	* Use -Wno-switch to quiet GCC enum warnings on netCDF4 case labels

	* Introduce nco_short in nco_var_scv.c, nco_var_rth.c, nco_var_avg.c

	* cvs tag -c nco-3_2_1_alpha2
	Changes since last tag:
	Prior to adding netCDF4 atomic types to:
	nco_var_scv.c, nco_var_rth.c, nco_var_avg.c

	* Resolve forward-compatibility issues and stub for nc_inq_format()

2007-05-15  Charlie Zender  <zender@uci.edu>

	* Add netCDF4 atomic types to nco_scl_utl.c

	* Add netCDF4 atomic types to nco_mss_val.c

	* Add netCDF4 atomic types to nco_att_utl.c

	* Add netCDF4 atomic types to nco_cnf_typ.c

	* cvs tag -c nco-3_2_1_alpha1
	Changes since last tag:
	Working subset of netCDF4 atomic type features with no regressions

	* Regression tests all fine except for known netCDF4/HDF defects

	* Make fl_out_fmt>=fl_in_fmt ("consanguinity") NCO-wide TODO nco836

	* This seemed to introduce ncap2 regression in both netCDF3/4

	* Use ISO standard strto(l,d,ul) not ato(f,i) to parse ncap2 atomic types

2007-05-14  Charlie Zender  <zender@uci.edu>

	* Support NC_STRING in ncks functions, nco_prn.c, nco_msa.c, libnco_c++

	* Temporarily make fl_out_fmt>=fl_in_fmt ("consanguinity") in ncks

	* Fix fl_out_fmt bug for NC_FORMAT_CLASSIC

	* Add all new netcdf4 atomic data types (except string) to libnco_c++

	* Implement NC_STRING support stubs in nco_typ.h

	* Support NC_INT64 in nco_c++

	* Complete netCDF4 type support (except NC_STRING) in nco_prn.c, nco_msa.c
	ncks now prints netCDF4 atomic types correctly

2007-05-13  Charlie Zender  <zender@uci.edu>

	* Support netCDF4 types in nco_typ_fmt_sng()

	* Make tst.cc produce netCDF4 files when compiled with netCDF4

	* Printing changes fix many netcdf4 regressions

	* Commit major changes to ncks printing

2007-05-12  Charlie Zender  <zender@uci.edu>

	* ncks does not copy scale_factor and add_offset to output files!

	* ncks reports input file type, e.g., NC_FORMAT_CLASSIC,
	NC_FORMAT_NETCDF4

2007-05-11  Charlie Zender  <zender@uci.edu>

	* Explain ncwa memory usage in nco.texi

2007-05-09  Charlie Zender  <zender@uci.edu>

	* Comment out unused variables. These caused noisy compiles.
	Retain some for future use in cases where they might help in
	debugging or where their presence enhances code symmetry or would
	be non-trivial to re-introduce. Mark such variables as CEWI
	RUVICFFU = Retain Unused Variables In Comments For Future Use

	* Re-format error messages to print error code if available,
	and to always print msg, if any

	* Changed prototype and disambiguated ncap_sclr_var_mk()
	This allows g++ 4.1.2 to compile ncap2 again.

2007-05-08  Charlie Zender  <zender@uci.edu>

	* Remove OpenMP and thr_nbr references from ncrename.c

	* Fix regressions stemming from passing --fl_fmt to ncatted

	* Put ${NETCDF_INC} before ${ANTLR_INC} in CPPFLAGS in nco++ Makefile
	This ensures netCDF4 in /usr/local/netcdf4 is searched before
	ANTLR in /usr/local (which often contains netCDF3 as well).

	* Add "copy global attributes" example to ncks documentation

	* Add "growing dimensions" example to ncap2 documentation

	* Use ncks -G to avoid copying global metadata during appends

2007-05-05  Charlie Zender  <zender@uci.edu>

	* Working on 2D grid descriptions and ncap2 documentation

2007-04-24  Charlie Zender  <zender@uci.edu>

	* Add "build-from-source" requirements to homepage

	* Backport settings (e.g., -c99) for SGI IRIX 6.5 compilers

2007-04-19  Charlie Zender  <zender@uci.edu>

	* cd ~/nco;cvs tag -d nco-3_2_0;cvs tag -d nco-3_2_0-1
	  cd ~/nco;cvs commit -m "Preparing nco-3.2.0 release"
	  cvs tag -c nco-3_2_0;cvs tag -c nco-3_2_0-1
	Changes since nco-3_1_9: rmssdn normalization bugfix,
	exclusion list handling more flexible, RAM variables.

2007-04-18  Charlie Zender  <zender@uci.edu>

	* Remove obsolete NR indexx*() routines

	* nco_var_nrm_sdn() returns mss_val when N=0 or 1

	* Allow absent variables with EXCLUDE_INPUT_LIST in nco_var_lst_mk()

2007-04-18   Henry Butowsky  <henryb@hush.com>

	* Tested nco_put_var_mem() & nco_get_var_mem()
	  Can now hyperslab RAM variables on the RHS
	  RAM hyperslabs on the LHS to follow shortly

2007-04-17  Charlie Zender  <zender@uci.edu>

	* Remove obsolete -d hyperslab options from ncap, ncap2 code and docs

	* Insert computation of anomaly in ncap2 standard deviation examples

2007-03-31  Charlie Zender  <zender@uci.edu>

	* Change -s "" to -s '' in most all examples to prevent	unintended
	ncap2 behavior

2007-03-30  Charlie Zender  <zender@uci.edu>

	* Implement all GCC custom switches in nco++, nco_c++ directories
	nco directory and configure.in have all cust switches except -Werror
	-Werror still triggers problems with ncap_lex.c

	* Add wildcards to end of all compiler tests in configure.in
	so that, e.g., CC='gcc' tests same as CC='gcc -std=c99'

2007-03-29  Charlie Zender  <zender@uci.edu>

	* Fix ncap2 comparison between signed/unsigned integer expression warnings

	* Fold in Daniel's nco.spec change required for 64-bit builds on
	hybrid 32/64-bit systems, e.g., RHEL, CentOS

2007-03-29  Henry Butowsky  <henryb@hush.com>

	* first cut of RAM variables new syntax works
	with assign operators (=,-=,+=,/=, *=) and post increment &
	post decrement operators

2007-03-24  Charlie Zender  <zender@uci.edu>

	* Update configure.in for Mac OS X on Intel

2007-03-10  Charlie Zender  <zender@uci.edu>

	* cd ~/nco;cvs tag -d nco-3_1_9;cvs tag -d nco-3_1_9-1
	  cd ~/nco;cvs commit -m "Preparing nco-3.1.9 release"
	  cvs tag -c nco-3_1_9;cvs tag -c nco-3_1_9-1
	Changes since nco-3_1_8: nc[wre]a normalization, ncap2 qutoes
	variables, quieter output, RPMs support ncap2, ncecat does
	per-file hyperslab expansion

	* NCO 3.1.8 RPM builds/installs/removes properly with FC6
	Resulting executables work fine on local files
	DAP access is enabled, but broken. Unsure why.

	* enable-optimize-custom and -Wall are close to working on ncap2
	Should be possible to get this working again by 3.2.0

	* Cryptographically sign RPMs with GPG during BFS

	* Tweak nco.spec

	* Change to CFLAGS to -Wno-shadow so ncoLexer.cpp compiles

2007-03-09  Charlie Zender  <zender@uci.edu>

	* Un-shadow variables in ncoGrammar.g

2007-03-08  Charlie Zender  <zender@uci.edu>

	* Avoid FC6 redefinition of yy_flex_realloc() in ncap_lex.l
	Note sure if this will bite me on another platform

2007-03-06  Charlie Zender  <zender@uci.edu>

	* Fix [mp]ncwa so normalization occurs and mean coordinates are
	returned when totals with weighting are requested.
	Regression test caught this error I re-introduced 20070223.

2007-03-03  Charlie Zender  <zender@uci.edu>

	* Add ANTLR_ROOT to simultaneously set ANTLR_BIN, ANTLR_INC, ANTLR_LIB

2007-03-01  Charlie Zender  <zender@uci.edu>

	* Document new ncea/ncecat per-file record dimension hyperslabs

	* Add #include <functional> to NcapVector.hh to provide STL
	binary_function routines

	* Add C_INC option to configure.in to disambiguate C-library
	headers from antlr headers and thus fix AIX/ESMF ncap2 build

	* Start new dedication

2007-02-28  Charlie Zender  <zender@uci.edu>

	* Link with -lC on all xlc_* compiles

	* Re-work configure.in to accept ANTLR_INC, be friendlier on AIX

2007-02-27  Charlie Zender  <zender@uci.edu>

	* Change configure.in to check for ASTFactory() in libantlr.a

2007-02-24  Charlie Zender  <zender@uci.edu>

	* Finished (I think) quieting all non-fatal INFO/DEBUG/WARNINGS
	in main() routines, and converted from naked numbers to consistent
	and descriptive enums

2007-02-23  Charlie Zender  <zender@uci.edu>

	* Add sys target to nco++ Makefile.old for ncap2

	* Do not normalize coordinates by tallys/weights when no tallys
	exist (i.e., minimization, maximization, totals). Fixes TODO nco810.

	* Add nco_dbg_typ_enm to nco.h and implement in ncwa.c

	* Add ncwa coordinate-minimization bug to regression test

2007-02-15  Henry Butowsky  <henryb@ntlworld.com>

	* Changed prefix of parser generated vars from
	  '_' to '~'. Attribute propagation & inheritance
	  should now work correctly with vars prefixed by '_'.
          Can now quote vars and atts   '--u@..-v'

2007-02-14  Charlie Zender  <zender@uci.edu>

	* Declare <algorithm> in ncap2_utl.cc and std::-qualify functions

2007-01-30  Daniel L. Wang  <wangd@uci.edu>

	* Changed names in ssdap/ to reflect name change from SSDAP to SWAMP

2007-01-24  Charlie Zender  <zender@uci.edu>

	* Committing nco-3_1_8-2 for upload to Debian unstable

2007-01-21  Charlie Zender  <zender@uci.edu>

	* Change copyright year to 2007

	* Built and tested with libdap-3.7.3 and libnc-dap-3.7.0

2007-01-12  Charlie Zender  <zender@uci.edu>

	* Add variables and attributes with dashes and dots to in.cdl

2007-01-05  Charlie Zender  <zender@uci.edu>

	* Add missing #xmp_ncecat link to nco.texi

2006-12-08  Charlie Zender  <zender@uci.edu>

	* nco-3_1_8-1 is in Debian experimental

2006-12-06  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-3_1_8
	Changes since nco-3_1_7: ncap2 methods work, nascent _FillValue support

2006-12-03  Henry Butowsky  <henryb@ntlworld.com>

	* Commited second cut of variable methods & var/att properties

2006-12-02  Charlie Zender  <zender@uci.edu>

	* Noticed that configure;make;make test breaks because ncap2 is
	not available in ../src/nco like all other executables

	* Link nco_c++/in.nc to ../../data/in.nc

	* Fix all rule in data so *.nc are always built

2006-11-29  Charlie Zender  <zender@uci.edu>

	* NB: psd.nco uncovered a bizarre scanner error with ncap2 comment fields

	* Add equal-V/S approximation for Tallandier depth hoar to psd.nco

	* Print _FillValue WARNING only when dbg_lvl > 0

2006-11-27  Charlie Zender  <zender@uci.edu>

	* Re-format long description in debian/control

	* Remove unused $(MAKE) -f debian/rules DH_OPTIONS=-i binary-common

	* Change Debian section from "math" to "science" in control and doc-base

	* Remove pgiCC OpenMP threading on ncap2 (compiler limitation)

2006-11-24  Charlie Zender  <zender@uci.edu>

	* Change 'redhat' to 'rpm' and 'rpm -ba' to 'rpmbuild -ba' in bld/Makefile

	* Merge Fedora nco.spec UDUnits patch into configure.in

	* Update bld/nco.spec to Fedora Core 6 spec for nco-3.1.5

	* Change ORO values in in.cdl

	* Change ncap to ncap2 in nco.texi

	* Remove *lex.c, *yacc.c, .cvsignore, and debian from _all_ tarballs

2006-11-23  Charlie Zender  <zender@uci.edu>

	* Fix typo now use _FillValue not _Fillvalue

	* Fix nco_bm.pl success test for ncap2 reading ncap2.in

	* Regression/benchmarks now use ncap2 everywhere

2006-11-22  Charlie Zender  <zender@uci.edu>

	* Exclude all .cvsignore's from tarballs

	* Replace 'unstable' with 'UNRELEASED' from 3.0.0-3.1.7

	* Change debian/nco.doc-base to debian/doc-base

	* Update bld/Makefiles for DAP build for ncap2

	* More precise language for interactive o/a/e command

	* Created non-native debian packages

2006-11-21  Charlie Zender  <zender@uci.edu>

	* Add @dircategory netCDF to nco.texi

	* Patch ncap2 with ncap_sclr_var_mk() prototypes to re-enable builds

	* More package fixes suggested by Daniel Baumann:

	* Removed debian/docs, alphabetize control, less precise debhelper
	version, refine copyright history, remove debian/doc, de-comment
	debian/rules

	* Remove debian/[postinst,prerm, postrm]. These only contained
	instructions for handling *.info files. Rely on dh_installinit to
	automagically create these instructions.

2006-11-20  Charlie Zender  <zender@uci.edu>

	* Alter documentation rules to not-split

	* Include ncap2 in debian distribution

	* Remove compiler-preference list arguments to AC_PROG_CC and
	AC_PROG_CXX in configure.in. Presence was breaking builds on
	virga where broken icpc compiler was automatically selected.
	Henceforth non-default compilers must be specified as environment
	variables as in configure.eg

2006-11-19  Charlie Zender  <zender@uci.edu>

	* Create ncap2 manpage for debian compatibility

	* Update debian build-dependencies to include antlr

	* Make missing_value implementation generic and allow compile-time
	override with Makefile variable
	cd ~/nco/bld;make USR_TKN='-DNCO_MSS_VAL_SNG=_FillValue';cd -

2006-11-18  Charlie Zender  <zender@uci.edu>

	* Warn when _FillValue defined and missing_value not. Fixes TODO nco682

2006-11-16  Charlie Zender  <zender@uci.edu>

	* Added new demonstration ncap2 script data/psd_wrf.nco

2006-11-12  Charlie Zender  <zender@uci.edu>

	* Update copyright year in man pages

	* Do not create mpncdiff,mpncea,mpncrcat links when enable_mpi=false

2006-11-10  Charlie Zender  <zender@uci.edu>

	* Tweak configure.in to work with pure Debian assumptions

	* Fix --disable-netcdf4 handling in configure.in

	* Merged Debian nco_2.9.9-3.diff into upstream sources

	* Removed UDUnits support from Debian build

	* Update debian/convert, copyright, prerm, rules, nco.doc-base,
	postinst

	* Added udunits.dat for eventual Debian compatibility (a mistake?)

2006-10-24  Charlie Zender  <zender@uci.edu>

	* Replace ncap by ncap2 in all benchmarks and in regression tests
	ncap1 is still used in non-ncap regression tests

2006-10-21  Charlie Zender  <zender@uci.edu>

	* Include srd argument in all hyperslab documentation

	* Fixed parenthetical notation for hyperslab arguments in nco.texi

2006-10-20  Charlie Zender  <zender@uci.edu>

	* Die gracefully with HINT rather than segfault with hyperslab
	limits of form -d dimension, (i.e., dangling comma with no minimum value)

2006-10-19  Charlie Zender  <zender@uci.edu>

	* Add hdr_pad documentation to nco_ctl.c, nco.texi as per TODO nco650

2006-10-16  Charlie Zender  <zender@uci.edu>

	* Test for find_nc4_file() not nc_check_for_hdf5() in configure.in
	as per patch from Simon Wood

2006-09-18  Charlie Zender  <zender@uci.edu>

	* Confirmed psd.nco works correctly

	* Add psd.nco, an ncap2 script for particle size distributions

	* Make ncap2 read 3.14L as float not erroneous int as per C++

2006-09-15  Charlie Zender  <zender@uci.edu>

	* Change ncbo type difference from warning to level 1 info message

2006-09-14  Charlie Zender  <zender@uci.edu>

	* Fix ncecat/mpncecat regressions caused by new stride capability

2006-09-12  Charlie Zender  <zender@uci.edu>

	* Remove trunc() symbol (which AIX lacks) from ncap2 to simplify AIX builds

	* Revise stride documentation in nco.texi and usage strings

	* Stride now works on non-ncks non-record dimensions, fixes TODO nco773

	* Set stride = 1 in nco_var_srt_srd_set(), formerly nco_var_srt_zero()

	* Implement stride in nco_var_val_cpy()

2006-08-31  Charlie Zender  <zender@uci.edu>

	* Try not to invoke mpncpdq in regression tests on pbs

	* Add link to mpirun to $MY_BIN_DIR when building MPI executables
	with bld/Makefile

2006-08-30  Daniel Wang  <wangd@uci.edu>

	* Added --mpi_upx <user-specified mpi command> option to nco_bm.pl
	to allow job-scheduler mpi directives like -machinefile

2006-08-26  Charlie Zender  <zender@uci.edu>

	* icc/icpc autoconf build/link succeeds but C++ executables segfault

2006-08-25  Charlie Zender  <zender@uci.edu>

	* icc improvements to get icpc working

	* Direct autoconf to build nco_c++ prior to nco++

	* pathcc and pathCC now work with autotools

2006-08-24  Charlie Zender  <zender@uci.edu>

	* Add pgcc, pathcc support to autotools builds

	* Only add GCC flags when sure compilers are gcc and g++

	* Re-arrange compiler ordering to AC_PROC_CC

	* Prototype nco_var_lst_crd_xcl() in nco_var_lst.h

	* Prototype rnd_nbr() in nco_rth_utl.h

	* Fix cast-qual warnings in newer qsort()-compatible comparison
	routines nco_cmp_chr() and nco_cmp_int() in nco_lst_utl.c

	* Eliminate un-utilized variable warnings in nco_ddra(), cnv_ccsm*

	* Correct OPeNDAP version test in configure.in

	* Utilize ncap2 incremental operators in ddra.nco

	* Quiet ncap2 informational messages

	* Add sdo_utl.cc sdo_utl.hh to libnco++

2006-08-23  Charlie Zender  <zender@uci.edu>

	* Change default to CCACHE=N because ccache interacts so poorly
	with OpenMP switches during builds

	* Re-fix NCO_rgr.pm to directly access main:: variables fl_fmt,
	omp_flg, nco_D_flg, fl_out

	* Kludge for pgcc compiler to workaround C99 designated	initializers
	Timers should be OK but DDRA answers for ncbo, ncwa should not be
	trusted with pgcc (or any C++ compiler).

2006-08-22  Charlie Zender  <zender@uci.edu>

	* Verified that pathcc OpenMP problems have disappeared and were
	likely due to ccache inadvertently mixing OpenMP-enabled and
	dis-abled object code. Must be more careful about that in future.
	This resolves TODO nco765 and 766

	* Add more informative OpenMP diagnostics

	* Fix OpenMP flag-passing in Makefile for Intel icc compilers

2006-08-14  Charlie Zender  <zender@uci.edu>

	* More benchmark cleanup

	* Fix specialized nco_bm.pl file processing for tms_lng.nc
	This resolves TODO nco767.

2006-08-10  Charlie Zender  <zender@uci.edu>

	* pgcc -c9x currently fails to handle C99 designated initializers

	* Update PGI compiler options in Makefile

2006-08-01  Charlie Zender  <zender@uci.edu>

	* Add stubs for znetcdf support

2006-07-19  Henry Butowsky  <henryb@ntlworld.com>

	* First cut of C like it iteration operators

	* these are +=,-=,*=,/=  --,++ (pre & post)

	* New code checked out OK with valgrind

	* Need to add code to check that first operand is valid Lvalue
	  -also need some new regression tests to fully test this new feature

2006-07-12  Charlie Zender  <zender@uci.edu>

	* Improve, add, clarify, rx examples in nco.texi, in.cdl

2006-07-10  Charlie Zender  <zender@uci.edu>

	* Add pathcc/pathCC to MPI handling in bld/Makefile

2006-07-03  Charlie Zender  <zender@uci.edu>

	* Clean-up ncra.c file INFO messages

2006-06-30  Charlie Zender  <zender@uci.edu>

	* OpenMP with pathcc segfaults with ncra fxm TODO nco764

	* Regressions tests pass as expected with native pathcc on ipcc

	* Change to gettimeofday() to avoid strict Perl errors in NCO_bm.pl

	* Tweak bld/Makefile to work with pathcc compiler on ipcc.ess.uci.edu

2006-06-26  Charlie Zender  <zender@uci.edu>

	* Replace some WARNINGs with less-paranoid INFOs when -A appending

2006-06-22  Charlie Zender  <zender@uci.edu>

	* Support AIX runantlr=antlr in Makefile.old for ncap2 on AIX

2006-06-17  Charlie Zender  <zender@uci.edu>

	* Add data/ddra.nco to compute DDRA statistics

	* Add nco++/*.[ch]pp files to repository to bring ncap2 one step
	closer to users. Still requires many antlr-distribution *.hpp files.

	* Update MANIFEST, add nco++ entries

	* Clean up nco_bm file create routine

	* Rename IPCC_dly_T85 to gcm_T85, sml_stl to stl_sml, skn_lgs to tms_lng

2006-06-12  Charlie Zender  <zender@uci.edu>

	* Write initial and final timers to stdout not stderr

2006-06-08  Charlie Zender  <zender@uci.edu>

	* Re-release this as 3.1.4

	* Always initialize flg_ddra=False in ddra_info
	Fixes spurious TIMER info on compilers (like xlc) which do not zero data

	* Re-release this as 3.1.4

	* Take mtd timer out of loop in ncra.c and ncecat.c

2006-06-07  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-3_1_4
	Changes since nco-3_1_4:
	timers, clean/dirty switches

	* Add timer start and end calls to all operators

	* Make --clean memory exits default in regression tests

	* Make --dirty memory exits default in operators

	* Add cln,drt,mmr_cln,mmr_drt,dirty flags to all operators

	* Quiet MRV verbosity, stylize TIMER output

	* Make ddra_info firstprivate()

	* Add flg_ddra to ddra_info

	* Change timers to enumerated type

	* Add metadata portion timer call

2006-06-02  Charlie Zender  <zender@uci.edu>

	* Put --disable-shared everywhere for AIX

	* Add operator-specific speeds to nco_ddra()

	* Add fractional time diagnostics to nco_ddra()

2006-05-30  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-3_1_3
	Changes since nco-3_1_2:
	ncap2 attribute propagation, CF coordinates, ncwa -b -B, ncra 0 records

	* Daniel fixed nco_bm.pl

	* Document retain-degenerate-dimensions option in nco.texi
	This finishes TODO nco739 and allows nco738 to be possible

2006-05-29  Charlie Zender  <zender@uci.edu>

	* Implement mask_condition as -B and document in nco.texi

	* retain-degenerate-dimensions implementation works in [mp]ncwa

	* Update opendap.sh to DAP 3.6 download/build procedures

2006-05-27  Charlie Zender  <zender@uci.edu>

	* Improve rx examples in nco.texi

	* Add flg_rdd hooks to retain degenerate dimensions in ncwa TODO nco739

	* Add Q00--Q100 to in.cdl to text regex functionality

2006-05-26  Charlie Zender  <zender@uci.edu>

	* Correct regular expressions in nco_bm_hyp.sh

	* All previous ncwa benchmarks which used variable subsetting on
	the IPCC dataset were incorrect due to significantly wrong regular
	expressions in nco_bm_hyp.sh. Incorrect regular expressions did
	not affect satellite dataset because there were fewer than ten
	variables.

	* Correct max variable name for var_4d in nco_bm_hyp.sh

	* Give wgt_brd_flg correct sign so not miscounted by nco_ddra()

2006-05-24  Charlie Zender  <zender@uci.edu>

	* Correct lon attributes in in.cdl

2006-05-22  Charlie Zender  <zender@uci.edu>

	* Avoid designated initializers to build ncbo and ncwa in C++

	* Add nco.1 man page which Sourceforge caused me to lose

2006-05-20  Charlie Zender  <zender@uci.edu>

	* Improve help message in nco_usg_prn()

2006-05-19  Charlie Zender  <zender@uci.edu>

	* Return 1 early from nco_omp_ini() on compilers without OpenMP

	* Put CNV_CCM_CCSM_CF back in nco_var_lst_crd_ass_add(), and add
	it into nco_var_lst_crd_add(). CF coordinates now handled
	correctly with -C/-c switches.

	* Move some nm_id_sct var_lst routines from nco_var_utl.c to
	nco_var_lst.c

	* Split CF coordinate convention nco_cnv_cf_crd_add()
	out of nco_var_lst_ass_crd_add() so it can be called
	based on other command line switches.

	* Update documentation to new CVS and ViewCV URLs

2006-05-18  Charlie Zender  <zender@uci.edu>

	* Old-style Makefiles now assume ccache is installed on LINUX*
	builds to speed up compilations. Disable with CCACHE=N

2006-05-16  Charlie Zender  <zender@uci.edu>

	* Found bug in libnco_c++: library does incorrectly initializes
	function parameters which default to CPP macros, e.g., NC_NOERR.
	These parameters cannot be over-ridden by non-default values.
	Same problems occurs whether passing rcd_opt as reference or not.
	Attempting to fix bug by creating named constant with global
	library visibility.

2006-05-14  Charlie Zender  <zender@uci.edu>

	* Master code repository is now on nco.cvs.sf.net
	Old code at nco.sf.net is a hodgepodge of erratic commits over past week.

	* Finished hand-merging one week's patches from development on
	multiple machines due to sourceforge.net outage.
	Master code is now on ashes. Everything from about
	20060506--20060512 was originally "out-of-tree" during outage.

2006-05-13  Charlie Zender  <zender@uci.edu>

	* Out-of-sync commits from ashes to new sourceforge repository

006-05-11  Charlie Zender  <zender@uci.edu>

        * Fix syntax error in data/Makefile.am so .nc's build correctly

        * Fix syntax errors in configure.in

2006-05-09  Charlie Zender  <zender@uci.edu>

        * Add CF coordinate convention to documentation

        * Add regression test for CF "coordinate" convention

        * CF "coordinates" convention is fully implemented

        * Add C++ directory contents to TAGS source list

        * CF "coordinates" convention is semi-working

2006-05-08  Charlie Zender  <zender@uci.edu>

        * Change in.cdl Conventions from NCAR-CSM to CF-1.0

        * Implement nco_cnv_ name convention in ARM routines

        * Support OPeNDAP on AIX in bld/Makefile

2006-05-07  Charlie Zender  <zender@uci.edu>

        * Change from --dbg_lvl=73 to --ddra or --mdl_cmp for
        computational model = DDRA diagnostic output

	* Add nco_ddra() to ncbo

	* Create stand-alone NCO(1) man page

	* Allow zero-record record variables in nco_var_val_cpy()
	This should allow copying metadata in most NCOs

	* Make zero-record record variables always fixed in arithmetic operators
	This ensures airthmetic loops to not encounter empty variables

2006-05-06  Charlie Zender  <zender@uci.edu>

	* Improve warning messages in ncra for size 0 records

	* Build in_rec_zero.nc from in_rec_zero.cdl in Makefiles

2006-05-04  Charlie Zender  <zender@uci.edu>

	* Fix ncks to work with record dimensions of size zero

	* Added data/in_rec_zero.cdl for torture testing
	This file contains a record coordinate of length zero

2006-05-02  Charlie Zender  <zender@uci.edu>

	* Remove obsolete -Z option from help strings

	* Get MRV_flg, dmn_avg_nbr, lmn_nbr_avg from nco_var_avg(), use in nco_ddra()

2006-05-01  Charlie Zender  <zender@uci.edu>

	* Update configure.in for Cray compatibility

2006-04-30  Charlie Zender  <zender@uci.edu>

	* Some cleanup of nco_bm suite

	* Add missing NCO_bm:: scope to functions in nco_bm.pl

	* Change from time_t=time() to clock_t=clock() timers

	* Add observed time to diagnostics

	* Filter noisy INFO messages in main ncwa loop

	* Modify DDRA diagnostics to work with long long's = int64 sizes

	* Add MRV_flg, rnk_avg, and lmn_nbr_avg outputs to nco_var_avg()

	* Hooked-in call to nco_ddra() with estimates for some inputs
	Calculations should be more accurate than ddra scripts.

2006-04-29  Charlie Zender  <zender@uci.edu>

	* Added nco_ddra() to estimate computation time. Not invoked yet.
	Still need to functionalize rnk_avg computations.

2006-04-28  Charlie Zender  <zender@uci.edu>

	* Change $sz_wgt_blk to $sz_avg_blk in ddra.theory_model.pl

	* Autoconf-conditions for getpagesize(), getrusage() in nco_mmr.c
	This should cure build failures on Cray platforms, and make
	nco_mmr.c bulletproof (though still not perfect) for other
	esoteric platforms.

2006-04-27  Charlie Zender  <zender@uci.edu>

	* Remove superfluous semi-colons from some ncbo/ncflint comments
	This should fix Solaris builds

2006-04-26  Charlie Zender  <zender@uci.edu>

	* Re-order PVM_ARCH compatibility portion of configure.in so it
	follows not precedes $host definition. This should fix cygwin
	(and other) build problems introduced in NCO version 3.1.2.

2006-04-25  Charlie Zender  <zender@uci.edu>

	* Note in nco_var_cnf_dmn() how to turn off weight re-use

2006-04-21  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-3_1_2
	Changes since nco-3_1_1:
	packed data fixed, ncap2 in configure, ncra/ncea/ncwa behavior

	* Change documentation to reflect new ncra/ncea/ncwa behavior

	* Add new ncra/ncea/ncwa regression tests to verify this

	* Change ncra/ncea/ncwa to always average coordinate variables

2006-04-14  Charlie Zender  <zender@uci.edu>

	* Constify srd in nc_put/get_varm() calls and prototypes

	* Correct type of srd in nc_put/get_vars() calls and prototypes

	* Add put_vars() routines to nco_netcdf.[c/h] for completeness

2006-04-13  Henry Butowsky  <henryb@ntlworld.com>

	* The first iteration of hyperslabing in ncap2

	* Can hyperslab on LHS with scalar on RHS eg time(5:9)=.4;
	  or var on RHS.

  	* Can also hyperslab on RHS eg three_dmn_var(1,,)=three_dmn_var(9,,);

2006-04-06  Charlie Zender  <zender@uci.edu>

	* Change bool's to nco_bool's in nco.h

2006-03-17  Charlie Zender  <zender@uci.edu>

	* Un-botch ncatted regression test, fixing TODO nco691

	* NECSX does not support getpagesize() in nco_mmr.c

2006-03-17  Harry Mangalam  <hjm@tacgi.com>

	* spiffin' config/make to bypass nco++ politely if antlr not available
	also now forces regeneration of hpp files - 1st .cc file triggers
	rebuild.  Builds (or doesn't) on a clean checkout.

	* 'make install' installs ncap2 to bindir if it's built.

	* mod configure to skip nco++ if trying to build for MPI (nco++
	fails on the MPI build - a concern at this point?)

	* autoconf/automake patches to allow nco++ and MPI to co-exist and mods
	to allow MPI regressions and benchmarks to (mostly) work.

2006-03-15  Henry Butowsky  <henryb@ntlworld.com>

	* Fix NUMBER lexer. Can now lex number like 23. or 111. etc

	* Fix NcapVar.hh -- Code was crashing when var->nm was set equal to s_va_nm

	* Start code for slab indices added lmt_peek() & lmt_init() to ncoTree.hpp

2006-03-14  Harry Mangalam  <hjm@tacgi.com>

	* nco++ dir now works with autoconf/automake, altho only tested with
	simple cases (only gcc/g++ compilers, etc).  Original Makefile renamed
	to Makefile.old. Tested under --enable-nco++=yes (default) &
	--enable-nco++=no.  Added more logic as per CZ request on 3.15 - now
	checks for runantlr, libantlr, antlr headers,

2006-03-13  Harry Mangalam  <hjm@tacgi.com>

	* all but 1 benchmark work server-side.  When trying to execute the ncrcat
	bench, the serverside fails when doing the ncwa command.  It uses
	a very large amount of mem (~1.3G when it dies - de to an apache
	limitation?)  Daniel and I are giving up for now - marked as TODO 692.

	* failing regressions tested and some resolved to bad handling by
	benchmark script. Remaining ones are marked in the failure
	message. Only new one is TODO691 - looks like a problem with
	ncatted returning mysteriously null values. Total of 3 regressions
	failing - 2 ncap, 1 ncatted.

2006-03-09  Harry Mangalam  <hjm@tacgi.com>

	* namespace cleanup on benchmark code and added rc capability to the code,
	first capability just records whether users said yes to send UDP data and
	then uses that answer to bypass the question from then on.
	Other info can be added in NAME=VALUE pairs and the detection routine
	reads them all into a global hash %NCO_RC that can be used to set various
	things.

2006-03-09  Charlie Zender  <zender@uci.edu>

	* Added regression test to make sure nco686 stays fixed.

	* Re-work nco_mss_val_cnf() to handle all cases of var1 and var2
	having/not having missing values. Fixes TODO nco686.
	Probably fixed analogous latent bug in ncflint.

	* Remove bogus const prototype on return value of nco_typ_fmt_sng()
	Apparently gcc 4.0.3 actually pays attention to intended
	const-ness of return values in these situations

	* Fix TODO nco687 so unequal missing values are formatted
	correctly in warning messages. This should help debug nco686.

2006-03-09  Harry Mangalam  <hjm@tacgi.com>

	* nco_bm_benchmarks.pl converted to NCO_benchmarks.pm with a good
        bit of namespace cleanup.  There are still some inexplicable explicit
        declarations that are needed but only about 2-3.

	* both benchmark and regression code support both serverside and
	clientside execution.  There are still some remaining conflicts,
	but most benchmarks and most regressions run identically.

	* the go() routine was rewritten to be a bit more coherent.  Again,
	there is a bit more cleanup to do, but it's time to get it into cvs

	* Daniel's ss code changes have tracked the benchmarking code, so both
	sides work with each other.  There are some unfortuneately primitive
	hacks to get them working together, but while it's ugly (perl writes
	data to file and executes python to pick it up, it's simpler than
	bringing swig into the picture.

2006-02-25  Charlie Zender  <zender@uci.edu>

	* Hunt for double-free() in ncap, cleanup var_ycc-related operations

2006-02-20  Charlie Zender  <zender@uci.edu>

	* Change more internal bool's to nco_bool's so g++ builds libnco.a (again)

2006-02-19  Charlie Zender  <zender@uci.edu>

	* Re-arrange packing/unpacking documentation to describe default
	handling by arithmetic operators.

2006-02-18  Charlie Zender  <zender@uci.edu>

	* Add tst target to ncap2 Makefile

	* Verified regression test results unaltered

	* Change argument bool's to nco_bool's throughout libnco and frontends
	NB: I may have missed non-front-end bools in libnco.

	* ncap2 now compiles, links, and runs when libnco built with g++

	* Change ncap2 argument bool's to nco_bool's which are typedef's to int's

2006-02-17  Charlie Zender  <zender@uci.edu>

	* ncap2 compiles, links, and fails when libnco built with gcc

	* ncap2 compiles, links, and runs when libnco built with g++

	* Change to int yywrap() from bool yywrap() to work with g++

	* Begin to clean up libnco++ usage/headers

	* Add libnco++.hh to store all libnco++ headers

	* Add ncap2 target to bld/Makefile for convenience

	* Re-make libnco (when necessary) before linking ncap2

	* Add ncap2 to prg_prs()

	* Add doc/ncap2.in to test ncap2

	* ncap2 builds within tree now!

	* Add udunits libraries, remove dat target

2006-02-16  Harry Mangalam  <hjm@tacgi.com>

	* Corrected BM code to account for error strings being eval'ed as 0
          when compared as numeric and a number of other error-checking
          improvements.

2006-02-16  Charlie Zender  <zender@uci.edu>

	* This fixes TODOs nco672, nco673, nco402

	* Modify regression test to expect packed fixed data

	* Check is_var_fix flags in nco_var_dfn() to handle packed fixed data

	* Add is_var_fix to var_sct so nco_var_dfn() can use it to
	identify variables to pass through packed straight to output

2006-02-15  Charlie Zender  <zender@uci.edu>

	* Same problem exists with all other non-processed data. TODO nco673.

	* Add test whether non-record data is unpacked in ncra output file.
	ncra currently fails this test. Reported by Martin Dix.	TODO nco672.

2006-02-14  Charlie Zender  <zender@uci.edu>

	* Temporarily add ncap2 object files directly to link line

2006-02-07  Charlie Zender  <zender@uci.edu>

	* Remove redundant antlr actions. Add -lnco to LDFLAGS.

2006-02-06  Charlie Zender  <zender@uci.edu>

	* Fix nco++ library definition

2006-02-03  Charlie Zender  <zender@uci.edu>

	* Move Henry's Makefile to Makefile.orig and Makefile.old to Makefile

	* nco++ build mechanism appears to work. Dies in VarOp.hh due to
	syntax error. Not understood yet.

2006-02-02  Charlie Zender  <zender@uci.edu>

	* Progress on build mechanism but nothing working

	* Avoid name clashes between nco++ and nco code by changing file
	names from ncap* to ncap2*

2006-01-31  Charlie Zender  <zender@uci.edu>

	* Created nco++/Makefile.old from nco_c++/Makefile.old
	  Made progress toward in-tree nco++ build

2006-01-30  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-3_1_1
	Changes since nco-3_1_0:
	C++ builds work again, ssdap, nco++, 4.0-alpha11-compatible

	* Changed copyright to 2006

	* Daniel added server side extensions to ssdap

	* nco++ still has Henry's hardcoded paths---will fix in nco-3_1_1

	* Committed Henry's C++ ncap2 antlr-based code to nco++

2006-01-20  Charlie Zender  <zender@uci.edu>

	* Verified regular NCO builds with gcc-4.0.3 on dapper drake dirt

	* netcdf 4.0-alpha11 (still) fails regression tests as per TODO nco658

	* Make nco_lbr_vrs_prn() work with netcdf 4.0-alpha11-style values

	* Added integration example to ncwa in manual

2006-01-04  Harry Mangalam  <hjm@tacgi.com>

 	* Fixes to the BM code to force the retrieval of DAP-requested files and
          a variable ($prsrv_fl) to allow a regression test to maintain files if
	  a previously downloaded file is needed for a successive test.

	* noted in the TODO as well, but there is a difference between the
          opendap code running on sand (which passes all server-side
	  regression tests) and the code running on hiperstore, which
	  fails a number of them, many with OpenDAP errors emitted from
	  the lib.  Still figuring this out.

	* mods to nco_fl_utl.c: in nco_fl_mk_lcl() to make ncatted and ncrename
	  fail gracefully when asked to DAP-retrieve a file on which to operate.

2005-12-29  Charlie Zender  <zender@uci.edu>

	* Add xbitmap icon to homepage

2005-12-19  Harry Mangalam  <hjm@tacgi.com>

	* mod bm code to make a new dir for dap data and explicitly delete
	  everything in it for each new DAP test to force the network transfer.

2005-12-13  Charlie Zender  <zender@uci.edu>

	* Modify `make test` to automatically run regression test

	* Remove old nco_tst.pl references from Makefile.am `make test`

	* Fix yyunput argument type in ncap_lex.l

	* Reference prs_sct in yyerror to fix CEWI with g++ -Werror

2005-12-11  Charlie Zender  <zender@uci.edu>

	* C++-compatibility tweaks to nco_lmt.c, nco_omp.c, and configure.in
	Current code causes g++ ICE TODO nco662

2005-12-09  Charlie Zender  <zender@uci.edu>

	* Strip -std=c99 from CC and CFLAGS if CC is gcc* in order to support
	to support using CC=g++ within configure. Ditto for
	-Wmissing-prototypes, and analogous procedures for xlC* and icpc*.

2005-12-08  Harry Mangalam  <hjm@tacgi.com>

	* fixed passive/active ftp problem exhibited on soot by making 'ftp'
        explicitly '/usr/bin/ftp' (it was a kerberos'ed ftp on soot for some
	reason - /usr/kerberos/bin/ftp).  For linux and esmf, the system ftp
	supports passive ftp (-p flag).  The kerberos ftp supports it as well
	but not as a flag which casued problems in the 'here' script.

2005-12-05  Charlie Zender  <zender@uci.edu>

	* Today's modifications allow G++ to build NCO limited by
	make non_ncap UDUNITS=N
	This NCO passes all regression tests
	ncap and UDUNITS linkage remain C++ problems and prevent closing TODO nco656

	* Hacked nco_malloc_*() to remove errno references with G++
	Presence triggers G++ error: undefined reference to `__errno_location()'
	This is TODO nco659

	* Set #define YYDEBUG 0 in ncap_yacc.y so C++ compiles ncap_yacc.c

	* Fix type conversions in nco_mss_val_cnf()
	This fixed a latent bug that was probably never expressed

	* Explicitly coerce pointers in implicit conversions to make C++ happy in
	nco_cmp_chr(), nco_cmp_int(), ncpdq.c

	* Correct const-ness of string list arguments with prototypes in
	nco_prs_rnm_lst(), nco_fl_nm_prs()

	* Add doc/netcdf4.sh to install latest netcdf4 and HDF libraries for NCO

2005-12-02  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-3_1_0
	Changes since nco-3_0_3:
	MPI ZKB, configure netcdf4/mpi, ncwa MRV, ncap rnd_nbr(), netcdf4-alpha10

	* Preparing for NCO 3.1.0 release

2005-11-30  Harry Mangalam  <hjm@tacgi.com>

	* Changed ncap.c to allow MACOSX to use erf, erfc, gamma

	* changed configure.in to accept a more flexible OS/arch string to
	be able to set AMD64 (reason for previous failing the erf() tests in
	ncap).

	* changed the ncap benchmark scripts to correct syntax errors and change
	dimensions to correspond to the casting dimension order.

2005-11-29  Charlie Zender  <zender@uci.edu>

	* bld/Makefile accepts FL_FMT for netCDF4 testing

2005-11-29  Harry Mangalam  <hjm@tacgi.com>

	* Changed configure.in to use NETCDF4_ROOT rather than renaming to
	libnetcdf4.

2005-11-28  Charlie Zender  <zender@uci.edu>

	* Remove nco_open_par() again. Seems to require parallel mode
	in netCDF4 configure to appear in library, possible hardware dependency

2005-11-28  Harry Mangalam  <hjm@tacgi.com>

	* Spiffing configure/makefiles to make sure that netcdf4 works as
	expected; adding dependencies into configure rather than requiring the
	full set to be run at the commandline.  Still a question about  the
	specification tho (--fl_fmt vs --netcdf4).

2005-11-26  Charlie Zender  <zender@uci.edu>

	* Test for averaging dimensions being MRV dimensions

2005-11-25  Charlie Zender  <zender@uci.edu>

	* Change "long missing_value" to "nco_int missing_value"

2005-11-23  Charlie Zender  <zender@uci.edu>

	* Place operation count stanzas in expensive routines for paper:
	nco_var_cnf_dmn(), nco_var_avg()

2005-11-19  Charlie Zender  <zender@uci.edu>

	* Synchronize with netCDF4 alpha10, verified passes regression tests

	* Expose new types in attribute function calls

	* Change _int64/_uint64 to _longlong/_ulonglong in function names

	* Change NC_STRICT_NC3 to NC_CLASSIC_MODEL

2005-11-15  Charlie Zender  <zender@uci.edu>

	* Added cheesy random number generator function rnd_nbr() to ncap
	ncap -O -v -s 'x=rnd_nbr(lat)' ~/nco/data/in.nc ~/foo.nc;ncks ~/foo.nc
	for generating fake data. Search source for TODO nco652 and improve!

2005-11-14  Harry Mangalam  <hjm@tacgi.com>

	* retired following TODOs
	bld68. hjm Verify configure with minimal options works with MACOSX
	bld53. hjm Add --fl_fmt option to nco_bm.pl (see ncks.c for fl_fmt values)
	bld62. hjm Make regressions fail when input file not created but
	       re-used from previous test etc
	bld71. hjm Mac OS X: remove false positive regressions in ncwa (cut?)
	bld72. hjm nco_bm: ensure "foo" (intermediate files) accessed locally
	       not over DAP
	bld46. Is DAP_ROOT (or DODS_ROOT) an obsolete variable in DAP 3.5+? if
	       so obsolete it

2005-11-14  Harry Mangalam  <hjm@tacgi.com>

	* corrected Benchmark code for opendap access.

2005-11-11  Harry Mangalam  <hjm@tacgi.com>

	* fixed net tests to test only returned value, not entire msg

	* Added UDP reporting query to regression and benchmark runs
	if users explicitly agree, to capture failures in regressiions
	automatically for better profiling.  Queries users if they will
	allow data to be returned UNLESS the --udpreport is already set

	* Changes to Makefile.am in src/nco to enable MPI binaries to
	be built.

	* Notes about problems with old aclocal, automake posted
	have to assure that new versions are manually updated in *ubuntu
	anyway.

	* back on track with updating Makefiles the right way(c)

	* updated MANIFEST to include new bm scripts and the breakup of
        nco_bm.pl.

2005-11-09  Charlie Zender  <zender@uci.edu>

	* Omit -lstdc++ from AIX xl* DAP builds

	* Add CVS Header and -*-makefile-*- to all Makefile.am's
	This automatically invokes Emacs Makefile-mode syntax/highlighting

2005-10-31  Harry Mangalam  <hjm@tacgi.com>

	* Changes to mk_bm_plots to scriptify the last of CZ's requests

	* Changes to configure/make to straighten out build protocols
	for netcdf4 (NETCDF4_ROOT to be defined, needs to be named
	libnetcdf4, not libnetcdf).  Automatic paths for -I, -L based
	on the NETCDF4_ROOT)

2005-10-28  Harry Mangalam  <hjm@tacgi.com>

	* Changes to the configure/make chain to start to resolve
	autobuild issues with MPI / netcdf4 / DAP / etc

	* now builds serial NCOs cleanly on Linux (x86,AMD64)
	and also MPI on Linux (x86,AMD64).  Suports Rich Lowry's
	mpich2 debs (no additional flags) and MPICH2 from src if
	given MPICH_ROOT.

	* added checks for -lf95, more error checking

2005-10-27  Charlie Zender  <zender@uci.edu>

	* Tried ncwa memory free()'ing technique to avoid freeing dangling
	pointers in mpncra/mpncea. Does not fix hanging processes.

2005-10-26  Charlie Zender  <zender@uci.edu>

	* More unused prototyping of MPI-IO access code.
	Implementing calls in mpncecat.c for testing, and wrappers in nco_netcdf.c

2005-10-25  Charlie Zender  <zender@uci.edu>

	* Support pnetCDF in bld/Makefile

	* Deprecate nco_fl_typ (never-used) from nco_netcdf.c wrappers

	* Add ncompi_open(), first pnetCDF interface wrapper

2005-10-25  Harry Mangalam  <hjm@tacgi.com>

	* Changes to support MacOSX better:
	- configure detects Darwin and inserts -fno-common
	- bits added to configure.eg to describe other dependencies of
	this flag for libnetcdf (3.x)
	- nco_bm.pl detects Darwin and tests for bad cut.

2005-10-24  Daniel Wang  <wangd@uci.edu>

	* Implement barrier in mpncra.c, which should fix TODO nco593.

2005-10-24  Charlie Zender  <zender@uci.edu>

	* Initialize var->nc_id in ncpdq. Fixes TODO nco638.

	* Initialize dangling in_id in ncra, ncwa. Fixes TODO nco637.

	* Support netCDF4 NC_UBYTE,NC_USHORT,NC_UINT,NC_INT64,NC_UINT64
	in nco_netcdf.c wrapper functions for libnetcdf.a library

	* Support netCDF4 NC_UBYTE,NC_USHORT,NC_UINT,NC_INT64,NC_UINT64
	in metadata and some structures. Still need to add read/write and
	conversion/promotion functions.

2005-10-22  Charlie Zender  <zender@uci.edu>

	* Eliminate small [mp]ncra leak with -Y pseudonym

	* Fixed all known bugs with parallelization over in_id
	MPI (except for known problems) and MPI_FAKE regression tests all passed
	This resolves TODO nco611 and is opportune time to re-benchmark	SMP
	to check for any performance boost due to parallelization over in_id

	* #ifdef ENABLE_MPI spinlock -S switch so MPI_FAKE executables build

	* Finished re-parallelization of front-ends over in_id
	SMP operators appear to work, pass all tests on soot and ESMF

2005-10-21  Harry Mangalam  <hjm@tacgi.com>

	* configure[.in], Makefile[.in], src/nco/Makefile[.in] in good enough
	shape to commit.  Still some shakiness, but time to check clean checkouts
	on other platforms.  Now supports --enable-mpi, --enable-netcdf4

	* configure supports MacOSX build (detects OSX and deletes POSIX flag).

2005-10-21  Charlie Zender  <zender@uci.edu>

	* Clean up old aborted attempt to parallelize ncecat over files

	* Verfied that parallelizing use of in_id in SMP code allows
	parallel read access to file data with nco_get_var*() in ncra.
	Hence, removed last critical read region from libnco.a
	SMP on other (non-ncra) operators temporarily broken until
	I parallelize their front end use of in_id.

	* Re-wrote nco_omp_ini() logic to use stubs outside of #ifdefs
	Now UP and SMP execute virtually same code in nco_omp_ini()

	* Prototype and declare OpenMP stub functions in nco_omp.c/h

2005-10-20  Charlie Zender  <zender@uci.edu>

	* Replaced many instances of var->nc_id with function parameter
	nc_id to possible parallelization over nc_id in calling routine.
	Most code was already written this way.

	* Realized that TODO nco28 is bogus and deleted it:
	"Use var.nc_id as file ID from now on and rewrite old routines to do so"
	Bad idea because it would prevent parallelizing over nc_id in SMP code

	* Improve warning message for non-monotonicity in rec_crd_chk() to
	better distinguish inter-file from intra-file non-monotonicity.

2005-10-19  Charlie Zender  <zender@uci.edu>

	* Mark all routines containing nco_put_var*() calls as OpenMP
	critical regions. Most nco_put_var*() calls occur in top level
	routines and were already enclosed in critical regions.
	Routines newly marked tended to be "under the radar" exceptions
	present only in programs which were not parallelized (e.g., ncks).
	These include: nco_cpy_var_val_mlt_lmt(),
	However, at least one routine, arm_time_install(), contained
	a write statement which I had forgotten all about.

	* Mark all routines containing nco_get_var*() calls as potential
	OpenMP critical regions (they are critical when called with
	identical nc_id's).
	These include: arm_base_time_get(), nco_cnv_ccm_ccsm_cf_date(),
	nco_prn_var_val_lmt(), nco_msa_rec_calc(), nco_var_get()

	* Mark nco_var_mtd_refresh() as non-OpenMP Critical
	Based on discussions with Unidata, metadata access (as opposed to
	data access) is thread-safe because all metadata is cached when
	file is opened.

2005-10-17  Harry Mangalam  <hjm@tacgi.com>

	* Updated index.shtml to include Benchmark info

2005-10-16  Charlie Zender  <zender@uci.edu>

	* Verify netcdf4 features work on Ubuntu AMD64 (sand) and Libranet x86 (elnino)

2005-10-14  Charlie Zender  <zender@uci.edu>

	* Alphabetize lists in Makefile.am

	* Add nco_mpi.h to HEADER_SOURCE in Makefile.am

2005-10-13  Charlie Zender  <zender@uci.edu>

	* Re-working SMP code to open files in parallel mode

	* Update MANIFEST

	* Attempt to add -U_POSIX_SOURCE token to MACOSX in configure build

	* Change MACOSX to include sys/time.h rather than time.h so that
          struct timeval is defined before use in struct rusage

2005-10-12  Charlie Zender  <zender@uci.edu>

	* Insert stub for MPI documentation

	* Finish netCDF4 documentation in manual

	* Commit netCDF4 output support for all operators
	  New options -4,--4,--64bit,--fl_fmt,--netcdf4 control file format

	* ncks: Eliminate --fmt,--format synonyms to avoid netCDF4 confusion
          Change --sng to --sng_fmt

2005-10-12  Harry Mangalam  <hjm@tacgi.com>

	* added --enable-netcdf4 to configure, configure.in to find the bits
	necessary (libhdf5, libhdf_hl) to build the netcdf4 version of NCOs
	(TODO bld52)

	* mods to mk_bm_plot.pl to zero time axis (TODO bld56), compute
	  regression and place on plots (TODO bld57),

2005-10-08  Charlie Zender  <zender@uci.edu>

	* netCDF4 causes a regression in ncpdq packing/unpacking TODO nco615

2005-10-07  Charlie Zender  <zender@uci.edu>

	* Remove USE_FORTRAN_ARITHMETIC from bld/Makefile

	* Support netCDF4 in bld/Makefile

	* nco_create_mode_prs() interprets user-specified file format

	* nco_create_mode_mrg() merges clobber mode with user-specified file format

2005-10-06  Charlie Zender  <zender@uci.edu>

	* Add netCDF4 file writing capability to ncks
	Compatibility tokens are in nco.h so netCDF3 libraries do not complain

	* Change NETCDF4 to ENABLE_NETCDF4

2005-10-03  Charlie Zender  <zender@uci.edu>

	* Add hooks to move ncra.c threading to embrace file opens

2005-09-30  Daniel Wang  <wangd@uci.edu>

	* Branch mpncra.c to reorganize and understand nco593

2005-09-29  Charlie Zender  <zender@uci.edu>

	* Clean up mpncra.c by removing barriers, adding comments

	* Remove superfluous close/open fl_in for MPI mpncra/mpncrcat/mpncea

2005-09-28  Harry Mangalam  <hjm@tacgi.com>

	* Added --dust_user to allow setting a user that can log
		into dust for testing (hmangalm@esmf -> hjm@dust)

	* Fixed file tests broken in nco_bm.pl re-org.

	* Fixed udp reporting as per ditto.

2005-09-27  Charlie Zender  <zender@uci.edu>

	* Implement static executable option to bld/Makefile with STC=Y

2005-09-25  Charlie Zender  <zender@uci.edu>

	* Move final worker open/close calls to with ncra/ncea block

	* Change NC_WRITE to NC_WRITE|NC_SHARE in MPI codes

2005-09-24  Charlie Zender  <zender@uci.edu>

	* Include Daniel's signal suspend code (-S switch) in mpncra

	* Use nco_set_fill() prior to each worker write

2005-09-23  Charlie Zender  <zender@uci.edu>

	* Remove nco_tst.pl from distribution

2005-09-23  Harry Mangalam  <hjm@tacgi.com>

	* Check for IP#/hostname conflicts, LAM/lamd,
	 and MPICH/mpd in nco_bm.pl to help debug MPI errors.

2005-09-22  Charlie Zender  <zender@uci.edu>

	* Change remaining NCAR_CCSM references to CCM_CCSM_CF

2005-09-21  Charlie Zender  <zender@uci.edu>

	* Filter garbage files from bld/Makefile tags target

	* Tokenize/variable-ize various static MPI-related constants
	This is intended to improved readability and literate programming-ness
	Replaced naked constants with following compile-time tokens/enums:
	mgr_id,WORK_ALLOC,WORK_REQUEST,TOKEN_ALLOC,TOKEN_REQUEST,TOKEN_RESULT,
	NO_MORE_WORK,TOKEN_WAIT,TOKEN_ALLOC

	* Create new header nco_mpi.h for all MPI-specific header information
	Currently this header is only accessed by main() MPI programs
	Hence it is not (yet) part of libnco.a
	Header assumes its inclusion is already conditional on ENABLE_MPI
	This is currently a header mostly for pre-processor tokens
	with few odd file scope constants needed by MPI routines
	There are no functions yet
	Adding functions would require creating a corresponding *.c file
	Adding *.c file requires including it in libnco.a or separately linking
	MPI executables to it, i.e., slightly complicating the build procedure.
	I'm not yet sure I want _any_ MPI link dependencies in libnco.a
	Cross-platform link weirdness (e.g., AIX) makes this something to avoid
	as long as possible

2005-09-20  Harry Mangalam  <hjm@tacgi.com>

	* added --xdata to nco_bm.pl to allow commandline data path to be entered
	(to allow benchmarking on different filesystems without resetting
	DATA env var).

2005-09-18  Charlie Zender  <zender@uci.edu>

	* Tweak ncatted expected answer to pass hdr_pad test with new nco_bm.pl

	* Hack nco_bm* to pass thr_nbr,omp_flg,nco_D_flg

        * Re-remove prohibition on mpi_prc and thr_nbr simultaneously defined

	* Add mpi_fake_cp target to overwrite nc* with mpnc* (for AIX tests)

	* SMP mpncwa fails regression test 4 when thr_nbr > 1. TODO nco604.

	* All SMP mpnc*.c codes now compile cleanly

	* Fix SMP mpncpdq TODO nco598 by calling nco_close() once not twice

2005-09-17  Charlie Zender  <zender@uci.edu>

	* SMP mpncpdq fails ncpdq regression test 4. This is TODO nco598.

	* Add mpi_cln target to bld/Makefile to remove MPI executables
	This makes it simple to build/erase all MPI_FAKE executables

	* Yesterday's MPI_FAKE mpncea fix broke MPI mpncea regression test 1
	Today's fix works with SMP and MPI mpncea/mpncra/mpncrcat
	Testing shows this fix does nothing about ncrcat hanging TODO nco593

	* Add $HOME/nco/bm to Perl @INC so nco_bm.pl runs from directories
	(e.g., bld) from which bm is ../bm

	* Verify icc 9.0-compiled NCO works in UP/SMP/MPI modes

	* Add '/' to $prefix so nco_bm.pl works when executables in $MY_BIN_DIR
	NB: nco_bm.pl does not run for me unless $MY_BIN_DIR is defined
	Probably same for other bld/Makefile users.

2005-09-16  Harry Mangalam  <hjm@tacgi.com>

	* added --mpi_fake (aka -mpi_fke aka --fake_mpi)  to allow running of
	the mpi executables as single processes.  Since my laptop cannnot yet
	generate valid MPI apps, I can't tell what the real reulst of running
	them is but the commandlines look right.

2005-09-16  Charlie Zender  <zender@uci.edu>

	* Move mpncra.c nco_var_srt_zero() from MPI to common code so
	UP/SMP executables zero start vectors. Fixes mpncea bug TODO nco594.

2005-09-16  Harry Mangalam  <hjm@tacgi.com>

	* Re-org of regression and benchmarking script.  nco_bm.pl has
	been broken into 5 files:
	- nco_bm.pl - now does initialization and calls control scripts for
		benchmarking and regression
	- NCO_bm.pm - a Perl module that contains most of the functions
		except the regression tests.
	- NCO_rgr.pm - a Perl Module that contains only the regression tests
		to isolate them and make it easier to find the right one.
	- nco_bm_benchmarks.pl - the code chunk which is do-included that
		contains all the benchmark code.
	- nco_bm_md5wc_tbl.pl - the code chunk that contains all the md5 & wc
		checksums. (currently NOT working - see below)

	* the error/debug  messages have been cleaned up considerably and now
	are pumped out (mostly) at the end of each test if asked for.

	* a LOT of cruft was stripped out.  There was quite a bit of duplicate
	code, commented out code, 	code that didn't seem to be perl code.
	It's not all gone, but a lot of it is.

	* the only thing that definitely does not work at this point is the
	MD5 checking due to some particulary hairy namespace problems.

	* the MPI versions of the checks have not been tested yet either,
	altho the commandlines it generates are correct.

	* I belive it is up to date with the latest regression tests and
	benchmarks.  The relevant bits were diffed against the current code
	and they appear to be in sync.

2005-09-15  Charlie Zender  <zender@uci.edu>

	* Port ncwa 20050608 bugfix for DO_CONFORM_[MSK,WGT] to mpncwa

	* mpncea hangs on ncea regression test 4 (on sand with LAM) TODO nco597

	* Use fake end scopes to correct Emacs indentation in mpncra.c, mpncpdq.c

	* Test all FAKE_MPI mpnc* operators in place of nc* counterparts
	FAKE_MPI mpncea fails one test (TODO nco594) (regardless of thr_nbr)

	* Implement/fix OpenMP in MPI_FAKE portions of all mpnc*.c codes

	* Use icc ncecat bld/Makefile compilation fix for mpicc too

	* Use nco_mpi_get() to return MPI implementation information
	Invoke with undocumented ncks --mpi switch
	This (unwisely?) introduces mpi.h into libnco.a via nco_ctl.h
	Formerly, mpi.h only appeared in front-end codes
	Still no MPI _calls_ are in libnco.a, just header information

	* Allow MPI and OpenMP to both be true
	Now MPI_FAKE tests OpenMP so that MPI_FAKE operators are
	plug-compatible replacements for UP/SMP operators.
	No code actually takes advantage hybrid MPI/OMP since the MPI and
	OpenMP implementations are currently orthogonal in mpnc*.c level.
	This may change if benchmarks uncover good reasons to hybridize

	* Accomodate LAM MPI environment
	No difference between regressions with LAM and with MPICH2

2005-09-14  Charlie Zender  <zender@uci.edu>

	* Remaining MPI bugs do not appear to be NCO-caused memory problems

	* valgrind.txt suppressions are complete for default MPI
	configurations on ashes (mpich2, valgrind 2.2, gcc 4.0.0) and
	elnino (mpich2, valgrind 3.0.1, icc 8.1)

	* Make LAST_RECORD shared in OpenMP portion of mpncra.c

	* ncea regression test 3 is bizarre: ncea and MPI mpncea pass it,
	MPI_FAKE mpncea fails it. This is TODO nco594.

	* Verify UP and SMP mpncra execute successfully while MPI mpncra
	still hangs just before writing output file

	* Clean up mpncra.c to build cleanly with MPI_FAKE

	* Fix mpncecat (same ole' strlen(fl_out_tmp) bug)

	* Change all valgrind suppressions examples to use
	${HOME}/nco/doc/valgrind.txt, a direct copy of ${HOME}/c++/valgrind.txt

	* New MPICC, MPICXX logic in Makefile simplifies OS-specific sections
	AIX MPI builds must be done from scratch, i.e., make cln;make MPI=Y
	AIX MPI builds break non-MPI operators
	Hence a complete set of AIX executables requires two makes

	* Add valgrind suppressions for MPICH2 to ~/c++/valgrind.txt
	With these suppressed, valgrind finds no NCO-caused leaks in mpncbo
	MPID_* appears to cause a few harmless leaks

	* Move nco_free(cmd_ln) from master processor code to NCO-generic
	memory clean-up to avoid small leak in MPI'd operators

	* Regression test shows mpncbo commutivity modifications work!
	Same two-file framework should be implemented in ncflint/mpncflint

	* Only allow master MPI process to strlen(fl_out_tmp)
	This fixes nasty regressions which I introduced into Gayathri's codes
	Still need to understand why it caused the bug in the first place

2005-09-13  Charlie Zender  <zender@uci.edu>

	* Move TOKEN_FREE=True to after nco_close() after nco_var_val_cpy()

	* Declare all MPI-specific variables in one place in mpncbo.c
	This removes all warnings when spoofing MPI with MPI_FAKE

	* Clean up bld/Makefile header

	* Rename FAKE_MPI switch to MPI_FAKE in bld/Makefile

2005-09-12  Charlie Zender  <zender@uci.edu>

	* Change $caseid and $xpt_dsc to traditional meanings in nco_bm.pl

	* Add MPI CMD_LN's to nco_bm.sh for MPI regressions/bm's in loadleveler

	* Change pvmgetarch location from ~/bin/sh to ~/sh everywhere

2005-09-11  Charlie Zender  <zender@uci.edu>

	* Update bld/Makefile to work with MPICH2 rather than MPICH

	* Add doc/mpi.txt to document MPI environments for NCO

2005-09-10  Charlie Zender  <zender@uci.edu>

	* Pruned chapter/section/node titles

	* Found that many/most MPI tests complete successfully on soot (fedora)
	MPI failures on debian may be temporary/unreliable
	Documented different test results in MPI section of TODO

	* Committed recent mpncbo.c commutivity changes

2005-09-09  Charlie Zender  <zender@uci.edu>

	* Complete and clean-up NCO MPI synonyms in prg_prs()

2005-09-08  Charlie Zender  <zender@uci.edu>

	* Change CPP consistently with CC for Linux MPI compiles
	This ensures CPP finds mpi.h's hidden in strange directories

	* Add FAKE_MPI switch to compile MPI executables without MPI

	* Fix sundry compiler warnings with MPI front end codes

	* Port ncbo commutivity changes to mpncbo.c
	  Resulting SPMD executable mpncbo hangs where previous mpncbo works
          Refrain from committing new mpncbo.c until it works

2005-09-07  Charlie Zender  <zender@uci.edu>

	* Add ncrcat to regression test. Test chosen hangs with MPI.

	* Make mpncra regression first ncra test for faster failure

	* Change sftp regression test to succeed by breaking into two steps
	so that automatic sftp "Fetching..." string does not confuse tester

	* Allow mpncbo regression test to fail TODO 579

2005-09-06  Charlie Zender  <zender@uci.edu>

	* mpncra.c: Correct printf arguments for type

	* Change bld/Makefile MPI handling so CFLAGS gets used

2005-08-22 Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-3_0_2
	Changes since nco-3_0_1: icc, OPeNDAP, ftp, sftp, .netrc, hdr_pad,
	cf, bm for MPI + OPeNDAP

	* Plug two small leaks in ncks when printing and fl_out=NULL

	* Plug double-free() error when fl_out=NULL in ncatted
	Double-free() errors cause operator failure on Fedora, which
	has a security-hardened glibc. Hence this was probably an
	unreported headache for many Fedora NCO users since 3.0.0 or
	3.0.1. Recommend they upgrade and this spurs release of 3.0.2.

	* Add regression tests for ncatted mss_val and hdr_pad features

	* Remove duplicate nc_enddef() from ncatted and ncrename

2005-08-19 Charlie Zender  <zender@uci.edu>

	* ncbo status: Works better than ever as far as I can tell. Now it:
	1. Correctly handles cases where input variable orders are different
	2. Correctly diagnoses (and attempts to broadcast) mis-matched dimensions
	3. Can serve as template for similar [mp]ncflint re-write (TODO 578)
	4. Improved logic needs to be merged into mpncbo.c so mpncbo
	   passes (currently deprecated) regression test ncbo #8 (TODO 579).
	5. Works well when nbr_var_fix_1>nbr_var_fix_2 so long as discrepant
	   variables are type fix not type prc but needs list merge to
	   work when nbr_var_fix_1<nbr_var_fix_2 (TODO 581).
	6. Works for rank(var_1) > rank(var_2), not rank(var_2) > rank(var_1)
	   Pre-compute broadcast size before var_def(out_id,var_out) (TODO 552)

	* Completely fixes TODO 550. Serial NCO regression test is spotless again.

	* Plug memory leak caused by ncbo two list re-write

2005-08-19  Harry Mangalam  <hjm@tacgi.com>

	* Mods to nco_bm.pl to include but skip flaky mpi versions of ncpdq ncra

	* added alias line to accept mpncra

2005-08-19 Charlie Zender <zender@uci.edu>

	* Invert order of operands given to nco_var_sbt() by ncbo
	This fixes numerics of ncbo regression TODO 550
	However, operand order to nco_var_[sbt,dvd,...] is non-intuitive
	and should be reversed NCO-wide in the future (now TODO 576)

2005-08-18 Charlie Zender <zender@uci.edu>

	* Add SFTP and .netrc-based password-protected FTP (to ESG) regression tests

	* Add stub for wget-based regression test

	* Fix ncbo regression to fail for right reason

	* Re-work nco_bm.pl net tests to all (potentially) pass for anyone

2005-08-17  Harry Mangalam  <hjm@tacgi.com>

	* Add MPI bits to nco_bm.pl to test the MPI'ed operators.

2005-08-17  Charlie Zender  <zender@uci.edu>

	* Add MPI_PRC option for bld/Makefile to pass through to nco_bm.pl

	* Add --hdr_pad/--header_pad options to ncatted and ncrename

	* Document --hdr/--header options

2005-08-14  Charlie Zender  <zender@uci.edu>

	* Implement --hdr/--header options to ncks with nco__enddef()

	* Add hooks for output file-mode specification to ncks.c
	This may break compatibility with netCDF nersion 3.5.x and hence OPeNDAP
	Currently shrouded by #ifdef NETCDF4 tokens

2005-08-12  Harry Mangalam  <hjm@tacgi.com>

	* small mods to nco_bm.pl to track diff in wall vs (sys+user) to
		get idea of how much time is lost to I/O (theoretically)

2005-08-13  Charlie Zender  <zender@uci.edu>

	* Finished ncbo heart transplant: Symmetric subtraction still not working
	Regression tests appears to be no worse than before (ncbo causes 2 fails)
	Valgrind indicates new code is leak-proof except for one
	double-free() caused by ncap_var_cnf_dmn()
	Code appears to be commit-able since it's cleaner and extensible

	* Extended dual list method into heart of ncbo
	Saved last known working version as ~/ncbo.last_known_working.c

	* Change NCAR_CCSM_FORMAT to CNV_CCM_CCSM_CF, ARM_FORMAT to CNV_ARM

2005-08-11  Charlie Zender  <zender@uci.edu>

	* Implement -Z/--64-bit-offset switch in ncatted and ncrename

	* Deprecate ctime_r() code from ncatted, put it (deprecated) into ncra

	* Add -4, --hdf, --netcdf4 switches to request HDF storage format


2005-08-08  Harry Mangalam  <hjm@tacgi.com>

	* change nco_fl_utl.c to use passive ftp rather than active
		(many ftp servers no longer work with active requests)

	* change nco_bm.pl to do net tests (except for those requiring a
		specific login	or location).  Tests ftp (see 1st change) and
		DODS if compiled with DODS/DAP.
2005-08-08  Harry Mangalam  <hjm@tacgi.com>

	* final updates to nco_bm.pl for testing DAP (reduced number of
		files requested under DAP (also becasue of bug in DAP that
		refuses > 30 files at once in some cases.

	* changed Makefile.in to work with 'make test' & 'make devtest'

2005-08-05  Harry Mangalam  <hjm@tacgi.com>

	* cleaned out refs to '-n' in ncflint.c (doesn't support it)

	* major mods to nco_bm.pl to add DODS support to testing

	* may be a bug in DODS server code that doesn't allow >30 files in
		one session - posted.

2005-08-03  Charlie Zender  <zender@uci.edu>

	* Added msk_* to ncbo's do not touch list for CF

2005-08-02  Charlie Zender  <zender@uci.edu>

	* Added area, lat_bnds, lon_bnds to ncbo's do not touch list for CF

	* Re-wrote Conventions section in terms of CF rather than CCSM

2005-07-25  Charlie Zender  <zender@uci.edu>

	* Re-coded so NCO uses .netrc, if present, only when .netrc is
	read-able and contains remote host name.
	Anonymous FTP is automatically invoked if .netrc does exist or
	does not contain remote host name.
	Henceforth NCO access to password protected FTP sites (like ESG) is scriptable!

	* FTP uses .netrc, if present, in all cases instead of anonymous FTP
	This essentially breaks anonymous FTP

2005-07-22  Charlie Zender  <zender@uci.edu>

	* Finished SFTP support in nco_fl_mk_lcl()
	Syntax is sftp://hostname:/filename
	Updated manual accordingly

	* Add Gayathri's latest mpncra.c to distribution and Makefile

2005-07-21  Charlie Zender  <zender@uci.edu>

	* Change test1.sh to use CWD ncks so cygwin works
	We should deprecate the FTP and DODS tests and move to nco_bm.pl

2005-07-18  Charlie Zender  <zender@uci.edu>

	* Add .netrc information to FTP description in manual

	* Add hooks for sftp support in nco_fl_utl()

	* Improve OPeNDAP examples in manual

2005-07-15  Harry Mangalam  <hjm@tacgi.com>

	* Change UDP log format from nco_bm.pl to make for better parsing

	* Add new script to bm dir (mk_bm_plots.pl) to convert UDP data to
	  postscript plots for each operator (currently wall, real, sys,
	  user time) but can add output of rusage if it looks useful as well.

2005-07-14  Charlie Zender  <zender@uci.edu>

	* MPI NCO with icc 9.0 appears to work on dual Opterons!

	* OpenMP NCO with icc 9.0 passes regression tests on dual Opterons!

	* Change nco_mmr_typ to enumerated type to fix icc warning on Opteron

	* Put more icc flags in configure.in

	* MPI NCO with icc 8.1 successfully compiles and execute on Fedora
	It failed to execute with message "lamd not running"
	until "lamboot" command was executed first to setup LAM/MPI
	environment. Debian machines need no such initial setup.
	After logging out and in once, MPI NCO ran fine without having
	to run lamboot first. Apparently it's just a one-time setup
	(per machine? or per user?)

	* Verified that MPI NCO works with GCC on dual opteron machines

	* Add -D_POSIX_SOURCE to default gcc and icc flags to fix compiler
	warnings in ncap_lex.l

	* Add -D_BSD_SOURCE to default icc flags to fix MPI with icc

2005-07-10  Charlie Zender  <zender@uci.edu>

	* Verified icc passes regressions tests and icpc-compiled
	libnco_c++.a works as intended. Have not tried with autotools yet.
	Have not yet tested MPI programs with icc.

	* -axW flag causes icc 8.1 to die compiling ncecat
	This appears to be an icc bug
	Implement target-specific workaround in bld/Makefile

	* Implement Intel 8.1 compiler compatibility

2005-07-07  Charlie Zender  <zender@uci.edu>

	* Fix small leak in ncap_var_stretch() TODO ncap74
	ncap now appears to be leak-proofed!

	* Added lots or mirror fl_1=fl_2 code to ncbo in preparation
	for attempted solution to subtraction problems related to
	asymmetry. In plain English: copied lots of code, didn't solve any
	problems yet.

	* Add td,tx,ty,tz,txyz variables to in.cdl

	* Match limit with dimension based on name not ID so
	nco_dmn_lmt_mrg() works with single limit list on any input file

2005-07-03  Charlie Zender  <zender@uci.edu>

	* Realized that ncbo bug is longstanding/systemic and may
	require re-writing approach to determining confmormality of var_2.
	Current code is expected to break when second file has same name
	but different-sized dimensions, or has same-sized dimensions in
	different order, i.e., all sort of corner-cases.

2005-07-02  Charlie Zender  <zender@uci.edu>

	* Remove thr_nbr argument from ncatted in nco_bm.pl

	* DAP 3.5.1 triggers reproducible double-free() memory error in
	ncbo step of ncra regression test 16.
	Problem occurs regardless of OpenMP (soot,elnino) and compiler (gcc,icc)
	ncra -O -C -v rec_var_flt_mss_val_dbl ~/nco/data/in.nc ~/foo_avg.nc
	ncbo -O -C -v rec_var_flt_mss_val_dbl ~/nco/data/in.nc ~/foo_avg.nc ~/foo.nc
	free(): invalid pointer 0x80e4a98!

	* Verified DAP 3.5.1 works with both build mechanisms with
	gcc NCO/gcc DAP (Debian elnino), and with icc NCO/gcc DAP

	* Report NC_64BIT_OFFSET rather than old-fashioned LARGEFILE test
	with -r option in nco_lbr_vrs_prn()

	* Change 'DODS' to 'DAP' or 'OPeNDAP' where possible in codbase,
	e.g., 'enable-dap', make DAP=Y, ENABLE_DAP

	* Support OPeNDAP 3.5.x in bld/Makefile

	* Re-write dods.sh for OPeNDAP 3.5.x terminology and save in new
	file opendap.sh

2005-06-30  Charlie Zender  <zender@uci.edu>

	* Critical region on OpenMP reads nco_get_vara() are still necessary
	Want to establish if this is NCO or netCDF problem
	Testing for reproducibility, following regressions on soot, esmf:

	Run        ncra		           ncwa
	soot 1     01                      01,13
	soot 2     02,06,10,11             none
	soot 3     01,04                   01
	esmf 1     01,02,11,12             none
	esmf 2     04,05,06,07,10,11,12,16 none
	esmf 3     02,03,04,09,15,16       13

	Regressions are non-reproducible, characteristics of threads
	over-writing eachother due to random timing conflicts.
	Hard to debug because of irreproducibility

	Q: NCO calls nco_get_vara() in many routines---why is the call in
	nco_var_get() the only one that needs to be critical?
	A: Probably because it is that most important, done on every
	variable

	Options:
	1. Ask Unidata whether they have tested SMP robustness of netCDF
	reads under demanding battery of conditions?
	2. Scrutinize uninitialized data reported by icc/valgrind?
	3. Write own SMP on read test?
	4. ???

	* Finish making opaque types nco_byte, nco_char, nco_int self-consistent

2005-06-30  Charlie Zender  <zender@soot.ess.uci.edu>

	* Change nco_long to nco_int to allow for future 64-bit type called nco_long

	* Abstract opaque types into new header nco_typ.h

2005-06-29  Charlie Zender  <zender@uci.edu>

	* Explicitly cast NC_CHAR type as "char" (rather than "unsigned
	char") in nco_netcdf.c and nco.h. Previously, there were a mixture
	of "char" and "unsigned char" occurances.
	Not sure if this helps anything except consistency

	* Removed two of three critical regions in nco_var_utl.c
	Removing these causes no regressions with SMP on icc/x86 or xlc/Power4
	Final critical region is, well, critical
	Region contains the nco_get_vara()/nco_get_var1() calls themselves

2005-06-28  Charlie Zender  <zender@uci.edu>

	* Conditionally free both $1 and $3 in var,var addition in ncap_yacc.y

	* Try and fail to free input variables if they were promoted in
	ncap_var_cnf_dmn(). Not sure what prevents this from working.

2005-06-27  Charlie Zender  <zender@uci.edu>

	* Merge CCSM data processing example into nco.texi

2005-06-25  Charlie Zender  <zender@uci.edu>

	* Un-constify cvs_Name to workaround gcc-4.0+ warnings

2005-06-22  Charlie Zender  <zender@uci.edu>

	* Fix bld/Makefile indent that caused make to treat ncap: as
	command not rule

2005-06-21  Charlie Zender  <zender@uci.edu>

	* Make LINUX_CC more MPI-friendly for both gcc and icc
	'make MPI=Y' just works on my Debian machines now when
	MPICH_CC=gcc and fails when MPICH_CC=icc

	* Set OMP=N when MPI=Y in bld/Makefile

	* Add ${MDL_BIN_TRG} to .PHONY in bld/Makefile to solve problems
	with building MPI executables

	* Change configure.in 'case' statement from sparc-sun-solaris2
	to sparc-sun-solaris2* to handle newer solaris triplets

2005-06-21  Harry Mangalam  <hjm@tacgi.com>

	* fixed Makefile.in and nco_bm.pl to work with:
	make test      does regression test with no debug info
	make devtest   does regression test with debug info and udpreporting
	make benchmark runs benchmark with udpreporting
	make files     creates the benchmark files

	* nco_bm.pl now defaults to <nco_root>/src/nco as MY_BIN_DIR (if no
	environment var set) instead of going thru the dialog.

2005-06-20  Charlie Zender  <zender@uci.edu>

	* Add sys target to bld/Makefile.
	'make sys' installs executables in $MY_BIN_DIR to /usr/local/bin

2005-06-17  Charlie Zender  <zender@uci.edu>

	* Verified that nco_var_refresh() change does not introduce any
	memory errors on any operator. Marking TODO nco543 as closed.

	* Re-name nco_var_refresh() to nco_var_mtd_refresh() to better
	describe functionality (metadata, not data, is refreshed).

	* Refresh variable type in nco_var_refresh()
	Previously, only ID, nbr_dims, and mss_val were refreshed
	Now type is also refreshed. Was not sure full implications of this.
	It appears to work and causes no regressions
	Hence back out previous fix for nco543 and handle this way
	This is cleaner and more robust to varying variable types with
	each input file

	* Revert ncra input variable structure to unpacked type at end of
	record loop
	Reverting input values is not necessary since those are free()d next
	However, type member of structure must be unpacked value so that
	cast of new missing_value in nco_mss_val_get() in next
	nco_var_refresh() call (i.e., next file)
	This solves TODO nco543 but will break when variables are different
	unpacked types between files and both files contain missing values.
	Better solution is to refresh variable type in nco_var_refresh()?
	Will commit this first then try that next
	Best solution is to carry missing_value type in variable structure?

2005-06-17  Harry Mangalam  <hjm@tacgi.com>

	* Tested NCO with new (3.5.1) version of DAP/NC-DAP, with netcdf 3.6.
	Seems to work for small transfers but hangs with large transfers
	from sand's DODS server. Still testing.
	Brought configure and Makefile and .in's up to date with new DAP.
	May have to drop back to netcdf 3.5 tho.

2005-06-17  Gayathri Venkitachalam  <gvenkita@uci.edu>

	* Cleaned up mpncflint

2005-06-17  Charlie Zender  <zender@uci.edu>

	* Convert var_prc[idx]->mss_val back to on-disk type after every
	record _except_ the last record in ncra.
	This fixes valgrind memory error associated with TODO nco543
	Regression test still not passed, though no new regressions introduced

2005-06-16  Charlie Zender  <zender@uci.edu>

	* Added ncea regression test similar to current failing ncra TODO nco543

	* Remove call to nco_typ_cnv_rth() for var_prc[idx] in ncra and ncea
	Call appears redundant since variable is converted to output
	type with nco_var_cnf_typ() two lines later anyway.
	Removing nco_typ_cnv_rth() for var_prc[idx] causes no new failures
	in regression tests.

	* Set default packing policy for all potential MPI ncpdq operators

2005-06-16  Gayathri Venkitachalam  <gvenkita@uci.edu>

	* Added new operators mpncwa, mpncpdq, mpncecat

	* Modified mpncbo so that all processes do the final clean-up

	* Modified nco_ctl.c and nco_pck.c to accommodate new MPI operators

2005-06-15  Gayathri Venkitachalam  <gvenkita@uci.edu>

	* Added a couple of tests for ncra (average
	(i)rec_var_int_mss_val_int (ii)rec_var_int_mss_val_flt across 2
	identical input files) in nco_bm.pl which seem to fail

2005-06-15  Harry Mangalam  <hjm@tacgi.com>

        * MD5 version of nco_bm.pl checked in - works on SV (Single Values) on
	x86-32, x86-64, esmf.  Passes benchmarks on all these platforms.
	on x86-32, passes all regressions except for funny-wrap-on-Intel regression,
	        passes all MD5 & WC tests for regression (except noted above)
		passes all benchmarks with MD5, WC, SV
	on x86-64, passes all regressions except ncap funny business (fails 3)
               passes all but 4 MD5 checks (makes sense in terms of what fails)
               passes all benchmarks on SV but fails all MD5 checks
        on AIX-64  passes all regressions but 4 of the ncaps tests
               passes all MD5 & WC tests for regression (except noted above)
               passes all benchmarks on SV but fails all MD5 checks

        * pick up DATA and MY_BIN_DIR correctly

	* reduce debugging cruft, tho in debug mode, it still burps text in ugly ways

2005-06-15  Charlie Zender  <zender@uci.edu>

	* Add MD5 and SHA1 digests of nco.tar.gz to index.shtml

2005-06-13  Charlie Zender  <zender@uci.edu>

	* Improve threading code intention comments in nco_omp.c

	* Still need to tweak run and data directories in nco_bm.pl and nco_bm.sh

	* nco_bm.pl and nco_bm.sh appear to work with loadleveler
	Solution is not general yet because unable to pass environment
	variables (except DATA and HOME) through scripts for now

	* nco_bm.sh: Never pass strings with whitespace through Perl Getopt

	* nco_bm.pl: Print many arguments when dbg_lvl=1

2005-06-12  Charlie Zender  <zender@uci.edu>

	* Noticed that regression tests in nco_bm.pl report some
	apparent successes as failures on SUNMP, e.g.,
	Result: [1e+36] != Expected: [1e+36]
	always recorded as failure.
	Seems like any "Expected's" containing "+" string may fail.
	Perl problem?

	* Ran benchmarks on laptop (elnino), desktop (soot), supercomputer
	(esmf). Noted that file creation is sickeningly slow on laptop and
	desktop, takes thousands of seconds. Fast on ESMF. Same on
	benchmarks: very slow on laptop and desktop, fast on ESMF
	interactive node.

	* Add -t thr_nbr to nco_usg_prn() and nco.texi for newly threaded
	operators

	* Do not call ncap with threads in nco_bm.pl fl_cr8()

	* Allow nco_bm.pl to run locally from bld/Makefile

2005-06-10  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-3_0_1
	Changes since nco-3_0_0: 1. ncap exponentiation 2. ncwa threading
	3. intel icc compatibility 4. Improved benchmarking

	* Simplify treatment of math symbol table
	C99 mandates support for
	erf(), erfc(),tgamma(), acosh(), asinh(), atanh(), cosh(), sinh(), tanh()
	Some OS's, like Linux, Solaris, provide these without C99.
	Many others (AIX, SGI*, WIN32) do not.
	Complicating things, many C99 implementations, e.g., AIX xlc, do
	not yet support these functions.
	Hence, ncap only supports them on Linux machines.

2005-06-09  Charlie Zender  <zender@uci.edu>

	* Change default AMD64 compiler to gcc-4.0

	* Revert patches to known working state (i.e., make reads critical)

	* Temporarily un-revert critical region patches in nco_var_get.c
	With icc and xlc_r, this causes variable numbers of ncra and ncwa
	regressions. Usually many more ncra than ncwa.
	icc/valgrind combination gives capability to narrow down causes.

2005-06-08  Charlie Zender  <zender@uci.edu>

	* Change thr_nbr_max_fsh from 1 to 2 for ncrcat

	* Change thr_nbr_max_fsh from unlimited to 2 for ncecat

	* Change thr_nbr_max_fsh from 1 to unlimited for ncwa

	* Change thr_nbr_max_fsh from 4 to unlimited for ncbo

	* Marked TODO nco325, nco345, nco523, nco189, nco214 as resolved

	* Re-ran all valgrind tests on soot with two threads enabled
	All operator appear memory clean in NCO portions except ncwa
	ncwa may have a few unfree()d buffers but hard to tell with
	valgrind version 2.2 which does not have good tracebacks.
	Threading library has plenty of unfree'd memory which apparently
	is harmless and there's nothing to be done about that anyway.

	* ncbo memory problems disappeared

	* Add calls to nco_omp_ini() and nco_thr_att_cat() in ncecat
	This fixes problem where thr_nbr was being set but not used

	* Use icc warnings to improve printf() formatting in nco_prn.c

	* Optimize bld/Makefile icc switches for OPTS=O,R,D,X

	* Do not pass --thr_nbr to ncatted in nco_bm.pl

	* Change DO_CONFORM_MSK,DO_CONFORM_WGT from private to
	firstprivate and make sure both always have default values
	This fixed all ncwa regressions with threads!

	* icc-compiled version passes regression test perfectly on soot
	only when threading is disabled at compile time, e.g., OMP=N.
	With threading enabled, code fails many tests (1 ncra and 22 ncwa)
	....regardless of thread number! Not requesting any threads,
	(i.e., -t 0 or no -t specification), requesting one thread (-t 1),
	or requesting more threads breaks regression tests.

	Interesting that AIX version passes all, and icc fails many,
	regressions when threading enabled with one thread.
	icc fails _most_ ncwa calls. Averaging a single variable fails!

	Lots of juiciness in error messages!
	icc will help to isolate any problems because it is so much more
	sensitive than xlc_r. Moreover, valgrind appears to work fine
	with icc-compiled OpenMP code on Xeon.

	* Code compiles as clean as possible with icc 8.1 and gcc 4.0

	* Prohibit double definition of cmp_nm with icc

	* Updated bld/Makefile and configure.in to work better for
	icc by making -std=c99 standard switch

	* Changed default compiler on Ubuntu to GCC-4.0
	Fixed new CEWI warnings resulting from change
	Testing shows no new regressions

	* Reverting the 20050519 critical region patches fixes ncra
	regressions on AIX OpenMP. Hypothesis that libnetcdf.a is not
	thread-safe on reads (or writes) gains considerable weight,
	since all the patches do, I think, is make reads critical.

	* Reverted 20050519 critical region patches

	* About to revert patches of 20050519 which removed critical
	regions from NCO read routines

	* Added nco.texi example on changing non-record to record dimensions

2005-06-07  Charlie Zender  <zender@uci.edu>

	* Noticed that many ncra regression tests fail on AIX
	When did this begin? What causes it?
	Results from date-stamped-version tests
	20050605: Fail;
	20050524: Fail;
	20050521: Fail;
	20050520: Fail;
	20050519: Succeed;
	20050517: Succeed;
	20050510: Succeed;

2005-06-06  Charlie Zender  <zender@uci.edu>

	* Add THR_NBR option to bld/Makefile to pass to nco_bm.pl

	* Learned that Linux gamma() function is just plain broken
	and obsoleted, at least in C99, by tgamma() function.
	Linking gamma() symbol to tgamma() intrinsic solves Linux problem
	Note that tgamma() is a C99 feature
	Referencing tgamma() in the code is the second C99 feature,
	after the restrict type keyword.

2005-06-05  Charlie Zender  <zender@uci.edu>

	* gamma() function appears broken in ncap regression test 07

	* Added ncap regression tests for modulo, exponentiation, sin,
	cos, atan operations

2005-06-02  Charlie Zender  <zender@uci.edu>

	* Henry implemented ncap exponentiation bugfix.
	Versions < 3.0.1 incorrectly handle exponentiation of a variable
	to a variable power (V^V).

2005-05-29  Charlie Zender  <zender@uci.edu>

	* Account for typesize in allocation of ncap_ln_nbr_crr and
	ncap_fl_spt_glb in glb_init_free(). Fixes memory read/write error.

	* Began purifying ncap memory

	* ncks appears to be memory-pure!

	* Leak-proofed nco_msa.c

2005-05-26  Hary Mangalam  <hjm@tacgi.com>

	* finally brought in ncecat in OMP form

	* changed configure.in configure scripts to reflect sync with
	bld/Makefile flags; (again) noted problem with static/shared and
	DODS in configure.eg

	* accepted CZ's peculiar variable naming in bm script.

2005-05-26  Charlie Zender  <zender@uci.edu>

	* More fully initialize lmt_all_crr->lmt_dmn[0] to enable
	subsequent free()ing with nco_lmt_free()

	* Tidy up nco_cpy_var_dfn_lmt() prototype and use lmt_all
	rather than lmt to designate lmt_all rather than lmt structures

2005-05-26 Henry Butowsky  <henryb@ntlworld>

	* Changed in ncks.c lmt_all_lst from a 1D to a 2D variable
	also changed associated functions in nco_msa.[ch]

2005-05-24  Charlie Zender  <zender@uci.edu>

	* Changed from ctime() to re-entrant ctime_r() with ncatted
	Does not help reduce unfree()'d system memory according to
	valgrind 3.0 development branch. Does not hurt, either.
	How portable is ctime_r()? SUS, yes, but POSIX?

2005-05-23  Charlie Zender  <zender@uci.edu>

	* Touch parameter rusage_who for CEWI in nco_mmr_rusage_prn()

	* Fix double-free() problem in ncrename

2005-05-22  Charlie Zender  <zender@uci.edu>

	* Add memory cleanup to sng_lst_cat()

	* Nearly purified ncatted memory

	* Purified ncrename memory

	* Began ncks memory cleanup

	* Fix union type-casting in nco_var_cnf_typ()

2005-05-21  Charlie Zender  <zender@uci.edu>

	* Debug statements for TODO nco523, vexing SMP OpenMP thread bug

	* Execute free(var_prc[idx]) sooner in ncwa

	* Re-tweak print formatting in nco_bm.pl

2005-05-19  Charlie Zender  <zender@uci.edu>

	* Change nco_get_var*() routines in nco_var_get() from SMP
	critical to non-critical. Not sure why they were originally
	critical.

	* Change nco_var_upk*() routine in nco_var_get() from SMP
	critical to non-critical. Not sure why it was originally
	critical.

	* Make nco_var_refresh() routine from SMP non-critical.
	Not sure why it was originally critical.

2005-05-18  Charlie Zender  <zender@uci.edu>

	* All arithmetic operators except ncap now have no known memory
	leaks or errors

	* Finished memory cleanup on ncwa

2005-05-17  Charlie Zender  <zender@uci.edu>

	* Appear to have fixed all leaks in nco_var_avg()

	* Fix problem with dangling pointers in var_out caused by
	destruction/creation of var_prc_out in nco_var_avg().
	Solution adopted is somewhat hackish: rearranging nco_var_lst_free()s
	Perhaps better solution would be to copy new var_prc_out pointers into
	var_out, the free() memory normally.

	* Plug leak when nco_var_avg() called with variables without
	averaging dimensions (i.e., fixed variables). When this occurs,
	return copy of original input instead of NULL (old method).

	* Add cleanup_and_exit branch to nco_var_avg()

	* Never allocate tally array for var_prc[idx] in ncwa, since it is
	never used and caused double free() problems when it share the
	var_prc_out[idx] tally buffer

2005-05-16  Charlie Zender  <zender@uci.edu>

	* Stop cross-referencing fix with var->xrf->xrf=fix in nco_var_avg()

	* Make nco_bm.pl output format for regression test look like configure

2005-05-07  Charlie Zender  <zender@uci.edu>

	* Reduced default verbosity of nco_bm.pl

	* Fixed ncap_var_init() prototype and nco_cnf_typ() to compile cleanly

2005-05-06 Henry Butowsky  <henryb@ntlworld>

	* Cleaned up double parsing in ncap.c,ncap_*.[hc]
	  now passes basic tests

2005-05-05  Charlie Zender  <zender@uci.edu>

	* Comment out three_double_dmn from in.cdl to avoid triggering
	errors in DODS server and/or netCDF client library

2005-05-03  zender  <zender@uci.edu>

	* Threaded ncflint. Not tested yet.

2005-04-29  Gayathri Venkitachalam  <gvenkita@uci.edu>

	* Cleaning up mpncbo.c prior to replacing ncbo.c

2005-04-27  Charlie Zender  <zender@uci.edu>

	* Cleaning up mpncbo.c prior to replacing ncbo.c

2005-04-25  Gayathri Venkitachalam  <gvenkita@uci.edu>

	* Updated mpncbo to compile with and without MPI. Compiling
	without MPI=Y will result in identical executables mpncbo and ncbo
	* Updated Makefile to reflect the same
	* Added mpncflint, the MPI version of ncflint

2005-04-23  Charlie Zender  <zender@uci.edu>

	* Clean up main.c headers a little

2005-04-20  Charlie Zender  <zender@uci.edu>

	* cd to bm for all bm targets in bld/Makefile

2005-04-19  Charlie Zender  <zender@uci.edu>

	* Changed/added 'make tst' targets in bld/Makefile to use
	nco_bm.pl instead of nco_tst.pl

	* Finished ncecat cleanup

2005-04-19  Gayathri Venkitachalam  <gvenkita@uci.edu>

	* (Apparently) fixed the bug in mpncbo while hyperslabbing

2005-04-19  Charlie Zender  <zender@soot.ess.uci.edu>

	* Initial ncecat memory cleanup---still one problem with dimension list

2005-04-19  Harry Mangalam  <hjm@tacgi.com>

	* Large cleanup of benchmark code
	  integrated file build, benchmark, and regression testing
	  udp reporting only by request

	* added --queue to denote submission to queue (loadleveller, etc)
	which kills off script if the proper env vars aren't set.  If --queue
	isn't set, and env vars aren't set, script will prompt for correct paths
	added Failure column to summary output to make it easier to see which
	ones failed.

	* added nco commandline to UDP report so can verify timing exactly.

	* added --thr_nbr to option list to set # of threads to use (not
          implemented internally yet tho)

	* finished adding those benchmarks that CZ wants added:
		1 - ncwa averaging all variables to scalars
		2 - ncra time-averaging 2^5 (i.e., one month) files (using symlinks)
		3 - ncea averaging 2^5 files
		4 - ncbo differencing two files (using '-' as operator)
		5 - DEFERRED (Martin Schultz multi-slabbing test)
		6 - ncap long algebraic operation
		7 - ncpdq packing the file
		8 - ncpdq dimension-order reversal the file

	* above benchmarks complete cleanly on sand and on those that can be done
	  on bodi

2005-04-18  Charlie Zender  <zender@uci.edu>

	* With following six modifications, mpncbo compiles, runs and
	gives apparently correct results on my laptop with default run.
	However, mpncbo exits with errors when hyperslabs are specified,
	e.g., mpncbo -d lon,1 ...

	* Synchronize mpncbo memory clean-up with latest ncbo

	* Fix lmt handling in mpncbo as per 20050416 changes

	* Add prototype for nco_mpi_att_cat() to nco_att_utl.h

	* Add mpncbo synonym for ncbo in prg_prs() and nco_op_typ_get()

	* Remove #ifdefs around nco_mpi_att_cat() which requires no
	additional MPI-specific headers so is always safe to compile

	* Change MPI attribute to nco_mpi_task_number

2005-04-18  Gayathri Venkitachalam  <gvenkita@uci.edu>

	* Checked in mpncbo.c & nco_att_utl.c after updating them to
	compile with MPI=Y. Compiling with MPI=N still behaves the way it
	used to.

2005-04-18  Charlie Zender  <zender@uci.edu>

	* Memory status:
	The only commonly used code which has leaks/errors in the arithmetic
	operators (excluding ncap) appears to be the dimension conformance
	code, i.e., broadcasting. ncwa highlights these problems.
	ncbo, ncea, ncflint, ncpdq, ncra, ncrcat are either memory-clean
	or causes of problems are known and await resolution.
	ncecat has yet to be examined but is expected to respond well to
	same treatment given to ncea/ncra/ncrcat.

	Problem #1: Promotion of char->double (and byte->double?) uses
	uninitialized memory. This may be a C-language or libc problem,
	ultimately, which we can do nothing about. Not sure. It is not
	serious because promotion of char->double for arithmetic is
	intrinsically ill-defined and rarely used. It would be helpful
	to document this problem in the manual, and possibly give users
	some control over code paths, e.g.,
	--disable_promote_char_double.

	Problem #2: nco_var_cnf_dmn(), in its various incarnations and
	uses, leaks worse than Harry's roof.
	The upside is that it is memory-efficient and fast.
	This problem is serious and needs careful fixes.

	Problem #3: ncap. I have not examined ncap since fixing the huge
	ncap_var_stretch() leak. There seem to be many tiny leaks
	in the flex and bison-generated code, which surprises me.
	If these really are leaks, not sure what we can do beyond
	creating a valgrind suppression file for them.

2005-04-17  Charlie Zender  <zender@uci.edu>

	* Clean up leaks in file name code when abbreviation lists used
	Solving leak in nco_fl_nm_prs() was rather contorted but appears
	to work

	* Fix off-by-two error in memmove() in ncwa

2005-04-16  Charlie Zender  <zender@uci.edu>

	* Initial memory work on ncflint

	* Currently, memory in ncpdq and ncbo appears faultless
	memory in ncra has one problem when up-converting char to double
	for averaging

	* Tighten up memory in ncwa by free()ing dimension lists

	* Changed limit (lmt) memory paradigm from 1D to 2D structure list
	in accord with all string, variable, and dimension lists.
	This makes handling limits easier, at the expense of more indirect
	referencing in metadata routines. Replace lmt[idx]. with lmt[idx]->
	All lmt-related memory leaks appear to be gone

2005-04-15  Charlie Zender  <zender@uci.edu>

	* Gayathri noted problem with missing_value inconsistency between
	var_prc and var_prc_out for identical input files on both packed
	and unpacked variables. Still investigating.

	* Case where var2 did and var1 did not have missing_value was
	treated incorrectly in ncbo.c and inconsistently in
	nco_mss_val_cnf(). Fixed.

2005-04-14  Charlie Zender  <zender@uci.edu>

	* Noticed that Fedora core 2 glibc automatically warns about
	double free()s etc and that regression test doesn't look so
	hot when all these are printed. More reasons to fix the remaining
	memory problems...

	* Fixed AIX regression for printing bytes by moving from
	non-standard %hhi format (which printed all bytes as "hi" on AIX)
	to standard %c format, which is lame and does not print signed
	integer values for bytes. Now it should not trigger regressions.

	* Added mpncbo.c as MPI-enable ncbo alternative
	Builds only with bld/Makefile using make MPI=Y switch
	and requires MPI packages (e.g., mpich) and access to mpi.h
	Has not been verified not to break autotools builds yet

2005-04-13  Charlie Zender  <zender@uci.edu>

	* Fixed all memory leaks in simplest ncbo calls

2005-04-12  Charlie Zender  <zender@uci.edu>

	* Free() dmn_lst in all applicable operators

	* Free() xtr_lst in all applicable operators

	* Free() cmd_ln in all operators

	* NULL'ify var_prc_out[idx]->tally when free'ing
	var_prc[idx]->tally in ncra. This fixes double free() condition
	caused because these both point to same buffer.

2005-04-10  Charlie Zender  <zender@uci.edu>

	* Implement preliminary memory free routines in ncra
	Fairly straightforward---best place to start now that ncpdq is done

	* Implement preliminary memory free routines in ncwa
	Clear that limit structures will need some deep work
	Genuine memory errors do occur and give hope that ultimately
	ridding all ncwa problems may be possible by fixing leaks

	* Implement preliminary memory free routines in ncap and
	immediately give up due to size and scope of job

	* Move list free functions to respective utility routine files

	* Changed names of ncap routines that maniputlated nm_id structures
	These routines used the *_var_* nomenclature, e.g., nco_var_lst_free(),
	even though they manipulated lists of nm_id_sct structures.
	Changed *_var_* to *_nm_id_* in these functions so that routines
	are named after structure types which they manipulate, rather than
	what their contents are

	* Created new routines to free lists of lmt, dmn, var structures

	* ncpdq is officially leak-free! The first leak-free operator

	* var_nm is finally free'd, takes care of TODO nco224

	* Fixed bug in nco_var_cnf_dmn() and nco_var_stretch() where
	var->nm pointer was being copied instead of deep-copying
	This appears to have fixed ncwa regression TODO nco490

	* Verified that var->nm freeing is last obstacle to perfect memory
	releases in ncpdq

2005-04-09  Charlie Zender  <zender@uci.edu>

	* Simplify nco_lmt_udu_cnv() because of new lst_prs_2D() list processing

	* Transition all of NCO from lst_prs_1D() to lst_prs_2D()
	All operators still pass regression test

	* Use nco_sng_lst_free() to free fl_lst_in in ncpdq

	* Transition ncpdq from lst_prs_1D() to lst_prs_2D()
	All operators still pass regression test

2005-04-08  Charlie Zender  <zender@uci.edu>

	* Patch nco_mmr.h to include time.h.
	Fixes Mac OS X build for struct rusage

	* Change default printing behavior of ncks again using suggestion
	of Takeshi Enomoto.
	ncks in.nc : Prints all data and metadata
	ncks -M in.nc : Prints only global metadata
	ncks -m in.nc : Prints only variable metadata
	ncks -H in.nc : Prints only variable data

2005-03-27  Charlie Zender  <zender@uci.edu>

	* Create lst_1D_to_2D() to replace lst_prs(), which is responsible
	for much craziness and was renamed lst_prs_old().
	Unfortuneately, immediately switching showed many regressions
	lst_1D_to_2D() needs more extensive testing

	* Implement nco_sng_lst_free() to free string lists

	* More fixes to ncpdq memory management...only one leak remains!

2005-03-26  charlie  <zender@uci.edu>

	* Introduced unknown regression into ncwa nco_var_cnf_dmn()

	* Pared ncpdq unfree'd memory down to three, final,
	hard-to-understand, problem malloc's totaling ~150 B.

	* Free dmn_rdr_lst_in() in ncpdq

	* Fix inherent leak in prg_prs()

	* Deep-copy nm in nco_var_dpl(); free nm in nco_var_free()
	Ditto with dmn->nm, nco_dmn_dpl(), and nco_dmn_free()

	* Implement nco_dmn_free() to free dimensions

	* Guaranteed system memory (optarg) reaches no further than
	command-line parsing in all operators. This has side effect
	of temporarily increasing un-free'd memory in programs, because,
	formerly, valgrind would not count that memory against NCO because
	it was system memory (optarg). Now NCO owns it and needs to free
	it.

	* Planning to eliminate all remaining memory leaks from NCO
	Un-free'd strings cause the most memory leaks (I think)
	When NCO originated in 1993-1994 I was zealous about memory usage.
	I chose to use the system memory allocated to optarg rather than
	duplicate that memory in NCO. As NCO grew and became more
	object-oriented, being able to create structures (e.g., variables)
	dynamically but not able to free all their elements (e.g., names),
	some of which referenced system memory (from optarg), lead to today.

	Here are four examples (from ncks.c) of memory that NCO cannot free():
	fl_pth_lcl=optarg;
	fl_pth=optarg;
        dlm_sng=optarg;
        var_lst_in=lst_prs(optarg,",",&nbr_xtr);
	The first two or three lines do no cause much problem because
	those strings are not duplicated much or contained in structures
	and so never lead to situations that valgrind count against NCO
	Using system memory for var_lst_in, however, causes problems

	Strategy:
	1. Replace all such fragments in NCO by strdup()'d memory
	2. Follow their code paths and free() these strings when possible
	3. Add block to free all pointers at end of code (already in ncpdq)
	4. Modify destructors (e.g., nco_var_free()) to free strings

	Initial work to free memory will be conducted in ncpdq
	Implement same methods in other operators once ncpdq is leak-free...

2005-03-25  charlie  <zender@uci.edu>

	* Documented and fixed some small ncap memory leaks with valgrind

2005-03-24  Harry Mangalam  <hjm@tacgi.com>

	* added bm dir for benchmarking; initial files are:
        gne_exp.cdl       template -> ~54MB file of gene expression data
        ipcc_dly_T85.cdl  template -> ~1GB file with 4D,3D,2D,1D,scalar variables
        ipcc_dly_T85.sh   shell file that creates & populates the above file
        nco_bm.pl         the perl benchmarking script (derived from bld/nco_tst.pl)
        sml_fls.sh        script to generate both small files: gne_exp.cdl & sml_stl.cdl
        sml_stl.cdl       template for a small sat data file
        stl_5km.cdl       template for ~300MB sat data file
        stl_5km.sh        script to generate and ncap the above file

2005-03-24  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-3_0_0
	Changes since nco-2_9_9: 1. ncap bugfix 2. Add benchmarking
	3. libnco_c++ implements nco_var_puta()

2005-03-23  Charlie Zender  <zender@uci.edu>

	* Fix gaping memory leak in ncap_var_stretch()

2005-03-22  Charlie Zender  <zender@uci.edu>

	* Implement nco_mmr_rusage_prn() for memory diagnostics

2005-03-21  charlie  <zender@uci.edu>

	* Implemented Harry's suggestion to use memset(vp,0,size)
	to initialize float and integer buffers to zero.
	Previously, this was done in a loop over each index value
	Presumably this old method was slower because of pointer de-referencing
	New algorithm implemented in nco_var_zero() and nco_zero_long()

	* Set NC_NOFILL in ncap_var_write()

	* The call to nco_aed_prc() (a metadata writing call) was
	un-necessarily late in ncap.c. I moved it to just after
	nco_var_dfn(). This takes advantage of the netCDF feature that
	metadata (not data) can be manipulated before it is flushed to
	disk (with nc_enddef()). You can learn/use a variable's ID
	before populating the variable's data section.
	Now ncap ends after writing in data mode and avoids the heavy disk
	penalty of moving variables to accomodate  the increased metadata from
	the nco_aed_prc() call.

	* Turns out the only NC_NOFILL in ncap.c was done in data mode
	after the variables were defined.
	Not sure why this did not cause an error.
	ncap was probably doing redundant data filling for the non-processed
	variables defined.
	Fixed that.

2005-03-20  Charlie Zender  <zender@uci.edu>

	* Apply same optimization to nco_var_cnf_dmn()

	* Handle expansion of scalar variable as special case in
	ncap_var_stretch() to speed up important cases of variable
	synthesis. This speeds up user-time ipcc_dly_T85 benchmark
	by ~300%.

2005-03-14  Charlie Zender  <zender@uci.edu>

	* Modified big.cdl to facilitate benchmarks

2005-03-04  Harry Mangalam  <hjm@tacgi.com>

	* RE-Fixed configure, configure.in to find test for and add ssl to LIBS

2005-03-02  Harry Mangalam  <hjm@tacgi.com>

	* RE-Fixed configure, configure.in to find nc-dods lib
	 AND also to treat UDUnits correctly if it's built and used from
	 a local directory.

2005-02-24  Harry Mangalam  <hjm@tacgi.com>

	* Fixed configure, configure.in to find nc-dods lib

2005-02-24  Charlie Zender  <zender@uci.edu>

	* Long options --prn --print now point to -P instead of -H

	* Introduced -P as abbreviation for -C -H -M -m -u

	* Restored -H -m -M functionality to old behavior mostly

	* Change -u to toggle switch

2005-02-13  Harry Mangalam  <hjm@tacgi.com>

	* used cz's  ncks --compiler flag to grab compiler info
	* hires timer & udp reporting work on aix with perl >= 5.6.1

2005-02-13  Harry Mangalam  <hjm@tacgi.com>

	* added hires timing to test script bld/nco_tst.pl
	* using udpserver2 collector modified from tacg project
	* added udp reporting   "
	* more debugging for    "
	* cleaned up and strictified code

2005-02-10  Harry Mangalam  <hjm@tacgi.com>

	* added the getopt & usage section to test script bld/nco_tst.pl
	* added the logging and more debug

2005-02-13  Charlie Zender  <zender@uci.edu>

	* Added --cmp, --compiler switch to ncks to report compiler name
	with new function nco_cmp_get()

2005-02-04  Charlie Zender  <zender@uci.edu>

	* Polished up ncap intrinsic math function definition examples

2005-01-13  Charlie Zender  <zender@uci.edu>

	* Added -DABORT_ON_ERROR to Makefile.am for libnco_c++ only

2005-01-12  Charlie Zender  <zender@uci.edu>

	* ncks prints units, when present, by default (-u now turns this off)

2005-01-09  Charlie Zender  <zender@uci.edu>

	* Make ncks -q switch a true quiet switch that stops all printing
	to screen. Make new -Q switch handle old -q job.
	Make ncks -R automatically invoke -q so that remote files may
	be downloaded without attempting to print them.

	* Remove -Wmissing-prototypes from g++ options

	* Fixed g++-3.4.2 prototype warnings with nco_c++

	* Added return to about five void functions to squelch erroneous
	gcc-3.4.2 warnings (and hopefully allow enable-custom-* to work)

2004-11-30  Charlie Zender  <zender@uci.edu>

	* Updated config.guess to timestamp 20040611

	* Updated config.sub to timestamp 20040312

2004-11-05  Charlie Zender <zender@dust.ps.uci.edu>

	* Use S_IFLNK instead of S_ISLNK for NEC SX in nco_fl_utl.c

	* Change test -e to more restrictive test -f in configure.in.
	Makes sense and allows NEC SX to build.

	* Add docs on how to build NCO >= 3.0.0 with netCDF < 3.6 to homepage

	* Change so ncks in.nc out.nc does not print global metadata

2004-10-16  Charlie Zender  <zender@uci.edu>

	* Add -Z, --64-bit-offset switch for FORCE_64BIT_FST mode

	* Prevent printing global metadata on ncks file copies

2004-10-13  Charlie Zender  <zender@uci.edu>

	* Put in commented version of netCDF 64-bit file format support

	* Added 32-bit/64-bit distinction discussion to LFS support

2004-09-23  Charlie Zender  <zender@uci.edu>

	* Remove extra carriage returns from ncks global metadata printing
	in nco_prn_att()

	* Declare nco_pck_map as shared in OpenMP loop

2004-09-12  Charlie Zender  <zender@uci.edu>

	* ncks: Print data to screen when only input file is specified

	* Add NC_BYTE to types of variables with known ndrv in nco_var_pck()

2004-09-08  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_9_9
	Changes since nco-2_9_8: 1. ncbo threading 2. ncpdq -P packing

	* Fix problems with building --enable-*-custom

	* Fully merge packing policy/map decisions into nco_var_lst_dvd()
	This should mean that fix/prc distinction is fully integrated

2004-09-07  Charlie Zender  <zender@uci.edu>

	* Finish packing map documentation. Ready to release.

	* Cause ncpdq in.nc out.nc to default to pck_plc=all_new rather
	than aborting

	* Re-arrange debugging info verbosity levels to be sane

	* Fix erroneous triggering of PURE_MSS_VAL_FLD in nco_var_pck()

2004-09-06  Charlie Zender  <zender@uci.edu>

	* Verified that all packing except NC_XXX->NC_CHAR works pretty well

	* Add new nco_pck_map types hgh_byt and flt_byt to nco_pck_plc_typ_get()

	* Showed packing three_dmn_var_dbl to NC_BYTE works better than
	packing to NC_CHAR

	* Verified packing/unpacking for: NC_INT->NC_SHORT,
	NC_DOUBLE->NC_INT, NC_DOUBLE->NC_BYTE, NC_INT->NC_BYTE,
	NC_SHORT->NC_BYTE,

	* Allow add_offset, scale_factor to be any type but NC_BYTE and
	NC_CHAR in nco_pck_dsk_inq(). This fixes NC_INT->NC_SHORT unpacking.

	* Learned that NC_INT->NC_SHORT does not work.
	Presumably all non-floating point packing is suspect until verified

	* Verified each pack map works without memory problems for all_new policy

	* Allow packing to NC_INT in nco_var_pck()

	* Successfully segregated var_fix from var_prc

	* Change nco_pck_typ to nco_pck_plc for "Packing Policy"

	* Incorporated packing policy decisions in nco_var_lst_dvd() to
	segregate var_fix from var_prc. Still not working but
	infrastructure in place.

	* Deprecated nco_is_packable() in favor of more flexible
	nco_pck_plc_typ_get() which accounts for policy desired by nco_pck_map

	* Eliminated all memory problems in ncpdq
	Verified no excess large blocks remain at program end
	Valgrind rules!

	* Update missing value in nco_var_upk_swp()

	* Handle all nco_pck_typ cases in nco_var_dfn() and end clause of ncpdq

	* Remove dangling pointer from ncpdq all_xst clause

	* Update ncpdq man page. Document -M most everywhere.

2004-09-05  Charlie Zender  <zender@uci.edu>

	* Create nco_pck_map_get() to parse nco_pck_map arguments to ncpdq -M option

	* Introduce nco_pck_map to nco_typ_pck_get()
	Only default type nco_pck_map_hgh_sht currently works

	* Move high level packing routines from ncpdq.c to nco_pck.c

	* Finished initial ncpdq packing documentation

	* Verified unpacking complete missing values works, with both scalars and arrays

	* Fixed packing pure missing values fields in nco_var_pck()

	* Replaced duplicated noisy text branches in packing routines with
	ugly goto's and single blocks of code

	* Add ncpdq packing/unpacking test to nco_tst.pl

	* Fix unpacking variables with only add_offset in nco_pck_dsk_inq()

2004-09-04  Charlie Zender  <zender@uci.edu>

	* Do not attempt unpacking unless variable already packed

	* Replace USE_EXISTING_PCK in nco_var_pck() with PCK_VAR_WITH_NEW_PCK_ATT

	* Implement synonyms ncpack, ncunpack, and option -U and xst_new

	* More robust handling of cases when only one packing attribute	defined

	* Cast missing_value to double before double comparisons in nco_var_pck()

2004-09-03  Charlie Zender  <zender@uci.edu>

	* NULLify dangling pointer to Fix double-free()'d value buffer problem

2004-09-02  Charlie Zender  <zender@uci.edu>

	* Finished implementing packing types: all_new, all_xst, upk

2004-09-01  Charlie Zender  <zender@uci.edu>

	* Worked on re-packing already packed variables. Almost working.

2004-08-25  Charlie Zender  <zender@uci.edu>

	* Added nco.css contributed by Alper Ersoy of the TeXInfo project
	Does not quite work yet, but points the right direction for XML compatibility

2004-08-22  Charlie Zender  <zender@uci.edu>

	* Include sys/types.h prior to regex.h on Mac OS X

2004-08-15  Charlie Zender  <zender@uci.edu>

	* ncpdq all_new packing seems to work. Next need to get unpacking working.

	* Alter nco_var_dfn() to define dummy scale_factor, add_offset for ncpdq

2004-08-14  Charlie Zender  <zender@uci.edu>

	* Cleanly segregate pack from re-order functionality in ncpdq
	Assume both are not performed in same ncpdq invocation

	* Pass nco_pck_typ from all operators to nco_var_lst_dvd()

2004-08-11  Charlie Zender  <zender@uci.edu>

	* Create nco_pck_mtd() to off-load metadata manipulation

2004-08-10  Charlie Zender  <zender@uci.edu>

	* Copy packing infrastructure from ncra to ncpdq

	* Finished thr_nbr documentation

	* Threaded main variable loop of ncbo

2004-08-08  Charlie Zender  <zender@uci.edu>

	* Changed some formats from %e to %g in nco_tst.pl so that Solaris
	cc executables will pass tests

2004-08-07  Charlie Zender  <zender@uci.edu>

	* Added first ncatted test to nco_tst.pl

	* Added lots more yummy ncpdq documentation

	* cvs tag -c nco-2_9_8
	Changes since nco-2_9_7: 1. ncpdq, 2. ncwa --msk_sng consolidated
	mask switch, and 3. C99

	* Fixed bug where nco_var_dmn_rdr_mtd() returned before reversal
	flag list created for 1-D arrays. This cause reversal of 1-D
	arrays to fail (do nothing).

	* Made valiant stab at ncpdq documentation. Ran out of steam.

2004-08-06  Charlie Zender  <zender@uci.edu>

	* split ncpdq var list into var_fix and var_prc like in ncwa
	All tests appear to work

	* Fixed last known ncpdq problem caused by indexing var_prc_out
	list with var_out index

	* Added duplicate dimension flag has_dpl_dmn to var_sct

	* Handling situations where re-order list caused non-record
	variables to become record variables was completely broken.
	Inserted mucho logic which implements new policies:
	1. First record variable change request is honored
	2. All subsequent requests are ignored and produce warnings

2004-08-04  Charlie Zender  <zender@uci.edu>

	* Fix ncpdq bug where record coordinate matching was done with
	strstr() instead of strcmp()

	* Fix ncpdq dimension reversal list processing

	* Make all error exits go through nco_err_exit() so that error
	exits uniformly call exit(EXIT_FAILURE) or abort()

	* Fixed diagnostic bug in nco_var_dfn() which would dump core when dbg_lvl=3
	and prg=ncwa

	* Fix ncwa bug introduced in nco_var_dmn() last week.
	nco_tst.pl completes successfully again.

	* Improved/updated man_end.txt and catenated onto end of all man pages

	* Wrote ncap man page ncap.1

	* Added ncpdq.1 man page
	View with nroff -man ~/nco/man/ncpdq.1

2004-08-02  Charlie Zender  <zender@uci.edu>

	* Implemented dimension reversal with negative signs in ncpdq

	* Changed dimension re-order switch from -z to -a like ncwa

	* Fixed NCO-wide bug where I used strstr(sng1,sng2) as boolean
	instead of !strcmp(sng1,sng2)
	This bug occurred in:
	nco_var_cnf_dmn() three times
	nco_var_stretch() three times
	ncbo.c() once time
	When used as a boolean strstr(sng1,sng2) is approximately
	interchangeable with !strcmp(sng1,sng2).
	Exceptions occur where sng1 is a substring of sng2, in which case
	the dimensions would be different but strstr() would return a match.
	In all locations, the bug appears to have caused extra work, or to
	have incorrectly allowed the above exception where one dimension
	is a substring of another, but in no location does the bug appear
	to have caused wrong answers.

2004-07-29  Charlie Zender  <zender@uci.edu>

	* Eliminate ostensibly wrong memmove() in ncwa/ncpdq avg/rdr list processing

	* Rewrote appropriate ncpdq routines to handles record dimension
	re-definitions correctly

2004-07-28  Charlie Zender  <zender@uci.edu>

	* Broke nco_var_dmn_rdr() into two sequential functions
	nco_var_dmn_rdr_mtd() for metadata and nco_var_dmn_rdr_val() for
	values. Calling routine (ncpdq) now holds required intermediate
	information in dmn_idx_out_in.

	* Implement -DNCO_ABORT_ON_ERROR in nco_err_exit() so developers
	can perform easy tracebacks

        * Add AX_CFLAGS_GCC_OPTION(-D_BSD_SOURCE) so default build works

	* Added ncpdq to autoconf build machinery

	* Finish first theoretically working version of ncpdq.
	Of course, it crashes.

2004-07-27  Charlie Zender  <zender@uci.edu>

	* Merge ncwa dmn_avg list handling into ncpdq for dmn_rdr

	* Removed un-used dimension nbr_dmn_avg == 0 branch from ncwa

2004-07-26  Charlie Zender  <zender@uci.edu>

	* ncpdq now copies files perfectly, just like ncks
	No re-order routines have been turned on---that is next
	Tagged this ncpdq version (1.1) with
	ncpdq_perfect_do_nothing_template
	User ncpdq.c version 1.1 as template for future new operators

	* Require default clauses for switch(prg_id)

	* Created ncpdq.c from stripped version of ncwa.c

2004-07-25  Charlie Zender  <zender@uci.edu>

	* Installed hooks to call nco_var_dmn_rdr() in ncks
	May need to create new operator to use this capability

	* Added skeleton nco_prs_rdr_lst()

	* First complete draft of nco_var_dmn_rdr() compiles warning-free

2004-07-21  Charlie Zender  <zender@uci.edu>

	* Implement infrastructure for dimension re-ordering routine
	nco_var_dmn_rdr()

2004-07-19  Charlie Zender  <zender@uci.edu>

	* Create nco_bnch.sh to benchmark big file operations

	* Implement preprocessor method in nco.h to disable restrict

	* big.nc "restrict" test with yields incorrect answers with AIX xlc

	* Implement restrict in nco_var_cnf_dmn()

	* Change default xlc from -qlanglvl=extended to -qlanglvl=extc99
	to support C99 features like restrict. This does not seem to
	bother xlC, which appears to ignore the -qlanglvl=extc99 switch.

	* Implement restricted pointers throughout arithemetic routines

	* Introduced restrict type qualifier into pointer unions

	* cvs tag -c nco-2_9_7_pre_restrict
	Last tag prior to implementing C99 features

	* const'ify arithmetic counters used only for normalization

	* Standardized arithmetic prototypes in preparation for implementing
	restricted pointers

2004-07-08  Charlie Zender  <zender@uci.edu>

	* nco.texi: Correct mix-up of -T and -t options in documentation

2004-07-06  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_9_7
	Changes since nco-2_9_6: Read MFO input files from stdin, add
	more attribute functionality to nco_c++, turn threading on in ncra

	* Updated Makefile to use sophisticated make depends rules that
	handle plusses and slashes in filenames better

	* Added libtest, libtst targets to Makefile

	* Change from C++ to CXX in Makefile

	* Finished replacing %zu's with %lu's with casts to (unsigned long)

	* Provide definitions of fabsf(), sqrtf() in nco_var_rth.c from
	nco_flt_rth.h rather than from special #ifdefs

2004-07-04  Charlie Zender  <zender@uci.edu>

	* Changed some %zu's back to %lu's with (unsigned long) casting
	Will I have to do this everywhere since %zu is non-ISO?

2004-07-03  Charlie Zender  <zender@uci.edu>

	* Add undocumented -Y, --pseudonym, or --prg_nm switch to ncra
	to force it to behave as ncea or ncrcat

2004-07-02  Charlie Zender  <zender@uci.edu>

	* Change default from OMP=N to OMP=Y in old Makefile

2004-07-01  Charlie Zender  <zender@uci.edu>

	* Changed configure.eg to enable OpenMP on AIX. 'make' and 'make
	install' now work but 'make test' fails with zillions of linker errors:

        rtld: 0712-001 Symbol omp_get_num_threads was referenced
        from module /u/zender/nco/src/nco/.libs/libnco.so(), but a runtime definition
        of the symbol was not found.

	* AIX xlc does not activate OpenMP unless -qsmp=omp argument used

	* Fixed AIX xlc_r compiler pragma warnings by removing
	/usr/vacpp/include from CPPPATH in configure.eg.
	I think nco_c++ used to need this to find <valarray>, but that no
	longer seems to be the case. Simpler is better.

	* Improve LFS test in big.cdl.
	Created version that creates large files (> 4 GB) on small-RAM
	(< 4 GB) systems, and NCO seem OK to deal with resulting files.

	* Added $dbg_lvl variable to print nco_tst.pl tests during execution

	* Fixed nco_tst.pl test hanging while waiting for interactive
	response to overwrite query

	* Fix brokenness in nco_fl_utl:nco_fl_lst_mk() which triggered
	segfaults in non-multi-file-operators when no input filename was
	offerred, i.e., when there were no positional arguments

	* Fix brokenness in nco_tst.pl caused by renaming -o to -T

	* Changed old (only since 2.9.6) ncwa -t to ncwa -T so can use -t
	for threads consistently everywhere

	* Pass thr_nbr on command line

	* Added LFS stub to nco.texi, pass LFS info from configure.in

	* Added large file support LFS to custom Makefiles. Rorik added it
	to autoconf.

2004-06-30  Charlie Zender  <zender@uci.edu>

	* Add nco_openmp_thread_number global attribute to threaded
	programs if HISTORY_APPEND is true

	* nco_openmp_ini() is now mandatory for any program using OpenMP

	* Fixed "variable "_iob" has undefined data scope"
	compiler warnings by passing stdout/stderr filehandles as local
	variables scoped shared in OpenMP parallel clauses

2004-06-29  Charlie Zender  <zender@uci.edu>

	* Update OpenMP directives in ncra in preparation for adding
	robust OpenMP diagnostics

2004-06-28  Charlie Zender  <zender@uci.edu>

	* Remove configure.in AC_CHECK_LIB check for cosf() in libC.a.
	NCO used to get the float functions from this library but it turns
	out that all of these system-supplied float functions are broken
	on AIX. NCO now uses it's own version of these functions.
	Fixes TODO ncap57.

2004-06-25  Charlie Zender  <zender@uci.edu>

	* Added ln() as synonym for log() in ncap

	* Fix size_t format printing in memory allocation routines

2004-06-23  Charlie Zender  <zender@uci.edu>

	* Never solved problem with reading o/a/e response after using
	stdin for filenames.

2004-06-19  Charlie Zender  <zender@uci.edu>

	* Reworked stdin to avoid mixing string and character input.
	  Interactive responses to "overwrite (o/a/e)?" questions must now be
	  terminated with carriage return (and are case-insensitive)

	* Add nco_put_att<int,short,long> functions

	* Add nco_fl_info_get() to nco_fl_mk_lcl()

	* Add readfile, realpath, canonicalize_file_name to AC_CHECK_FUNCS

2004-06-18  Charlie Zender  <zender@uci.edu>

	* Added new -H section to documentation

	* Change FORTRAN_STYLE to FORTRAN_IDX_CNV

2004-06-17  Charlie Zender  <zender@uci.edu>

	* Added nco_fl_lst_att_cat() to add input file list global attribute

	* nco_fl_ls_mk() reads input file list from stdin when appropriate
	for multi-file operators.
	For some reason it no longer pauses for manual stdin, however.

2004-06-16  Charlie Zender  <zender@uci.edu>

	* Fixed numerous errors in xargs example

	* Change nco_lib_tst.c to libnco_tst.c and add libnco_c++_tst.cc

2004-06-15  Charlie Zender  <zender@uci.edu>

	* Check for strdup() and strcasecmp() with NCO_CHECK_FUNCS rather
	than AC_CHECK_FUNCS so they are protected by NEED_* rather than
	HAVE_* tokens. This improves portability of libnco by reducing
	number of tokens non-NCO programs need to define in order to link
	to libnco.a. This make nco_lib_tst simpler.

	* Add bld/nco_lib_tst.c to test libnco offline

	* cvs tag -c nco-2_9_6
	Changes since nco-2_9_5: Add -o fl_out option, change ncwa -o
	meaning, AMD64 build tweaks

2004-06-14  Charlie Zender  <zender@uci.edu>

	* Move old ncwa -o switch to -t, add synonyms --truth_condition,
	--msk_cmp_typ, delete old synonyms --op_cmp, --compare, --cmp.

	* Change warning size for large filenames from 80 to 255 characters

	* Modify nco_fl_lst_mk() so operators accept output filename
	specified with -o (or --fl_out or --output), or as last positional
	argument (traditional behavior). Finished TODO#58.

2004-06-13  Charlie Zender  <zender@uci.edu>

	* Added demonstration script to handle large numbers of input
	files to nco.texi

2004-06-06  Charlie Zender  <zender@uci.edu>

	* Implement -m64 option for ABI=64 on LINUXAMD64

2004-06-02  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_9_5
	Changes since nco-2_9_4: ncflint interpolation is commutative,
	libnco_c++ *.hh headers installed

	* Install libnco_c++ *.hh headers in include directory.

	* Explicitly restrict license of libnco_c++.h to GPL version 2

	* Change behavior of ncflint and nco_var_add_tll_ncflint() to
	return missing_value when either input is missing

2004-06-01  Charlie Zender  <zender@uci.edu>

	* nco.texi: Documented funny ncflint behavior when one variable is missing

	* Implement nco_mss_val_cnf() in ncflint to handle corner cases
	where same variable has different missing values in each file

2004-05-22  Charlie Zender  <zender@uci.edu>

	* Print shared/static configuration with -r

	* Support newer AC_INIT syntax

	* Default configure.in AIX GCC ABI is 64-bit with -maix64
	Fixes TODO bld31.

2004-05-21  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_9_4
	Changes since nco-2_9_3: ncecat works on pure scalar files

	* Allow AIX builds with GCC in bld/Makefile

	* Rearranged nco_tst.pl, added ncecat test, activated ncbo,
	ncea, ncflint tests. Fixes TODO nco332.

2004-05-20  Charlie Zender  <zender@uci.edu>

	* Patched ncecat to address scalar file concatenation problem
	Fixes TODO nco331.

	* Set rec_dmn->is_rec_dmn=True; in ncecat.c
	This appears to have been a bug that never triggered any failures

2004-05-13  Charlie Zender  <zender@uci.edu>

	* Move blurb from nmn_get to last info message

2004-05-05  Charlie Zender  <zender@uci.edu>

	* Implement AMD64 pgcc/pgCC support in build mechanism

2004-05-04  Charlie Zender  <zender@uci.edu>

	* Change cvs.nco.sourceforge.net to cvs.sf.net in accord
	with new SourceForge BIND 9-induced policy

2004-04-19  Charlie Zender  <zender@uci.edu>

	* Build NCO on sand.ess.uci.edu, SuSE Linux 9.0 dual opteron with
	GCC 3.1.1 for x86-64

        * Put CEWI's in nco_lmt.c to allow builds with GCC and
	--enable-*-custom when UDUnits not installed

2004-04-13  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_9_3
	Changes since nco-2_9_2: ncra/ncea arithmetic works when
	missing_value equals zero or any intermediate sum

	* Closed bugs nco121 and nco325

	* Segregate nco_var_add_tll() into nco_var_add_ncra() (which
	checks only current record against missing_value) and
	nco_var_add_ncflint() (which checks both arguments against
	missing_value). This fixes bug where record averages were zero
	when missing_value=0.0.

	* Switch argument order in nco_opr_drv() for clarity/consistency

2004-04-06  Charlie Zender  <zender@uci.edu>

	* Updated News & Announcements section

2004-03-23  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_9_2
	Changes since nco-2_9_1: Fix S/V, S%V, S^V, workaround broken
	UDUnits installations

	* Correctly implement non-commutative ncap S%V modulo

	* Correctly implement non-commutative ncap S^V empowerment

	* Document promotion for empowerment (sounds more political than
	it is) in nco.texi

2004-03-17  Charlie Zender  <zender@uci.edu>

	* Change nco_lmt.h from HAVE_UDUNITS_H to ENABLE_UDUNITS
	to make bld/Makefile builds work again when udunits is not
	installed.

2004-03-16  Charlie Zender  <zender@uci.edu>

	* Correctly implement non-commutative ncap S/V division

2004-03-12  Charlie Zender  <zender@uci.edu>

	* Verify Solaris does autobuild correctly with up-to-date bison
	and when UDUnits workaround is installed.

2004-03-11  Charlie Zender  <zender@uci.edu>

	* Re-do UDUnits logic in configure.in to ignore broken UDUnits
	installations and build successfully (with UDUnits, of course).

	* Print variable names when writes and reads fail in nco_c++

2004-03-10  Charlie Zender  <zender@uci.edu>

	* Handle corner case in nco_lmt.c where HAVE_UDUNITS_LIB is
	defined but HAVE_UDUNITS_H is not

2004-03-07  Charlie Zender  <zender@uci.edu>

	* Tweaked DODS library logic in configure.in to support AIX
	Link to -lC on AIX instead of -lstdc++ as on Linux

2004-03-04  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_9_1
	Changes since nco-2_9_0: prp_sei, fix packing bug with ncwa

2004-02-29  Charlie Zender  <zender@uci.edu>

	* Described pending NCO proposals in NUG

	* Described how to donate in NCO User's Guide (NUG)

	* Added/explained OPeNDAP vs. DODS in documentation

	* Rorik modified nco_cnf_typ.c: nco_typ_cnv_rth() to fix bug with
	arithmetic on packed data in ncwa. Probably fixed same bug with
	other artithmetic operators (besides ncap) as well.

2004-02-25  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_9_0
	Changes since nco-2_8_8: CF convention, ncap corner cases,
	Deactivate non-ANSI __GNUC__ extensions, make check nco_c++

	* Implement CEWI workarounds so tst.cc builds warning-free and
	make check works again with --enable-*-custom

	* Deactivate __GNUC__ extensions for rank reduction in nco_var_avg.c
	Replace #ifndef __GNUC__ with #define FXM_NCO315 1; #ifdef FXM_NCO315
	Will change back to original code only when stack memory problem
	is fully understood/solved/benchmarked to improve on ANSI code branch

2004-02-10  Charlie Zender  <zender@uci.edu>

	* Make Convention CF-1.0 behave same as existing CSM convention

2004-02-08  Charlie Zender  <zender@uci.edu>

	* Make TODO list easier to understand to facilitate contributions

	* Systematically "symmetrize" all ncap arithmetic operations so
	var OP var, var OP scv, and scv OP var are handled for all operations.

	* ncap handles var % scv, scv % var

	* ncap handles scv / var

	* Add nco_var_var_pwr() and nco_var_pwr() functions to allow
	empowerment of two variables = var_1^var_2 and scv^var

	* Change CSM to CCSM most everywhere

2004-01-30  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_8_8
	Changes since nco-2_8_7: --enable-[optimize/debug]-custom works
	again

	* Remove -fshort-enums from GCC switches as per Rorik.
	It breaks ABI and caused mysterious failures because libnetcdf.a
	must be compiled with same size enums as NCO apparently.

2004-01-20  Charlie Zender  <zender@uci.edu>

	* Implement DODS 3.4 switches as default in bld/Makefile

2004-01-19  Charlie Zender  <zender@uci.edu>

	* Use valgrind 2.1 to identify and fix small leaks:
	Free prg_nm in nco_exit_gracefully()

2004-01-16  Charlie Zender  <zender@uci.edu>

	* nco_netcdf.c: Do not initialize rcd unless not doing so might cause CEWI

2004-01-15  Charlie Zender  <zender@uci.edu>

	* Change dods.sh from RC6 to 3.4 final, and pre-clean

	* Correct documentation of covariance procedure

2004-01-13  Charlie Zender  <zender@uci.edu>

	* Change AIX xlC enable-optimized-debug from -O5 to -O3 so shared
	libraries work again

	* cvs tag -c nco-2_8_7
	Changes since nco-2_8_6: Default GCC builds work again,
 	ncap packing works again

	* Fix GCC compiles when enable-*-custom	is not specified. This
	should fix reported Cygwin build problem.

	* nco_pck() uses tally-free arithmetic. Fixes ncap packing
	bug introduced in 2.8.4.

2004-01-12  Charlie Zender  <zender@uci.edu>

	* Only manually prototype lexer function in ncap_lex.l if
	enable-*-custom build option specified with GCC.
	Fixes build problems with cygwin

	* Document make install-strip in doc/README as per Rorik

	* cvs tag -c nco-2_8_6
	Changes since nco-2_8_5: Add -Werror to GCC compiles, fix AIX and
	SGI builds

	* Wrap new ncap_lex.l content in ifdef __GNUC__ since breaks on
	AIX, SGI. AIX and SGI now build again.

2004-01-11  Charlie Zender  <zender@uci.edu>

	* NCO compiles warning free again so add -Werror to GCC custom flags

	* Add and elaborately comment on multiple yylex() prototypes
	required to build ncap warning-free with pedantic debugging flags.

	* Use correct token, NCO_MSA_H, instead of NCO_VAR_UTL_H, in nco_msa.h
	This fixes all remaining implicit function declaration warnings
	Until now, no routines in nco_msa.c had prototypes known outside
	of that file unit. Unlikely that this caused problems since no
	known casts were employed in prototypes. This demonstrates the
	usefulness of -Werror. Without it, this bug would still be there.

2004-01-10  Charlie Zender  <zender@uci.edu>

	* Conjoin setting GCC flags in configure.in, avoid duplication

	* Systematize header file names

	* Improved dods.sh documentation

2004-01-09  Charlie Zender  <zender@uci.edu>

	* Unconditionally include nco_lst_utl.h and nco_sng_utl.h in
	nco_att_utl.h (now that nco_prs_aed_lst() is there).

	* Moved system headers from nco_lmt.c to nco_lmt.h

2004-01-08  Charlie Zender  <zender@uci.edu>

	* Give DODS example in -R documentation

	* Add -R to correct -R examples in documentation

2004-01-07  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_8_5
	Changes since nco-2_8_4: DODS support, configure.in rewrite,
	ncap attribute assignment fix

	* Remove -Dinline= so gcc CFLAGS may be reused for g++
	This fixes make install problem with --enable-optimize-custom

2004-01-06  Charlie Zender  <zender@uci.edu>

	* Improved type conversion documentation

2004-01-04  Charlie Zender  <zender@uci.edu>

	* Qualify GPL license as Version 2 everywhere

	* Prototype main.c functions prior, rather than post, definition in nco.h

	* prefix ncap global and file scope variables with ncap_ to reduce
	namespace pollution

	* De-linted nco_c++ library by adding rcd+=0 CEWI statements

2004-01-03  Charlie Zender  <zender@uci.edu>

	* Fix bug where nco_put_varm() called nc_get_varm_float() instead
	of nc_put_varm_float()

	* Replace nco_netcdf.h prototypes with type-safe const'ified prototypes

2004-01-02  Charlie Zender  <zender@uci.edu>

	* Use sqrtf() where appropriate

	* Preserve const'ness of string literal assignments and returns

	* Use trigraph return in qsort() comparison functions nco_cmp_*()
	to completely avoid arithmetic and overflows

2004-01-01  Charlie Zender  <zender@uci.edu>

	* Improve qsort() comparison functions nco_cmp_*() based on
	responses to comp.lang.c thread 20040101:
	1. Avoid overflow conditions by not performing subtraction
	2. Preserve const-ness by using comparison rather than using
	casting and subtraction

2003-12-29  Charlie Zender  <zender@uci.edu>

	* De-lint code with --enable-debug-custom
	Fixed sloppy casts, signed/unsigned comparisons, missing const's
	in nearly all source code.

	* make dst_cln cleans volatile autotools build files in root directory

	* Add top-level file descriptions to MANIFEST

	* Expand GNU triplet names to specific architectures tested (i.e.,
	use more restrictive triplets)

	* Add correct compiler and OS criteria for custom compiler switches

	* Make --enable-debug-custom set --enable-debug-symbols

	* Replaced deprecated AC_HELP_STRING with AS_HELP_STRING

2003-12-28  Charlie Zender  <zender@uci.edu>

	* Update copyright years to 2004, tweak GPL license message

2003-12-27  Charlie Zender  <zender@uci.edu>

	* Perform extensive self-diagnostic check of compile-time
	pre-processor configuration settings in	nco_ctl.c:nco_lbr_vrs_prn().
	Check results displayed with -r, e.g., ncks -r

2003-12-26  Charlie Zender  <zender@uci.edu>

	* Add new tokens to config.h: ENABLE_[OPTIMIZE,DEBUG,EXTREME]

	* Clean up and comment configure.in

2003-12-23  Charlie Zender  <zender@uci.edu>

	* Modified Rorik's script and added to distribution as doc/dods.sh

	* Updated/improved DODS section in manual

2003-12-01  Charlie Zender  <zender@uci.edu>

	* Document hyperslab bug in 2.7.3--2.8.3 on homepage

	* Document NCAR SCD TCG support on homepage

2003-11-26  Charlie Zender  <zender@uci.edu>

	* Rorik fixed install to remove links before install. Fixes
	install on Solaris.

2003-11-25  Charlie Zender  <zender@uci.edu>

	* Squelch "declared but never referenced" warnings on IRIX in nco_utl.cc

	* cvs tag -c nco-2_8_4
	Changes since nco-2_8_3: Fix index-based hyperslab bug, reduce
	ncap memory usage to 2*sizeof(var) for binary operations

	* Sourceforge made debian/rules executable fixes TODO #280

	* Rorik fixed index-based hyperslabbing bug introduced in 2.7.3
	Fixes TODO #286, #289

	* Specify success correctly for ncap T42 test

2003-11-24  Charlie Zender  <zender@uci.edu>

	* Add ncks test 14 to check for hyperslabbing problems

2003-11-23  Charlie Zender  <zender@uci.edu>

	* Change cerf to erfc in documentation. Dyslexia strikes again.

	* Add example documentation of intrinsic ncap math functions

2003-11-21  Charlie Zender  <zender@uci.edu>

	* Henry reduced ncap memory usage in binary operations to
	2*sizeof(var). Also removed superfluous (for now) tally allocation
	in ncap_var_init().

	* Beefed up memory usage section in nco.texi

2003-11-20  Charlie Zender  <zender@uci.edu>

	* Implement nco_malloc_err_hnt_prn()

	* Implemented nco_malloc_dbg() in ncap_utl

	* Created nco_malloc_dbg() for alternative to nco_malloc_flg().
	This simplifies calling routines by moving most diagnostic
	handling to nco_malloc_dbg().

	* Remove two more overly scary packing warnings

2003-11-19  Charlie Zender  <zender@uci.edu>

	* Rorik replaced nco_tst.sh with nco_tst.pl, completing TODO #202

2003-11-16  Charlie Zender  <zender@uci.edu>

	* Add LINUXAMD64 to support AMD Opteron

	* Update Sourceforge documentation

2003-11-14  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_8_3
	Changes since nco-2_8_3: memory leaks, regressions fixed

	* Fixed ncwa, ncbo regressions in nco_tst.sh

	* Rorik found and I fixed little nco_var_lst() memory leak

	* Rorik and Henry found and fixed huge ncap memory leak

2003-11-11  Charlie Zender  <zender@uci.edu>

	* Add nco_mmr_stt() hook call to all memory routines

2003-11-10  Charlie Zender  <zender@uci.edu>

	* Add debian docs to make tags target

	* Remove qualifying warning about packed variables from nco_pck.c

2003-11-09  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_8_2
	Changes since nco-2_8_1: missing_values handled better

	* Applied nco_mss_val_cnf() to ncbo to fix TODO #274

	* Wrote nco_mss_val_cnf() to change missing_value of var2, if any,
	to missing_value of var2, if any, before arithmetic operation.

2003-11-05  Charlie Zender  <zender@uci.edu>

	* Remove ncap_lex.c, ncap_yacc.[ch] from .tar.gz file created by nco_dst.pl

2003-11-04  Charlie Zender  <zender@uci.edu>

	* Moved DODS problem note to homepage

2003-10-11  Charlie Zender  <zender@uci.edu>

	* Add section on union of two files

	* Complete named HTML sections for each node in nco.texi

2003-09-16  Charlie Zender  <zender@uci.edu>

	* Add URLs to named sections in HTML comments in nco.texi

	* Add verbose errror message and HINT for NC_ERANGE errors

2003-09-03  Charlie Zender  <zender@uci.edu>

	* Makefile (ABI): Change default ABI to 64

2003-09-02  Charlie Zender  <zender@uci.edu>

	* Change default HTML production from texi2html to makeinfo

2003-09-01  Charlie Zender  <zender@uci.edu>

	* Clean up nco.texi

	* Expand regex documentation

2003-08-31  Charlie Zender  <zender@uci.edu>

	* Correct some regex example errors in nco.texi

2003-08-29  Charlie Zender  <zender@uci.edu>

	* nco.texi: Added #sections in English to nco.html for easy direct
	referencing of man pages

2003-08-28  Charlie Zender  <zender@uci.edu>

	* Add section on ncbo portability

2003-08-27  Charlie Zender  <zender@uci.edu>

	* Improve ncbo documentation

	* cvs tag -c nco-2_8_1
	Changes since nco-2_8_0: variable wildcarding

2003-08-21  Charlie Zender  <zender@uci.edu>

	* Quote backslash character with backslash in nco_var_lst.c

	* Add skeleton ncap.1 man page to satisfy autotools 'make install'

	* Bring bld/Makefile up-to-date with wildcarding, getopt changes

2003-08-20 Henry Butowsky  <henryb@ntlworld>

	* Rolled out variable wildcarding to all operators.
	  Configure script checks for presence of regular expressions lib regex.h

2003-08-16  Charlie Zender  <zender@uci.edu>

	* Verified autotools builds fine again on SGI, AIX

	* Straighten out getopt_long() preprocessor logic to work with
	architectures with getopt.h but no getopt_long() (SGI, AIX)

2003-08-15  Charlie Zender  <zender@uci.edu>

	* Rorik synchronized shared library numbering with NCO version number

	* Document wildcarding in nco.texi

2003-08-14  Henry Butowsky  <henryb@ntlworld.com>

	* Added wildcarding of variables to ncks

2003-08-13  Charlie Zender  <zender@uci.edu>

	* Make nco_malloc_flg() return NULL when malloc() returns ENOMEM

	* cvs tag -c nco-2_8_0
	Changes since nco-2_7_4: ncbo, Debian integration

	* Add Debian package uploads to nco_dst.pl

	* Add Debian packages homepage

	* Add developer autoconf-automake-configure-make example to configure.eg

2003-08-03  Charlie Zender  <zender@uci.edu>

	* Finish first cut at ncbo documentation in nco.texi

2003-08-02  Charlie Zender  <zender@uci.edu>

	* Rename val_conform_type() to val_cnf_typ()

	* All regressions due to introduction of ncbnr appear to be fixed

	* Correct nco_tst.sh procedure for ncap

	* Restore nco_op_avg inadvertently removed from nco_op_typ_get()

2003-08-01  Charlie Zender  <zender@uci.edu>

	* Fix ncbnr case statement and verifiy ncbnr works for +-*/

2003-07-29  Charlie Zender  <zender@uci.edu>

	* Verify ncdiff and ncbnr -y sbt work as expected but problems
	exist with add, mult, and, presumably, divide.

	* Make ncdiff symbolic link to ncbnr for backward compatibility

2003-07-27  Charlie Zender  <zender@uci.edu>

	* Create ncbnr operator

	* Rename nco_var_add_no_tally() to nco_var_add()

	* Rename nco_var_add() to nco_var_add_tll()

2003-07-20  Charlie Zender  <zender@uci.edu>

	* Changed math table printing from -r to -f in ncap so that -r is
	consistent among all operators. Documented this in nco.texi.

2003-07-06  Charlie Zender  <zender@uci.edu>

	* Removed FTP requirement from make tst. Create nco_tst.sh creates
	foo.nc from scratch without needing to FTP nco_tst.nc.
	Test involving FTP is now called make tst_ftp.

2003-07-04  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_7_4
	Changes since nco-2_7_3: Better AIX autotools support, UDUnits fix

2003-07-01  Charlie Zender  <zender@uci.edu>

	* Add --Mtd switch for global metadata, update nco.texi accordingly

2003-06-24  Charlie Zender  <zender@uci.edu>

	* Added PayPal donation button, updated homepage

2003-06-23  Charlie Zender  <zender@uci.edu>

	* Rorik fixed UDUnits handling of hyperslab specifications in
	floating point format, e.g., 1.23e-7.

2003-06-15  Charlie Zender  <zender@uci.edu>

	* Update copyright headers

	* Change GPL version 2 or later license to version 2 only.

	* Clean up some MSA namespace

	* Document supported non-ANSI functions (e.g., acosh(), trunc())
	in nco.texi

	* Changed --nocoords to --no-coord or --no-crd.
	Decided all disabling actions will have same keyword as enabling
	action except switch will start with --no-XXX

2003-05-30  Charlie Zender  <zender@uci.edu>

	* Add CPP_TKN_OS += -I/usr/vacpp/include for nco_c++ on AIX

	* AIX autotools modifications by Jim

	* Jim Edwards completed Autoconf TODO 17. Fix CXX valarray to work on AIX

2003-05-21  Charlie Zender  <zender@uci.edu>

	* Replaced malloc() with nco_malloc_flg() in about 10 locations
	where malloc() ENOMEM errors are handled directly by the calling
	code for additional diagnostics.

2003-05-06  Charlie Zender  <zender@uci.edu>

	* Move RPM-wishlist off high-priority list, add restrictive MSA
	parsing to list as per Shultz request

2003-04-06  Charlie Zender  <zender@uci.edu>

	* Added numerous long option synonyms in CSZ abbreviation format
	documented in abb.sty

2003-03-30  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_7_3
	Changes since nco-2_7_2: UDUnits support for "units" attributes

	* Clean up nco_lmt

	* Documented UDUnits feature in User's guide

2003-03-27  Charlie Zender  <zender@uci.edu>

	* Add UDUNITS_LIB, UDUNITS_INC CLI args to bld/Makefile

2003-03-26  Charlie Zender  <zender@uci.edu>

	* Remove TODO 95. Satisfactorily addressed by Rorik's UDUnits work.

2003-03-25  Charlie Zender  <zender@uci.edu>

	* Made --op_rlt, --cmp, --op_cmp, --compare synonymous with -o for ncwa

	* Re-arrange output from --usage, --help options

2003-03-24  Charlie Zender  <zender@uci.edu>

	* Put UDUnits stuff on homepage

	* Added bld/Makefile support for UDUnits when UDUNITS=Y

	* Rorik committed UDUnits support for time coordinate limits in hyperslabs

2003-03-19  Charlie Zender  <zender@uci.edu>

	* Remove TODOs 138, 139, 140, 141, 142---all solved or made
	obsolete by Henry's MSA printing algorithm.

2003-03-18  Charlie Zender  <zender@uci.edu>

	* General honing of nco.texi

	* Implemented TeX and TeXInfo macros to keep math variables
	consistent with LaTeX sources. Mostly successful, except Info
	does not like macros inside or macros, e.g., @var{@wndznl{}}

	* cvs tag -c nco-2_7_2
	Changes since nco-2_7_1: disk-based, MSA printing indices work

2003-03-17  Charlie Zender  <zender@uci.edu>

	* Replaced examples in nco.texi with output from MSA printing

2003-03-09  Charlie Zender  <zender@uci.edu>

	* Modifying debian/* files to build with 2.7.x as zender

2003-03-07  Charlie Zender  <zender@uci.edu>

	* Remove -ansi flag from gcc builds because it is (apparently)
	equivalent to -std=c89 and thus conflicts with -std=c99.

2003-03-02  Charlie Zender  <zender@uci.edu>

	* Began Debian-ization of upstream source by populating debian
	directory with nco-2.2.0 Debian package files by Brian Mays
	NB: Files in debian/ are for 2.2.0 (i.e., way out of date)
	We are trying to Debian-ize upstream source for NCO ~2.8.0
	Expect some hiccups when that finally happens

	* Insert LINUXARM in Linux portion of bld/Makefile

	* Synchronize Debian nco/doc/man with CVS nco/man

	* Add Debian files by Brian Mays to CVS repository:
 	debian: changelog control convert copyright postinst prerm rules
	bld: linux1 linux2 (appear obsolete and may soon be removed)

2003-02-25  Charlie Zender  <zender@uci.edu>

	* Builds cleanly on LINUX, IRIX, AIX

	* Remove unused variables from ncap.[cl], nco_msa.c

	* Clean up nco_att_cpy()

2003-02-05  Charlie Zender  <zender@uci.edu>

	* Change from WARNING to level 1 INFO when wrapped limits
	processed in nco_lmt_evl()

2003-01-29  Charlie Zender  <zender@uci.edu>

        * Documented procedure for computing covariance of two variables
	using http://jisao.washington.edu/data/nco/ as template

2003-01-20  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_7_1
	Changes since nco-2_7_0: long options on all platforms, packing
	fix for ncap

	* Initiate HPPA support in bld/Makefile

2003-01-19  Charlie Zender  <zender@uci.edu>

	* Fix inconsistent storing of fixed variables that are packed in ncap
	Packed values were being saved in unpacked type without packing attributes

2003-01-18  Charlie Zender  <zender@uci.edu>

	* Clean up some ncap_utl prototypes

2003-01-14  Charlie Zender  <zender@uci.edu>

	* Updated nco_c++ build instructions and documentation to refer to Makefile.old

	* Changed copyright end year to 2003

2003-01-08  Charlie Zender  <zender@uci.edu>

	* Rorik added conditional compilation of Sittler's getopt_long()
	where necessary, removed *_GETOPT_LONG tokens from all source code.

2003-01-03  Charlie Zender  <zender@uci.edu>

	* Successfully built NCO 2.7.0 on Redhat 8.0 at HP Testdrive site
	spe141.testdrive.compaq.com. The HP Testdrive site has virtually
	every imaginable combination of hardware and OS, so now NCO may
	be tested on all of these machines. My first test with a new
	architecture, HP-UX (HPPA), failed because of lack of C++
	compiler. Thus Testdrive computers do not appear to be fully
	loaded with reliable compilers.

2003-01-02  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_7_0
	Changes since nco-2_6_6: long options and multislabbing

2002-12-29  Charlie Zender  <zender@uci.edu>

	* Add rudimentary tests of multislabbing to nco_tst.sh

	* Switch from ~ to @w{} for unbreakable spaces in nco.texi

2002-12-28  Charlie Zender  <zender@uci.edu>

	* Document multislabbing in user's guide

	* Document long options in user's guide

	* Implement more long options in TLA format

	* Henry changed arithmetic in nco_msa to char * arithmetic to
	remove warnings

	* Clean up ncap_utl.c some

2002-12-27  Charlie Zender  <zender@uci.edu>

	* Clean up nco_msa.[ch]. Still need to fix void * arithmetic

2002-12-19  Charlie Zender  <zender@uci.edu>

	* Moved multi-slabbing algorithm to nco_msa.[ch]

2002-12-19  Henry Butowsky  <henryb@ntlworld.com>

	 * First version of multi-hyperslabbing along a single dimension
	 for ncks

2002-12-14  Charlie Zender  <zender@uci.edu>

	* Took advantage of NEED_FNC to remove MACOSX kludge in nco_rth_flt.h

	* Merged Rorik's long options mods

2002-11-04  Charlie Zender  <zender@uci.edu>

	* Restore ./configure file from 2.6.5 and re-tag as 2.6.6

2002-10-25  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_6_6
	Changes since nco-2_6_5: ncrename fixes, ncap type conversion

	* Use '.' consistently in .var@.att renaming

	* Changed variable-attribute delimiter in ncrename from ":" to "@"
	to be consistent with ncap

	* Fixed ncrename to not fail when . specified and variable does
	not contain attribute

2002-09-24  Henry Butowsky  <henryb@ntlworld.com>

	* Added type conversion functions for attributes and variables
	  byte, char, short, int, float, and double

2002-09-22  Charlie Zender  <zender@uci.edu>

	* info-friendly changes to nco.texi

2002-09-20  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_6_5
	Changes since nco-2_6_4: CRAY and SUN builds

	* Fix SunOS builds in bld/Makefile

2002-09-19  Charlie Zender  <zender@uci.edu>

	* Patches from Len Makin for CRAY
	1. Cray patch for ncap symbol table
	2. Makefile fixes for Cray
	3. nco_tst.sh tweaks
	Applied the Makefile flags to configure.in as well

2002-09-17  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_6_4
	Changes since nco-2_6_3: MACOSX builds, SGI, NEC tweaks

	* Match SX-* with NECSX architecture in pvmgetarch

	* Correct some dependencies for string compatibility functions

	* Adapt for missing <cstdlib> with SGI CC

2002-09-14  Charlie Zender  <zender@uci.edu>

	* Added esoteric math functions to MACOSX using float<-->double
	coercion method

	* Implement compatibility strdup() and strcasecmp()
	Comeau should now work but have not tested it

	* cvs tag -c nco-2_6_3
	Changes since nco-2_6_2:
	Numerous build improvments and removal of PVM_ARCH ifdefs
	MACOSX builds with bld/Makefile, documentation fixes

	* MACOSX builds appear to work

	* Add ranlib to bld/Makefile libnco.a target for MACOSX builds

	* Get rid of inline qualifier on nco_rth_flt function definitions

	* Move function definitions from nco_rth_flt.h to nco_rth_flt.c

	* Verified that bison 1.29 on MACOSX screws up ncap_yacc.y
	translation. Installed bison 1.35 on compile farm MACOSX system,
	and builds work fine.

	* Remove ncap_utl.o from libnco.a

	* #include <math.h> in nco_rth_flt.h

	* Do not look for <getopt.h> in MACOSX

2002-09-09  Charlie Zender  <zender@uci.edu>

	* Added preliminary MACOSX support to bld/Makefile
	Everything appears to work but ncap, which has numerous problems
	on MACOSX because of bison, float functions, and ranlib.

	* Code compiles with gcc -ansi -pedantic -D_BSD_SOURCE
	Switches -std=c99 and -std=gnu99 both work too
	-D_BSD_SOURCE tells GCC nameser.h is ANSI-compliant

	* Moved float math function definitions to nco_rth_flt.h,
	created declarations for MACOSX in nco_rth_flt.c

2002-09-08  Charlie Zender  <zender@uci.edu>

	* Implemented pre-processor macros CST_X_PTR_CST_PTR_CST_Y,
	X_CST_PTR_CST_PTR_Y to be as const-correct as possible for the
	language the source code is treated as. If treated as C++, full
	const-correct prototypes are implemented, else if treated as C,
	a const is dropped here or there to make things compile
	warning-free. Fixes TODO #213.

2002-09-06  Charlie Zender  <zender@uci.edu>

	* Clean up ncap section of nco.texi, polish documentation builds,
	add XML, txt formats from makeinfo

	* Fixed nco.texi problems, generating docs at compile farm

2002-09-03  unknown  <zender@uci.edu>

	* Typecast return value of strdup() to char *

2002-09-02  Charlie Zender  <zender@uci.edu>

	* #include <config.h> in all headers which reference strdup()

	* Crude but workable HAVE_STRCASECMP support,
	include config.h headers to allow future HAVE_STRDUP handling

	* Implement some Comeau support, but presence of non-ANSI
	functions strdup(), strcasecmp() makes full Comeau support
	unlikely anytime soon

2002-08-27  Charlie Zender  <zender@uci.edu>

	* Tweak CC list in configure.in, remove c89, xlc_r

	* cvs tag -c nco-2_6_2
	Changes since nco-2_6_1:
	Improvements to autotools builds
	Initial ncap handling of user-defined dimensions

	* Replace PVM_ARCH token with HAVE_GETOPT_H for getopt.h handling

	* Remove Fortran files nco_cal_utl.F,  nco_fortran.F,
	nco_fortran.h since it is unlikely anyone will step forward to
	maintain fortran support. Of course these can be resurrected if
	necessary.

	* Add instructions for using compile farm, modify AIX, MACOSX
	builds

2002-08-22  Charlie Zender  <zender@uci.edu>

	* Define var_in_typ before using in nco_cnv_mss_val_typ()

	* Began using HAVE_CONFIG_H, config.h in source files (nco_scm.[ch],tst.cc)

2002-08-21  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_6_1
	Changes since nco-2_6_0:
	Unpacking is now supported for all arithmetic operators

	* Improved regression testing in configure.eg

	* Eliminate unnecessary type conversion to typ_dsk in ncra, ncea, ncwa
	This could reduce precision of answers
	Thanks to Martin Dix for pointing this out

2002-08-20  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_6_0
	Changes since nco-2_5_6:
	Unpacking support is now beta for all arithmetic operators

	* Print attributes with same formatting as variables

	* Added hooks for packing support in arithmetic operators:
	Code was changed in locations marked with "pck_dbg"
	1. Change type of output in nco_def_var() from var->type to
	var->typ_upk when is_rth_opr() is true
	2. Unpack variable in nco_var_get() when is_rth_opr() is true
	3. nco_att_cpy() does not copy attributes "scale_factor",
	"add_offset" for unpacked output variables
	4. nco_att_cpy() ensures "missing_value" is converted to unpacked
	type before copying
	5. nco_var_get() refreshes var->pck_ram on each read
	6. Use nco_cnv_mss_val_typ() to keep type of missing_value in sync
	Unpacking appears to be working for all arithmetic operators!

2002-08-19  Charlie Zender  <zender@uci.edu>

	* Added .cvsignore to dirs affected by autoconf

	* Added autoconf-specific list to doc/TODO

	* Added configure.eg to keep track of autoconf problems

	* Changed bld/Makefile to work with ncap_lex.l and ncap_yacc.y
	Removed ncap.l and ncap.y.

2002-08-18  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_5_6
	Changes since nco-2_5_5: fixed processing of missing_values
	for integer variables in ncra, initial auto build tools

	* Merged Rorik's autobuild infrastructure. New (autobuild) and
	old (bld/Makefile) systems both appear to work but there may
	be some interference on ncap since ncap.l had to be renamed
	ncap_lex.c and ncap.y is ncap_yacc.c.

	* Altered pck_dsk_inq() to set var->typ_upk=var->type by default
	so that nco_cnv_mss_val_typ_upk() has something to work with

	* Fixed problem in nco_cnf_typ.c which caused failure for ncra
	when variable had missing_value attribute and needed to be
	promoted before arithmetic (e.g., int to float). Freeing variable
	each record but leaving mss_val the promoted type resulted in
	mss_val being overwritten (usually to value of 0.0) in all
	records but first for each file. Problem was ncra-specific and
	is described in more detail in header of nco_cnv_mss_val_typ_upk()
	routine. Better fix would be to carry type of missing_value as
	separate element of var structure.

2002-08-14  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_5_5
	Changes since nco-2_5_4: Global "history" attribute fix

	* Fix bug in nco_hst_att_cat() introduced in 2.4.2 which left
	att_nm undefined when global history attribute did not exist

2002-08-13  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_5_4
	Changes since nco-2_5_3: NECSX support

	* Extensive support for NECSX architecture contributed by
	Len Makin <len at hpc.csiro.au>

2002-08-10  Charlie Zender  <zender@uci.edu>

	* Make Rorik Peterson a developer. Add sourceforge logo to homepage.

2002-07-28    <zender@uci.edu>

	* Updated to cygwin-gcc-3.1.1-4 and build problems appear to have
	gone away, but syslimits.h is still not found so GSL cannot build

2002-07-08  Charlie Zender  <zender@uci.edu>

	* Correct ncap symbol table to build on SGI6, SGI64 platforms

	* Add ncap to nco_tst.sh test suite

2002-07-08    <zender@LANINA>

	* All operators build with cygwin gcc-3.1.1 as long as
	-I/usr/include is given first (fixes weird syslimits.h problem),
	non-kludge fix may require updated gcc and mingw packages.

	* Modify Makefile for cygwin-1.3.x compatibility.
	Everything appears to build except ncap.l/ncap_lex.c which needs
	syslimits.h which current cygwin gcc-3.1.1 does not appear to support

2002-07-03  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_5_2

	* conditionally added acosh, asinh, atanh, cosh, sinh, tanh to ncap

	* unconditionally added floor(), ceil() to ncap

	* Print double precision numbers with 12 digits of precision

	* conditionally added erf(), erfc() to ncap

	* Document ncks -b, -B switches in manual

	* Fix size of extracted dimension list for wgt and var calls to
	nco_var_fll(). Print error and hint when encountering TODO #111
	problems rather than dumping core.

2002-07-01  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_5_1

	* Modified ncatted to delete all attributes for specified variable
	when no specific attribute name is given for that variable.

2002-06-16  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_5_0

	* Added man pages for NCO operators to man directory.
	Source of man pages is Debian distribution by Brian Mays,
	which automatically generates man pages from texinfo source.
	Thus man pages are moderately out of date, currently for version 2.2.0.

2002-06-15  Charlie Zender  <zender@uci.edu>

	* Make namespace safe by prefixing all functions with nco_ or ncap_

2002-06-09  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_4_6
	* Changes since nco-2_4_5: Sorting routines

	* Replace indexx* routines with system qsort()-based routines

2002-06-08  Charlie Zender  <zender@uci.edu>

	* Lexer/parser changes to implement conditional, clean up rx's

2002-06-07  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_4_5
	* Changes since nco-2_4_4: Arithmetic routines use const.
	More warning messages during compilation due to size_t printf

	* Fixed bug where mss_val_sht was dereferenced into long
	in one arithmetic routine.

	* Made as many parts of arithmetic routines const as possible
	and implemented const instantiaion outside of loops to reduce
	dereferencing wherever possible.
	If NCO suddenly seems faster, this is why.

2002-06-06  Charlie Zender  <zender@uci.edu>

	* Noticed that GCC gives warnings when printf'ing size_t with %lu
	format flag since type of size_t is non-portable. GNU offers
	non-portable %z workaround. Recommended solution is to typecast
	all size_t's to unsigned longs before printf'ing.

	* Worked on 64-bit clean issues identified by AIX -qwarn64 flag
	The only possible non-functioning code found was date conversion
	code which could break on YYYYMMDD dates.
	Converted int's to longs where necessary to solve this.
	Used size_t instead of int or long where possible.
	Used ptrdiff_t instead of int where warranted.
	Most of remaining warnings could be solved by using size_t instead
	of int or long for counters, but mismatches are unavoidable at
	some point since type nco_long variables (i.e., netCDF data)a
	needs to interact with size_t variables on occasion.

	* cvs tag -c nco-2_4_4

	* Changes since nco-2_4_3: Build system

2002-06-05  Charlie Zender  <zender@uci.edu>

	* Allow 64 bit mode ABI (addresses are all 64 bits) on AIX
	when compiled with ABI=64.
	This should allow NCO to work on files larger than 2--4 GB
	The default for SGI was already 64 bits.

2002-06-04  Charlie Zender  <zender@uci.edu>

	* Make flex/bison default on AIX

2002-05-31  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_4_3
	Changes since nco-2_4_2: History attribute handling

	* Added target non_ncap to Makefile in attempt to prevent NCAR AIX breakage

	* Fixed hst_att_cat() to handle non-standard "History" attribute
	same as standard "history" attribute

2002-05-23  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_4_2
	Changes since nco-2_4_1: #include file mechanism works,
	AT&T lex-compatibility broken by using flex <EOF> rules

	* Documented ncap file insertion

	* Fixed #including file mechanism, generalized line counting and
	file name storage

2002-05-22  Charlie Zender  <zender@uci.edu>

	* Realized that AIX lex does not support <EOF> like flex

	* Ported to NPACI environment

2002-05-20  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_4_1
	Changes since nco-2_4_0: minor bugfix which should fix
	use of operators in scripts where return code is checked

2002-05-19  Charlie Zender  <zender@uci.edu>

	* More ncap work to prepare for dimension list structures
	which are going to be implemented correctly by tokenizing
	each element of dimension list and assembling full list in
	parser and letting scanner pass in each token.

2002-05-18  Charlie Zender  <zender@uci.edu>

	* Added nco_op_typ element to prs_sct for handling dimension
	reduction functions

2002-05-15  Charlie Zender  <zender@uci.edu>

        * Fixed bug where nco_exit always returned EXIT_FAILURE

2002-05-14  Charlie Zender  <zender@uci.edu>

	* Added skeleton code to read #include'd files. Not yet working.

2002-05-13  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_4_0
	Changes since nco-2_3_1: Builds out of box on all Unices

	* Surround fabsf and fmodf prototypes with ifndef __GNUG__
	since g++ linking fails when prototypes explicitly specified
	in header _and_ in function. This is a kludge to a kludge
	to enable full g++ compilation.

	* Version now builds on AIX (even ncap.y with pure_parser)
	as long as cc compiler, not xlc or xlC, is used. Prototype
	warnings similar to gcc prototype warnings can be ignored.
	All major platforms are once again working out of the box.

2002-05-11  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_3_1
	Changes since nco-2_3_0: New design, same functionality
	Appears to work on Linux, IRIX but compile problems on AIX

	* gcc compiles with spurious errors but links and tests fine

	* g++ compiles fine but unable to link with fabsf fmodf

	* Code builds and test correctly when compiled with icc

	* New code compiles completely warning-free with icc 6.0

2002-05-08  Charlie Zender  <zender@uci.edu>

	* Added ability to write unformatted binary output to
	ncks using -B switch. Seems to work

2002-05-07  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_3_0
	Changes since nco-2_2_4: Completely unstable version with
	new modular design. Library does build cleanly.

	* Redesigned libnco.a as modular library
	Split into ~20 smaller source files each with private header
	Used const wherever possible

2002-04-27  Charlie Zender  <zender@uci.edu>

	* Finished name cleanup in ncap. Still need to break large
	files into smaller granules and const'ify prototypes

	* cvs tag -c nco-2_2_4
	Changes since nco-2_2_3: Packing and unpacking functions now
	both work in ncap

	* Reducing ndrv number of discretely representable values by
	1 appears to fix the rounding problems. Will probably have to
	reduce it by one more to make room for a missing value.

2002-04-26  Charlie Zender  <zender@uci.edu>

	* Packing appears to be working, but not recursively, and there
	are still issues of speed and rounding problems

	* Automatically call var_upk() in var_get() in ncap only

	* Improved pck/upk values in in.cdl

	* Make var_pck() alter typ_pck, typ_upk elements when finished
	packing

2002-04-24  Charlie Zender  <zender@uci.edu>

	* Put warnings on some arbitrary limits in ncap

	* Modify ncap and Makefile to link to -lC AIX C++ library to
	access float intrinsics cosf()... AIX does not support gammaf()
	(nor does SGI).

2002-04-23  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_2_3
	Changes since nco-2_2_2: Support unpacking variables in ncap

	* Altered ncap algorithm so that now binary var/att expressions
	take highest precision type rather than always using var type.
	This allows unpacking algorithm to work straightforwarly using
	scale_factor and add_offset convention.

2002-04-18  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_2_2
	Changes since nco-2_2_1: fix rare ncwa weight bug

	* make tst gets test file from dust.ps.uci.edu rather than CGD

	* Avoid wgt portion of ncwa when DO_CONFORM_WGT = False
	This section was superfluous in this situation anyway.
	Avoiding it by testing for DO_CONFORM_WGT appears to fix
	some hard to identify bug when lon was being averaged with gw as
	weight. The two did not conform, but a problem occured anyway.
	This appears to cure the three mysterious ncwa crashes present in
	the TODO list so mark those as fixed too.

2002-04-02  Charlie Zender  <zender@uci.edu>

	* Switch back to using pure_parser to prevent Linux core dumps on

2002-03-30  Charlie Zender  <zender@uci.edu>

	* Prototype fabsf() where used to help Sun compilation

2002-03-27  Charlie Zender  <zender@uci.edu>

	* Quiet output by only printing CONVENTION when dbg > 0

2002-03-21  Charlie Zender  <zender@uci.edu>

	* Remove %pure_parser from ncap.y to preserve yacc compatibility

2002-02-27  Charlie Zender  <zender@uci.edu>

	* Described LHS casting in manual

2002-02-24  Charlie Zender  <zender@uci.edu>

	* ncap variable division had numerator and denominator swapped!

	* Removed ncap_lex.c ncap.tab.c ncap.tab.h because they are not
	portable across platforms so it is best to let these be generated
	on user's machine until portable x-platform versions can be
	generated. Immediate problem is that IRIX and Linux versions
	are interfering with eachother.

	* ncap -r does not require argument

2002-02-18  Charlie Zender  <zender@uci.edu>

	* Began documenting ncap in nco.texi

2002-02-11  Charlie Zender  <zender@uci.edu>

	* Remove ncap dependency on getopt.o, getopt1.o since
	getopt_long() is not currently used (but using it is on
	the TODO list). Re-implementing getopt_long() will be done
	eventually, but now just make ncap easier to build to facilitate
	more beta testing.

2002-02-04  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_2_0:
	Changes since nco-2_1_3: Henry made subscripts lexer tokens and
	improved dimension list handling so LHS casting works regardless
	of precedence or presence of LHS expressions.

	* Small ANSI fixes in ncap.c for AIX

	* Replace math float prototypes required for AIX, Solaris builds
	These are not required on Linux or IRIX, which keep them in math.h

	* Documentation changes

2002-02-02  Charlie Zender  <zender@uci.edu>

	* Quieted output by removing verbose printing from debug level = 0
	Execution is now silent except for WARNINGS and INFOs.

2002-01-30  Charlie Zender  <zender@uci.edu>

	* Added some Compile Farm procedures to nco_src_frg.txt

	* Add FREEBSD support to Makefile, and allow environment
	to override CC and C++ compiler variables

2002-01-29  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_1_3
	Changes since nco-2_1_2: LHS casting really works as long as
	dimensions are already in output file. Replaced var_add() in ncap,
	no known parser bugs, just missing features.

	* Created var_add_no_tally() by copying var_subtract() and
	changing minuses to pluses. This routine does not use tally,
	and does handle missing values appropriately.
	Changed ncap_var_var_add() to use var_add_no_tally() rather than
	var_add(). This fixed segfaults with prs_mdp definition,
	which now works as expected.

	* ncap variable addition scripts break in var_add()
	Possibly because not all ncap routines malloc() tally array
	Possibly because missing values handling is not failsafe in
	var_add() (although I believe it is fine for other NCO operators)

	* Allocate tally using sizeof(long) rather than
	nco_typ_lng(NC_INT)

2002-01-28  Charlie Zender  <zender@uci.edu>

	* Move LHS_cst cleanup to statement_list rule so cleanup does
	not occur before last expression in statement is evaluated

	* Added ncap_var_stretch() to out_var_exp = att_exp action

	* Spread out debug levels to create more uniform distribution
	of diagnostics as dbg_lvl increases

	* LHS casting is semi-working, semi-broken. Seems to work when all
	required dimensions are already in input file and RHS is variable,
	not attribute. Thus a3[lat,lon,lev] = one works but
	a3[lat,lon,lev]=1.0 does not.
	Still thinking about how to stretch attributes.

2002-01-27  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_1_2
	Changes since nco-2_1_1: ncap warning cleanups, icc conformance,
	plug most non-ncap leaks detected by insure++

	* Move yylex() so only called once in ncap_initial_scan()

2002-01-26  Charlie Zender  <zender@uci.edu>

	* Use <limits.h> to get INT_MIN, INT_MAX

	* Changed from gcc to icc on Intel, seems to work fine

	* Cast char to unsigned char and visa versa where necessary to
	prevent icc warnings. This solved all icc warnings on ncap, and
	solved all IRIX cc warnings for ncap too. Since unsigned char
	pointer and char pointer are same size, there should be no problem
	casting between them. However, casting between unsigned char value
	and char value could change answers.
	String operations should be checked to ensure they still work.

2002-01-23  Charlie Zender  <zender@uci.edu>

	* Fix read overflow in ncks.c:prn_var_val_lmt() where
	non-NUL-terminated character array was being printed with %s format

2002-01-22  Charlie Zender  <zender@uci.edu>

	* Fix non-NUL-terminated strings in hst_att_cat()

	* Added nco/doc/purify.txt to track memory problems reported by purify

2002-01-21  Charlie Zender  <zender@uci.edu>

	* Remove templates for math functions from ncap.c

	* Implement CCOMMENT start state to recognize C comments /* */

	* Explicitly declare yy_scan_string() to remove compiler warnings

	* Implement/use nco_set_fill() wrapper
	Remove architecture-dependent wrapper on usage
	Pass pointer to valid fll_md_old since NULL is not safe
	because nc_set_fill() may try to write to it

2002-01-17  Charlie Zender  <zender@uci.edu>

	* Initialize RHS to False, add global LHS_cast

2002-01-16  Charlie Zender  <zender@uci.edu>

	* Enable assertion macros in ncap

	* Changed Makefile default to OMP=N until further testing

	* Began implementation of lexer for subscripted variables
	with x[dmn1,dmn2,...dmnN] syntax. Currently creates list of
	dimension structures but does nothing with it.

2002-01-13  Charlie Zender  <zender@uci.edu>

	* Verified ncap script gives same answers as odxc.ncl script

	* var_free() superceded variable in ncap_var_conform_dim()
	causes core dump (why?), but not free'ing must cause memory leak

	* Realized var_conform_dim() has bug of omission: does not abort
	when variables do not conform because dimension list of one is
	subset of other but ORDER of dimensions differs, e.g.,
	a(lat,lev,lon) !~ b(lon,lev).
	NCO probably returns incorrect answers silently in this case!

2002-01-12  Charlie Zender  <zender@uci.edu>

	* Added variable/variable division (which had been overlooked)

	* Created ncap_var_stretch() which generalizes var_conform_dim()
	by including convolution of variables. ncap_var_stretch() appears
	to work as drop in replacement for var_conform_dim().
	Convolution is just a stub which does not do anything yet.
	Realized that expansion might work by creating arbitrary variable
	of convolution size and then separately calling var_conform_dim()
	with that as var and both vars as wgt.

	* First build of ncap on LINUXALPHA architecture

2001-12-31  Charlie Zender  <zender@uci.edu>

	* More ncap.* cleanup. Alter some variable names to conform to
	rest of NCO.

2001-12-29  Charlie Zender  <zender@uci.edu>

	* Succeeded in building ncap on 64 bit machines: SGI, Alpha, Sun
	All of these machines have bison installed
	Some of these builds require building getopt.o separately
	Build fails on IBM because yacc does not understand pure_parser

2001-12-28  Charlie Zender  <zender@uci.edu>

	* More CEWI initializations

	* Changed copyright to 2002

	* Remove C++ comment characters that crept into various routines
	Using // comments causes default to compilation to break on many
	architectures (Linux being an exception)

	* cvs tag -c nco-2_1_1
	Changes since nco-2_1_0: ncap uses @ for attributes
	Mixed rank handling improved but still broken

	* Fix '@' handling for global attributes

	* Make handling of attribute indicator @ consistent in warnings

	* ncap.l: cast void to ptr_aed->type not undefined type

	* Begin clean up of ncap code, eliminate compiler warnings

2001-12-11  Henry Butowsky  <henryb@ntlworld.com>

	* Changed ncap.l so attributes now use the @ symbol rather than :
	          i.e var_nm@att_nm rather than var_nm:att_nm

	* Changed ncap.y So that 1-D variables can be saved in an attribute

	* Attempted to fix the rank problem. Added ncap_var_conform_dim() to
	  ncap_utl.c, Its not working correctly at the mo.

        * Added att_lst_max to ncap.c

	* Updated ncap.in

2001-12-02  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_1_0
	Changes since nco-2_0_3: ncrename interactive query limiter
	ncap extravaganza

	* Move Henry's tests into ncap.in script

	* Allow global:att_nm to signify global attributes in ncap

	* Removed file query cruft from ncrename and added maximum
	response count short circuit mechanism to prevent batch jobs
	from going bonkers when -O not specified and output file exists

	* Added hybrid coordinate info to in.cdl

2001-11-10  Charlie Zender  <zender@uci.edu>

	* Added three_dim_var_crd to check COORDS storage convention ordering

2001-10-30  Charlie Zender  <zender@uci.edu>

	* Fixed getopt dependencies and included nco_netcdf.h nco.h in
	ncap stuff

2001-10-28  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_0_3
	Changes since nco-2_0_2: ncks bugfixes for units printing,
	and version information

	* Use NC_REC_DMN_UNDEFINED instead of -1 where appropriate

	* Fix argument list to nco_inq_varid() call in ncap

	* Fix netCDF3 migration bug that could cause core dumps because
	non-coordinate dimensions where being interpreted as coordinate
	dimensions in ncks due to changed nature of nc_inq_varid returns

2001-10-15  Charlie Zender  <zender@uci.edu>

	* Added VERSION infrastructure for recording build information in executable

	* Check rcd before Exit_Gracefully() in main() routines so
	rcd does not generate "set but not used warnings"

2001-10-07  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_0_2
	Changes since nco-2_0_1: No user-visible changes
	All changes are in netCDF3 compliant function semantics
	for the nco_netcdf wrappers. Altered many routines to call
	information-specific versions of inquire functions where
	possible.

	* Verified nco-2_0_2 passes test suite

	* nco_typ_sng(): NC_CHAR is unsigned char, moved nco_typ_sng(),
	c_type_nm(), fortran_typ_nm() to nco_netcdf library so that
	library may take advantage of these routines in printing useful
	diagnostics, yet still be independent of the rest of NCO.

	* Attempted to replace netCDF2-style use of -1 return codes
	by rcd and comparison to NC_NOERR everywhere. This is not exactly
	straightforward because there are many valid reasons to have
	literal constant -1 in the code. I think I did this correctly.
	However the use of -1, instead of NC_GLOBAL, for global attributes
	and, for ncatted, to indicate that attribute changes should apply
	to all variables, should be changed to NC_GLOBAL so code is more clear.

	* Change functions to implement netCDF 3.X interface
	Meaning pass answer holder as pointer and pass back return code
	nco_open(), nco_create(), nco_inq_[var,dim,att]*()

	* ncks.c prn_var_val_lmt(): Handle nco_inq_attid() correctly

2001-10-01  Charlie Zender  <zender@uci.edu>

	* Build is clean and successful with g++/Linux, xlC/AIX

	* Return (int)0 instead of (int)NULL from nco_typ_lng()

	* Initialize nc_type variables with new netCDF 3.5 token NC_NAT
	This requires building NCO > 2.0.1 with netCDF >= 3.5
	This change also permits successful builds with g++ again, which
	complained about initializing nc_type with non nc_type enums

	* cvs tag -c nco-2_0_1
	Changes since nco-2_0_0:
	Cleaner separation of netCDF wrappers into nco_netcdf.c,.h
	Appearance of error messages slightly changed since prg_nm_get()
	no longer invoked by wrappers

	* ncap uses nco netCDF3 interface

        * Structure nco_netcdf.h as standard library header

	* Forbid multiple includes of nco_netcdf.h

        * Changed nc.h to nco.h for namespace consistency

        * Removed prg_nm_get() from all nco wrappers so wrappers have
	no external dependencies

	* Changed nc_err_exit() to nco_err_exit()

	* Removed superfluous headers from nco_netcdf.c

2001-08-10  Charlie Zender  <zender@uci.edu>

	* Changed storage location of remotely accessible in.nc to
	.../nco/in.nc

	* Various Makefile changes for exotic NCAR platforms

	* Changed band to bnd in in.cdl

2001-07-25  Charlie Zender  <zender@uci.edu>

	* TODO: Rearranged TODO list and put ~15 high-priority
	items up on the top

2001-05-28  Charlie Zender  <zender@uci.edu>

	* Added HDF5 interface to nco_create(), using HDF5 preprocessor
	token to isolate native HDF code currently

2001-05-07  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-2_0_0

	* This netcdf3 branch is now merged into the main trunk.
	The netcdf2 branch is now in maintenance mode.

	* cvs tag -c nco-1_3_4

2001-04-04  Charlie Zender  <zender@uci.edu>

	* Changed to using nco_inq_att_flg() in ncar_csm_inq()

2001-03-26  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-1_3_3

	* nco_tst.sh runs as expected when compiled with OPTS=D and OPTS=O
	on both Linux 32 bit and Irix 64 bit

	* Removed make options for NETCDF2_ONLY flag which is no longer
	supported with NCO 1.3 branch

	* Default build now compiles with -DNO_NETCDF_2 flag and tests
	successfully.

	* Replaced nclong with nco_long = long.
	There's no need to remove nco_long just yet until a long term
	strategy for dealing with long, size_t, int issues is decided
	upon. netCDF 3.x deprecates the whole nclong issue, but it might
	be useful to have reminders of where the issue was important,
	e.g., in the fortran arithmetic routines.

	* Changed in.cdl to use int rather than deprecated long and
	removed deprecated "l", "L" suffices to numeric constants

	* Added i18n headers to ncra.c and to Makefile with default being
	no internationalization. Hooks appear to work fine.

	* Changed NC_LONG to NC_INT to adhere closer to standard.
	Type NC_LONG is currently synonymous with NC_INT and will continue
	to be represented by native type long.

2001-03-07  Charlie Zender  <zender@uci.edu>

	* Added Makefile option to disable OpenMP support on compilers
	that automatically support it: OMP=N

2001-03-06  Henry Butowsky  <thin@thin.screaming.net>

        * fixed ncdiff problem. There was a conversion error in dmn_dfn

	* fixed ncrename problem. There was a typo error
	  in nco_rename_var ( it was calling itself) This
	  is the third such error in nco_netcdf.c.

2001-03-02  Charlie Zender  <zender@uci.edu>

	* Code fails to compile with -DNO_NETCDF_2

	* Code compiles but is buggy. This command fails:
	ncdiff -O -C -v three_dmn_rec_var in.nc in.nc foo.nc;ncks -H foo.nc
	As does
	ncdiff -O -C -v PS nco_tst.nc nco_tst.nc foo.nc

	* Removed NETCDF2_ONLY code

2001-02-16  Charlie Zender  <zender@uci.edu>

	* cvs tag -c nco-1_3_2

	* After many minor tweaks, made commits and retagged nco-1_2_2
	and this is the version that will be merged into 1_3_1 to create
	1_3_2

	* Tagged changes until today as nco-1_3_1 and will merge with
	nco-1_2_2

2001-02-11  Charlie Zender  <zender@uci.edu>

	* Figured out that texi2dvi --pdf really does work nicely and am
	now using it rather than ps2pdf

	* Tagged and released nco-1_2_2

2001-01-02  Charlie Zender  <zender@uci.edu>

	* Clean up some function prototypes, removed crud from nc.h,
	implemented extern keyword on all functions

	* Changed ncks print formatting of NC_BYTE data (i.e., signed
	char) to print as unsigned char data to facilitate printing
	HDF4 datasets.

2000-12-29  Charlie Zender  <zender@uci.edu>

	* Added make NETCDF2=Y to compare netCDF2 behavior with/without
	HDF libraries. HDF libraries cause ncwa to fail certain tests
	that work fine with Unidata netcdf2 libraries. All other operators
	appear fine with HDF libraries.

	* Added default statements to switch(type) constructs which
	emitted warnings when compiled with -DNETCDF2_ONLY since,
	apparently, there are a whole bunch of things besides numeric
	types in the old nctype enum and gcc warns about enums that are
	not exhaustively considered in switch() statements.
	All these default statements can be removed with netCDF3 interface
	so perhaps these should be surrounded with #ifdef NETCDF2_ONLY
	constructs, but they actually do make sense for netCDF3 as well
	so I have implemented a uniform error function, dfl_case_nctype_err(),
        to be called by all routines which emit errors only when compiled with
        NETCDF2_ONLY.
        This makes the behavior easy to modify or remove in the future.

	* Fixed echoing of Makefile diagnostics

	* Added HDF4 option to Makefile to facilitate compiling with HDF
	version of netCDF libraries

2000-11-25  Charlie Zender  <zender@uci.edu>

	* Added -q ("quiet") switch to ncks to suppress printing of
	dimension indices and coordinate values

2000-11-04  Charlie Zender  <zender@uci.edu>

	* Created netcdf3 branch with tag netcdf3 and additional version
	tag nco-1_3. This branch will hold the netcdf3 implmentation while
	it is in development. When it is ready it will become the main
	trunk of nco.

2000-10-29  Charlie Zender  <zender@uci.edu>

	* Implemented new @command{}, @env{}, and @acronym{} keywords in
	nco.texi

2000-10-26  Charlie Zender  <zender@uci.edu>

	* Fixed makeinfo problem with nco.texi

2000-10-15  Charlie Zender  <zender@uci.edu>

	* Implemented Henry's ncrename and nco_tst patches: Former
	allows renaming of attribute for a single variable, latter cleans
	up nco_tst.sh and allows easier function-specific testing.

2000-10-01  Charlie Zender  <zender@uci.edu>

	* Cast results of sqrt() to LHS type to eliminate new gcc 2.96
	warnings. g++ 2.96 is less forgiving than gcc 2.2

	* Fixed some miscast missing values in arithmetic routines for
	doubles, shorts, and longs. Odd that I had not noticed these
	miscasts before. g++ 2.96 flagged them.

2000-09-21  Charlie Zender  <zender@uci.edu>

	* Fixed one-line bug where ncwa min,max,ttl cases fell
	through to error exit rather than doing nothing with weights

	* Adding critical regions about netCDF library calls appeared to
	work. ncwa and ncra/ncea now give repeatable, correct answers when
	multithreaded. Speedups appear to be about ~30--40% on small
	numbers of typical GCM files when using 4 threads. Performance
	appears to level out by 4 threads, although more timing is
	necessary. For example, ncwa is now spending about 50% on I/O and
	50% on computation.

2000-09-20  Charlie Zender  <zender@uci.edu>

	* Added OpenMP critical regions to var_get() and var_refresh()

	* Added OpenMP critical regions around thread-unsafe netCDF
	write calls in ncwa and ncra/ncea.

	* Finally removed 1995--1996-era SGI enum workarounds from nc.h
	SGI compiler on dataproc seems to behave sanely now

	* Jim Rosinski and Stacy Walters have both pointed out that netCDF
	is not thread-safe. Therefore the OpenMP implementation is bound
	to fail until critical locks are added.

2000-09-19  Charlie Zender  <zender@uci.edu>

	* Added OpenMP pragmas to ncea,ncra,ncrcat. They probably don't
	work either.

	* Multi-threaded version of ncwa averages variables in T42 file
	correctly sometimes, but also incorrectly. Currently unpredictable
	what causes discrepancy.

	* Removed arg_cnt from ncwa.c. ncwa.c now uses standard
	fl_mk_lst() to diagnose incorrect argument counts

2000-09-18  Charlie Zender  <zender@uci.edu>

	* Got OpenMP compiling but not completely working on ncwa under IRIX

2000-09-17  Charlie Zender  <zender@uci.edu>

	* Added full OpenMP directives to ncwa. If this works then ncra is next.

2000-09-13  Charlie Zender  <zender@uci.edu>

	* Contrary to the documentation, ncflint has always processed
	coordinate variables. Perhaps fixing coordinate variables is a
	better idea? Patched var_lst_divide() to fix all non-record
	coordinate variable to ncflint. Not sure if I will release this
	though. Perhaps it should be a switch?

	* Improved ncflint documentation, including its ability to add files

2000-08-31  Charlie Zender  <zender@uci.edu>

	* Changed handling of netCDF convetions to search for
	"Conventions" attribute rather than "convention" attribute
	Not sure why I ever used "convention" in the first place!
	This should fix things like gasussian weights being subtracted

2000-08-30  Charlie Zender  <zender@uci.edu>

	* Updated var_dup(), var_free() to handle scl_fct.vp, add_fst.vp,
	srd. That's right, these routines were not handling srd pointer
	correctly.

2000-08-29  Charlie Zender  <zender@uci.edu>

	* Removed tally array from var_avg_reduce_max/min() routines

	* Added some clarifications to memory handling in the manual, and
	additional examples provoked by John Sheldon's GFDL netCDF
	website.

	* Integrated ncvarid_or_die() and ncdimid_or_die() into ncrename

2000-08-28  Charlie Zender  <zender@uci.edu>

	* Tagged nco-1_2_1

	* Will all previous changes to nco_malloc(), nco_realloc(), and
	memory management in general, make tst now seems to be well
	behaved with Electric Fence, and duplicates answers without
	Electric Fence.

	* Another nco_realloc() tweak to satisfy Electric Fence:
	Now realloc() is never called when size == 0

2000-08-27  Charlie Zender  <zender@uci.edu>

	* Automatic type conversions for arithmetic now work in ncwa,
	ncea, ncra. Don't think ncflint would benefit from the capability.

2000-08-26  Charlie Zender  <zender@uci.edu>

	* Changed meaning and name of typ_prv to typ_dsk in var_sct

	* Moved target dat_cln from cln to dst_cln, opposite for lib_cln

	* Simplified internals of nco_opr_drv()

	* Fixed nco_realloc() so it does not call realloc() when ptr==NULL
	and size==0. Allowing a realloc() call in this situation is
	ANSI-legal but triggers Electric Fence.

2000-08-25  Charlie Zender  <zender@uci.edu>

	* Merged Makefile refinements by Ethan Davis to better support
	DODS compilations and less redundant building

2000-08-23  Charlie Zender  <zender@uci.edu>

	* Functionalized type conversion routines nco_cnv_var_dbl() and
	nco_cnv_dbl_var()

	* Fixed x:y bug in opt arg of ncra.c introduced in 1.2

2000-08-14  Charlie Zender  <zender@uci.edu>

	* Added this text to the license, provided by Steven G. Johnson

	"As a special exception to the terms of the GPL, you are permitted
	to link the NCO source code with the NetCDF and HDF libraries
	and distribute the resulting executables under the terms of the GPL,
	but in addition obeying the extra stipulations of the netCDF and
	HDF library licenses."

	This is intended to allow NCO to link to the non-GPL licenses of
	netCDF and HDF and avoid the "KDE problem". Apparently binaries
	are considered derived works of any libraries they are statically
	linked to, i.e., netCDF and/or HDF. This means both licenses must
	be obeyed, but that is impossible because no license except the
	GPL is compatible with the GPL. So we the developers of NCO must
	explicitly grant permission to all users to redistribute NCO under
	both licenses.

2000-08-03  Charlie Zender  <zender@uci.edu>

	* Tagged nco-1_2

	* Altered homepage

	* Added PDF version of manual

2000-07-31  Charlie Zender  <zender@uci.edu>

	* Added mathematical definitions of all new operations to manual

	* Rearranged order of operations in ncwa so that non-linear
	operations may employ weighting correctly. Weighting is not
	well-defined for some operations (rmssdn) but I did my best.

2000-07-28  Charlie Zender  <zender@uci.edu>

	* Applied final min/max/ttl patch so min/max/ttl capabilities
	should now work as expected on ncwa,ncea,ncra

2000-07-16  Charlie Zender  <zender@uci.edu>

	* Added ncwa min/max/ttl patch

2000-07-09  Charlie Zender  <zender@uci.edu>

        * Added section on Contributing/contributors to nco.texi

	* Fixed case when missing value is first in min and max operators

	* Added min, max, ttl cases to nco_tst.sh

	* Added temporary variable to all low-level arithmetic routines
	(e.g., var_add()) to store missing value in order to reduce
	dereferencing of pointers to missing values. This may result in
	measurable speedups for all arithmetic operators.

2000-07-08  Charlie Zender  <zender@uci.edu>

	* Applied minmaxttl03 patch

2000-07-02  Charlie Zender  <zender@uci.edu>

	* Added nco_op_typ to SGI enum section of nc.h

	* Update nco/doc/nco_src_frg.txt to include release instructions

	* Released nco-1.1.48.tar.gz on sourceforge

	* Switched all memory management to nco_malloc(), nco_realloc()

	* Implemented min/max/ttl patch (min and ttl not working yet)

2000-06-20  Charlie Zender  <zender@uci.edu>

	* Implemented Schweitzer's 'make DODS=Y' patch in Makefile
	Only works on Linux as configured but that's a start

	* Added ncvarid_or_die() to replace simple ncvarid() on calls
	where failure to find variable is an error and a dianostic of
	which variable is missing would be nice.

2000-06-05  Charlie Zender  <zender@uci.edu>

	* Changed ~/nc/nco paths to ~/nco

2000-06-02  Charlie Zender  <zender@uci.edu>

	* Added explicity coercion to all lines which generated assignment
	errors under g++ C++ compiler. This might affect speed of
	conversions to long, short, char, and byte types from double and
	float types. These conversions are rare and considered unimportant
	so any performance penalty is acceptable.

	* Small changes to make code compile cleanly with g++ C++ compiler

	* Changed fl_mk_lcl() to try scp instead of rcp. scp should fall
	through to rcp is sshd is not running on remote machine.

	* Add Schweitzer's HTTP patch for DODS compatibility to
	fl_mk_lcl(). Will probably alter implementation in the future so
	fl_mk_lcl() works without netcdf library as before. NCO should now
	be DODS compliant when linked to DODS libraries. This allows
	reading, but not writing, of remote files using HTTP protocol.

	* Tagged nco1_1_49 as clean new version to start work from
	sourceforge without any overlaps with 1_1_48

	* Had to re-tag nco1_1_48 because sourceforge CVS repository was
	slightly out of sync with CGD repository

	* Moved CVS repository to sourceforge

2000-05-16  Charlie Zender  <zender@uci.edu>

	* Tagged this as nco1_1_48

	* Found and fixed ncdiff bug in TODO #155.
	Bug had been inserted in ncdiff 1.5 (nco-1.1.15, November 1998)
	when I switched from using dimension IDs to using dimension names
	to identify and compare dimensions in var_conform_dim(). Problem
	was that there are two locations in var_conform_dim() where this
	needed to be done and I only changed the first location. Then I
	turned off dimension remapping code in ncdiff which used to take
	care of the problem. Fortunately I had left that code commented
	out in ncdiff() so I was able to check that turning it back on
	solves the problem. Now I have removed old commented-out block
	from ncdiff (because it was confusing) and all logic is now local
	to var_conform_dim(). This fix increases the number of strstr()
	comparisons of dimension names because names must now be compared
	twice in var_conform_dim() for each variable being expanded.
	Oh well.

2000-05-12  Charlie Zender  <zender@uci.edu>

	* Fixed bug in -d dmn,,,srd case where lmt.end was incorrect

2000-05-10  Charlie Zender  <zender@uci.edu>

	* Finished testing of feature allowing skipping of initial files
	when lmt_typ = dim_idx. Seems to work. Now dim_idx and crd_val
	hyperslabs may have arbitrary numbers of superfluous files at
	beginning and end.

	* Added rec_skp_nsh member to lmt structure to support keeping
	track of records skipped in superfluous initial files for lmt_typ
	= dim_idx on multi-file operators

2000-05-09  Charlie Zender  <zender@uci.edu>

	* Altered behavior of single point hyperslabs so that single point
	hyperslabs in the record coordinate (i.e., -d time,1.0,1.0) may be
	treated differently than single point hyperslabs in other
	coordinates. Multifile operators will skip files if single point
	hyperslabs in record coordinate lays outside record coordinate
	range of file. For non-record coordinates (and for all operators
	besides ncra and ncrcat on record coordinates), single point
	hyperslabs will choose the closest value rather than skip the file
	(I believe). This should be verified.

	* Switched NCO from atof(), atol() to strtod(), strtol()

	* Added ability to skip superfluous trailing files to lmt_evl()
	when limits are coordinate values. Needs testing but appears to
	work. Had to use a goto statement, icky. Fixes TODO #157?

2000-05-04  Charlie Zender  <zender@uci.edu>

	* More fixes to fix problems with Electric Fence

2000-04-18  Charlie Zender  <zender@uci.edu>

	* Added ncra ncea to RPM

2000-03-22  Charlie Zender  <zender@uci.edu>

	* Added code to prevent malloc'ing 0 bytes because, although it
	is perfectly legal, Electric Fence complains

2000-03-06  Charlie Zender  <zender@uci.edu>

	* Added target rpmnet to Makefile. Usage is
	sudo make NCO_VRS=1.1.46 rpmnet
	This downloads specified NCO version, builds RPMs from it, and
	uploads the RPMs back to NCO FTP site

2000-03-01  Charlie Zender  <zender@uci.edu>

	* Added nco.spec to bld directory

	* Adding rpm target to Makefile

2000-01-27  Charlie Zender  <zender@uci.edu>

	* Tagged this as nco-1_1_45

	* Fix to PID length bug in fl_out_open() on SGIs
	Now use dynamically allocated string to hold PID
	Kudos to Juliana Rew for finding this bug

2000-01-16  Charlie Zender  <zender@uci.edu>

	* Changed all addresses except website to UCI ESS

	* Changed license to GNU GPL (!)

2000-01-14  Charlie Zender  <zender@uci.edu>

	* Calling ncwa without arguments now causes operator to print
	usage and exit successfully

	* Print error message and hint when ncwa called with -a dim1 -a
	dim2 instead of -a dim1,dim2

2000-01-10  Charlie Zender  <zender@z.ppp.uci.edu>

	* ncks now puts string values inside double quotes, character
	values inside single quotes, other slight formatting changes too

1999-12-26  Charlie Zender  <zender@dust.ps.uci.edu>

	* Tagged this as nco1_1_44

	* Documented record coordinate-stride capability for ncra, ncrcat
	in nco.texi examples and command-line usage routines

	* Added support for printing all character arrays as strings in ncks

1999-12-14  Charlie Zender  <zender@dust.ps.uci.edu>

	* Tagged this as nco1_1_43

	* Merged all SGI builds (SGI5,SGI64,SGIMP64) into single makefile block

	* Added support for C-language escape sequences to ncatted
	Moved all this code from ncks to new sng_ascii_trn() function

1999-12-06  Charlie Zender  <zender@dust.ps.uci.edu>

	* Tagged this as nco1_1_42

	* Fixed so that consecutive delimiter strings work,
	e.g., ncatted -O -a history,global,o,c,"hi,,,hi" in.nc

1999-12-04  Charlie Zender  <zender@dust.ps.uci.edu>

	* Fixed bug where ncatted neglected string values after first
	comma, e.g., would drop ", NCAR" from test attribute in
	ncatted -O -h -a test,global,o,c,"NREL, NCAR" in.nc
	because the new attribute value followed the comma delimiter used
	internally by ncatted to delimit list elements

	* Fixed so that setting strings to zero length with ncatted works,
	e.g., ncatted -O -a history,global,o,c,"" in.nc

	* Fixed attribute printing of lists in ncks: terminal delimiter is
	no longer appended

1999-11-02  Charlie Zender  <zender@dust.ps.uci.edu>

	* Fixed some problems with AIX build environment, switched to
	-DAIX on the IBM SP cluster environment

1999-10-21  Charlie Zender  <zender@dust.ps.uci.edu>

	* Defined MY_BLD_DIR in Makefile before it is used
	Re-tagged this as nco1_1_41

1999-10-17  Charlie Zender  <zender@dust.ps.uci.edu>

	* Tagged this as nco1_1_41

	* Added dir to targets which do not rebuild *.d dependencies
	Doing this and installing latest make-3.78.1 fixes build on dataproc

1999-10-15  Charlie Zender  <zender@dust.ps.uci.edu>

	* Tagged this as nco1_1_40

	* Added two more ncwa test cases to nco_tst.sh

	* Fixed another bug in ncwa reported by Keith Lindsay.
	The denominator in normalized averages did not always account for
	missing values in the variable being averaged. This bug may have
	been introduced sometime during ncwa rewrites around 19981201.
	I'm sure it has not always been there.

1999-10-03  Charlie Zender  <zender@dust.ps.uci.edu>

	* Tagged this as nco1_1_39

	* Added test target in bld/Makefile. Now `make test' automatically
	downloads a small (66 kb) file on which it performs a small
	battery of tests (bld/nco_tst.sh).

	* Revamped build procedure to use GNU make dependencies rather
	than makdep perl script.

	* All *.c files now build cleanly with gcc -Wall

	* Fixed Makefile bug where Fortran routines were compiled when
	they were not needed and visa versa

	* Moved NETCDF_INC and NETCDF_LIB out of architecture specific
	portions of Makefile

1999-08-31  Charlie Zender  <zender@dust.acd.ucar.edu>

	* Tagged this as nco1_1_38

	* ncwa now averages over all dimensions when none are specified
	with -a

	* Patched avg_reduce...() to fix set averages equal to zero when
	tally is zero. This fixes Keith's problem.

	* Added ncwa test #12 to nco_tst.sh. This tests for a bug
	reported by Keith Lindsay where ncwa averaged a variable which is
	completely missing_value to a value of 0.0 rather than
	missing_value.

	* Removed C_ONLY token and made builds completely C-based by
	default. Introduced new token USE_FORTRAN_ARITHMETIC to build
	old style NCO with fortran arithmetic routines. Seems to work
	fine. Translated Fortran date routines newdate() and days2eom() to
	C as part of this.

1999-08-04  Charlie Zender  <zender@dust.acd.ucar.edu>

	* Tagged this as nco1_1_37

	* Implemented first attempt to use msrcp, seems to work

	* Tagged this as nco1_1_36

	* Improved patch to fl_mk_lcl() so it "does the right thing"
	when determining whether to try to rcp files

1999-08-03  Charlie Zender  <zender@dust.acd.ucar.edu>

	* Patched fl_mk_lcl() to exit gracefully on filenames with
	multiple colons (which are legal in UNIX). Files with single
	colons in their names, as opposed to rcp requests, still cause
	core dumps and will continue to do so until I write a routine
	which determines whether to treat the filename as an rcp
	request based on some sort of valid hostname recognition
	algorithm.

1999-07-29  Charlie Zender  <zender@dust.acd.ucar.edu>

	* Tagged this as nco1_1_35

	* Changed WARNING message to print in ncra only when insufficient
	records have been found and last file has been processed

1999-07-03  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Tagged this as nco1_1_34

	* Altered ncatted behavior to replace missing data values with new
	missing_value when missing_value attribute changes

1999-05-12  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Tagged this as nco1_1_33

	* Using the new lmt_evl() dim_idx code for operators besides ncra
	and ncrcat, e.g. ncks, causes problems with wrapped and wrapped
	stride limits. One line fix to lmt_evl() restored old lmt_evl()
	dim_idx code to all operators except ncra and ncrcat. The new
	lmt_evl() code simply will not (and should not) handle wrapped
	coordinates for the record dimension in multi-file operators.

1999-05-11  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Tagged this as nco1_1_31

	* Fixed ncks problem caused by not initializing all boolean flags
	of lmt structures in lmt_prs(). Changed lim to lmt.

	* Tagged this as nco1_1_30

	* Tentatively fixed record hyperslab problems introduced in 1_1_29
	by extensively generalizing and rewriting lim_evl()

	* Clarified in User's Guide that default behavior of stride is
	that -d time,,,srd is syntactically equivalent to -d time,0,,srd

	* Realized new record dimension features of nco1_1_29 were buggy
	when min and max limits were not both user-specified because then
	total number of records cannot be not known a priori

1999-05-10  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Tagged this as nco1_1_29

	* Cleaned up files for a clean compile with gcc -Wall

1999-05-09  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Toggled behavior of `ncks -a' so that default is now to
	alphabetize output

	* Fixed error (missing comma) in stride documentation in User's Guide

	* Implemented stride for the record dimension in ncra and ncrcat,
	e.g., ncra -d time,1,100,12 in1.nc in2.nc ... out.nc should now
	work correctly across files. Currently stride only works on the
	record dimension of ncra and ncrcat, however, not the rest of
	the dimensions.

	* Implemented index-based hyperslabbing across files in the record
	dimension in the multi-file operators ncra and ncrcat, e.g.,
	ncra -d time,1,100 in1.nc in2.nc ... out.nc. The User's Guide said
	this feature had already been implemented, but that, apparently,
	was not true. The symptom was an "index out of range error" from
	netCDF.

1999-04-27  Charlie Zender  <zender@sanitas-e0.cgd.ucar.edu>

	* Tagged and released this as nco1_1_28

	* Isolated build procedure in nco_dst.pl with --bld option, off by
	default

	* Added --dat_cnt to nco_dst.pl to support dataproc.ucar.edu

	* Added SGIMP64 architecture to Makefile to support
	dataproc.ucar.edu. Default netCDF lib is r4i4 rather than r4i8 as
	on winterpark so I am avoiding the whole issue by using C_ONLY
	defaults and spoofing SGI64. nco_tst.sh executed without errors.

1999-04-20  Charlie Zender  <zender@flagstaff.cgd.ucar.edu>

	* Tagged and released this as nco1_1_26

	* Fixed so arguments to log10() are reasonable

	* Tagged and released this as nco1_1_25

	* New version requires -lm for log() and ceil() functions
	Added -lm to Makefile for some architecture which were missing it

	* Tagged and released this as nco1_1_24

	* Fixed bug where ncrcat and ncra omitted the last slice of the
	record dimension when -F (Fortran indexing) was user-specified AND
	user-specified hyperslab information was provided for some
	dimensions BUT not for the record dimension. This bug only
	affected ncrcat and ncra and only under these conditions. Thanks
	to John Sheldon <jps@server1.gfdl.gov> for pointing this out.

1999-04-04  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Tagged and released this as nco1_1_22

	* Added -a switch to ncks for alphabetizing the output list.
	Added index_alpha() and changed lst_heapsort() to accept an
	boolean switch argument to accomplish this.

1999-02-25  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Added partial diagnostic message and workaround for TODO #116

1999-01-29  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Added nco_dst.pl to distribution

	* Changed ALPHA makefile to support native compilers (untested)

	* Added NETCDF2_ONLY option to circumvent ncdiff nc_inq_vartype()
	call.

1999-01-24  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Moved index.shtml to NCO doc directory

Thu Jan 21 15:23:02 1999  Charlie Zender  <zender@sanitas-e0.cgd.ucar.edu>

	* Tagged and released this as nco1_1_20

	* Updated various portions of User's Guide

	* Added NETCDF2_ONLY token to eliminate nc_inq_libvers() call

1999-01-13  Charlie Zender  <zender@garcia.acd.ucar.edu>

	* Fixed bug in var_def() where wrong branch was executed when
	called by ncwa for files with no output dimensions. Symptom was a
	core dump or "ncvardef: ncid 4: Invalid dimension id or name"
	error.

Wed Jan  6 17:55:26 1999  Charlie Zender  <zender@sanitas-e0.cgd.ucar.edu>

	* Tagged and released this as nco1_1_18

	* Added kludge to ncwa to workaround bug in var_conform_dim()
	where var_conform_dim() sometimes allows the returned weight
	not to have same size tally array as the template variable. This
	caused core dumps in ncwa.

Fri Dec  4 15:06:23 1998  Charlie Zender  <zender@sanitas-e0.cgd.ucar.edu>

	* Tagged and released this as nco1_1_16

	* Added new logic switch DO_CONFORM to var_conform_dim() to allow
	ncwa to tell when to mask variables. Reran test cases, everything
	seems to be working. Documentation seems up-to-date.

1998-12-03  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Tagged and released this as nco1_1_15

	* Disabled ncwa -n and -W normalization options until I think of
	better way to implement them. -N option now causes ncwa not to
	divide by the denominator. Disabled -n and -W tests in nco_tst.sh
	(tests #2 and #3).

1998-12-02  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Changed ncwa to default to weighting coordinates just like
	variables, i.e., toggle default value of -I switch

	* Added more exhaustive ncwa tests to nco_tst.sh

	* Rewrote ncwa section of User's Guide

1998-12-01  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Made sure ncwa weights were being masked when normalization was
	invoked. Formerly, they were not. This was a bug. The bug is now
	fixed.

	* Rearranged normalization logic of ncwa

	* Removed special treatment of "gw" from ncwa

1998-11-25  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Allow hyperslab coordinate specification in exponential format
	even when decimal point is missing, e.g., "-d lon,36e1" is valid

	* var_conform_dim() now checks dimension names rather than IDs

Mon Nov 23 17:29:02 1998  Charlie Zender  <zender@sanitas-e0.cgd.ucar.edu>

	* Added -I switch to ncwa to enable weighting and masking of
	coordinates. Rewrote var_conform_dim() to allow mutually exclusive
	dimensions in ncwa.

1998-11-01  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Added wrapped coordinate caveats to hyperslabe section of
	manual, and implemented warning message whenever wrapped
	coordinates are used.

Sat Oct 31 14:56:33 1998  Charlie Zender  <zender@sanitas-e0.cgd.ucar.edu>

	* Tagged and released this as version nco1_1_10

1998-10-29  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Fixed bug in ncra which only occured when NC_CHAR and NC_BYTE
	types also had a record dimension. var_lst_divide() decided these
	should be fixed variables, thus the output file size included the
	record dimension. The timecom variable in LSM history files was
	triggering this bug. Solution was to make ncra, like ncrcat,
	simply process ALL record variable even NC_CHAR and NC_BYTE,
	though the averaging operation on these types is still
	ill-defined.

Wed Aug 26 16:30:27 1998  Charlie Zender  <zender@odin.cgd.ucar.edu>

	* Fixed bld/nco_tst.sh to work again at NCAR. `make test' now
	performs non-trivial tests of ncwa and ncdiff. Only works at
	NCAR (a necessary input file is rather large).

Wed Aug 19 11:26:25 1998  Charlie Zender  <zender@odin.cgd.ucar.edu>

	* Fixed bug where pvmgetarch returned "SGI" on UNICOS 10.0.0.

	* Improved Makefile fortran switches and added convenience
	housekeeping targets.

	* Fixed bug where cvs_vrs_prs() crashed with -kkv exports

1998-08-18  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Added nco_vrs_prs() to parse NCO versions. NCO version is now
	always printed with -r option.

	* Fixed bug where -n NINTAP list did not recognize `.cdf' suffixes.

Mon Aug 10 21:53:34 1998  Charlie Zender  <zender@sanitas-e0.cgd.ucar.edu>

	* Split ncks -m option into -m and -M so now global metadata can
	be avoided if desired.

	* Fixed bug in ncrename where fl_in could be free()'d before it
	was malloc()'d in fl_nm_prs().

	* Fixed bug in ncdiff where variables of same rank but different
	types would cause core dump when being subtracted. Improved
	diagnostics for failures with ncdiff.

1998-07-07  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Added -h option (suppresses history concatentation) to all
	operators. Changed existing ncks -h option to -m (for metadata).

Sun Jun  7 17:45:20 1998  Charlie Zender  <zender@sanitas-e0.cgd.ucar.edu>

	* Added more descriptive error diagnostics to ncvarid() calls
	to var_lst_mk() ncks to report the names of user-specified
	variables which do not exist in input files.

1998-05-16  Charlie Zender  <zender@sanitas-e0.cgd.ucar.edu>

	* Improved nc_lib_vers_prn()

1998-05-08  Charlie Zender  <zender@sanitas-e0.cgd.ucar.edu>

	* Added improved error diagnostics to ncks when -A fails.
	Added improved error diagnostics to fl_out_close() and fl_mv().
	-r now prints library version for all operators.
	-r and usg_prn() now prints NCO homepage URL.

Wed Mar 11 11:16:39 1998  Charlie Zender  <zender@odin.cgd.ucar.edu>

	* Removed warning message for processed text fields in ncecat.

Mon Mar  2 22:00:59 1998  Charlie Zender  <zender@odin.cgd.ucar.edu>

	* Added nc_inq_libvers() call to ncwa to diagnose SGI
	problems. This is the first netCDF 3.x call in NCO. There's no
	stopping the avalanche now, so user's must install netCDF3.x

Mon Feb  9 09:50:26 1998  Charlie Zender  <zender@odin.cgd.ucar.edu>

	* Merged all three ncwa loops that access output and tally buffers
	so that these buffers can be allocated and deleted inside the main
	loop over variables. This reduces peak memory consumption by a
	factor of three and sustained memory by a factor of two to three.
	ncwa performance should be noticeably enhanced by this.	This
	problem affected, and this fix improves, only the ncwa operator.

Sun Feb  8 21:50:32 1998  Charlie Zender  <zender@odin.cgd.ucar.edu>

	* Downloaded and altered pvmgetarch from pvm3.4b6. This version
	was returning SGI instead of CRAY on Ouray (=Cray J90 Unicos
	10.0.0) because pvmgetarch thinks machines with /bin/4D are SGI.
	Distributing this customized version of pvmgetarch with NCO.
	Also changed new pvmgetarch so it returns SUNMP on any Sun
	multiprocessor, regardless of whether PVM_SHMEM is set to ON.

Mon Jan 19 13:13:08 1998  Charlie Zender  <zender@odin.cgd.ucar.edu>

	* Added HTML keywords and section on large numbers of files to the
	NCO User's Guide.

	* Eliminated compiler warnings caused by type--format mismatches
	from all source code. Should now compile without warnings on SGI.

	* Removed -ansi switch from Linux CFLAGS in order to support
	glibc2. glibc2 considers resolv.h non ANSI so that using the -ansi
	swithc results in unresolved tokens in system #include files.

Tue Dec  2 21:35:19 1997  Charlie Zender  <zender@odin.cgd.ucar.edu>

	* Added fl_nm_nbr_max and fl_nm_nbr_min as optional arguments 4
	and 5, respectively, to the -n switch on the multi-file
	operators. This allows the NINTAP automatic filename generation
	feature to handle input sets of cyclic filenames whose suffixes
	grow to fl_nm_nbr_max and then wrap back to fl_nm_nbr_min.
	Now, e.g., DJF files may be specified with -n 3,2,1,12,1.

Fri Nov 14 14:20:23 1997  Charlie Zender  <zender@odin.cgd.ucar.edu>

	* Added additional diagnostics concerning record dimensions to
	ncra and ncrcat. ncra and ncrcat now exit when called to operate
	on files without record dimensions.

	* Made ncar_csm_date() more fault tolerant for files which do not
	adhere to de facto atmospheric model time conventions involving
	date, time, nbdate.

1997-11-04  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Added error diagnostics for large malloc()'s in ncwa and var_dup
	in nc_utl.c. These should aid in identifying causes for core dumps
	when running with extremely large files or insufficient memory.

Fri Oct 17 12:53:54 1997  Charlie Zender  <zender@odin.cgd.ucar.edu>

	* Deprecated checking for "gw" for NCAR CSM conformance and
	replaced it with comparing global attribute "convention"'s value
	to "NCAR-CSM". Fixed up ncar_csm_date accordingly and rewrote
	warning messages.

	* Improved usg_prn for ncatted.

1997-10-12  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Fixed fl_out_open() to abort after receiving more than 10
	incorrect user responses. This fixes a bug where NCO would
	crash in non-interactive shells when the -O or -A options were
	omitted.

1997-10-07  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Finished ncatted documentation. Cleaned up code to avoid
	compilation errors with SGI on memcpy(). Touched up manual.
	Releasing this as NCO Version 1.1.

Sun Sep 21 15:08:49 1997  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Merged WIN32 modifications into distribution. Added WIN32 and
	C_ONLY 	tokens to code. Relinked with netCDF 3.3.1, had no
	problems.

Tue Sep 16 23:53:44 1997  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Wrote ncatted.

	* Fixed ncks to omit trailing commas after printing scalar
	attribute values.

Thu Aug 28 17:07:50 1997  Charlie Zender  <zender@heinlein.cgd.ucar.edu>

	* Rewrote ncdiff documention, which had many errors and
	omissions.

Sat Jun 28 23:26:40 1997  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Fixed bug in cpy_var_val_lim() in ncks.c which caused core dumps
	when hyperslabbing on multiple coordinates where at least one of
	the coordinates was wrapped.

Tue Jun 17 14:15:53 1997  Charlie Zender  <zender@heinlein.cgd.ucar.edu>

	* Changed Makefile compile rules for f90 on CRAY to explicitly
 	preprocess *.F files. This had stopped working, perhaps when I
	switched CRAY default from f77 to f90.

Fri Jun  6 17:11:29 1997  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Announce nco-1.0 release on netCDF Group E-mail list:
	https://www.unidata.ucar.edu/mailing_lists/archives/netcdfgroup/1997/msg00052.html

Fri May 30 13:12:25 1997  Charlie Zender  <zender@heinlein.cgd.ucar.edu>

	* Improved mss_val_get to allow any NC_TYPE for missing_value
	attribute. This was needed for ARM files which store missing_value
	as an NCCHAR. Converting NCCHAR to short, long, float, or double
	now uses strdod() instead of implicit type conversion.

	* Added routines to process time variables in ARM files.

	* Added hyam,hybm,hyai,hybi to list of variables which will not
	be differenced by ncdiff.

	* ncdiff now chooses mss_val from either file where it's valid,
	and from fl_1 when it's valid in both. This fixed the last known
	bug in NCO.

Tue May 27 00:08:23 1997  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Moved var_refresh() out of inner loop to file loop level in
	ncra.c. This should speed things up a little because var_refresh()
	can be an expensive call since it calls mss_val_get().

	* Altered mss_val_get to accomodate missing_value attributes whose
	type did not match their variable's type. Also made allowance for
	missing_value's of type NC_CHAR, as in ARM data files. Added three
	routines, arm_inq(), arm_time_mk(), and arm_time_install(), which
	implemente the ARM convention time=base_time+time_offset
	convention in ncrcat.

Fri May 16 16:28:02 1997  Charlie Zender  <zender@heinlein.cgd.ucar.edu>

	* Fixed bug in srt vector in ncdiff. Now ncdiff should be working
	with hyperslabs.

Mon May  5 17:55:00 1997  Charlie Zender  <zender@heinlein.cgd.ucar.edu>

	* Implemented nclong fix for SGI64. This involved very slight
	changes: made defs.h:ptr_unn->lp point to nclong rather than long
	cast_void_nctype():ptr->lp evaluates to (nclong *).

Sun Mar 30 15:26:10 1997  Charlie Zender  <zender@z.ppp.ucar.edu>

	* added and removed some return() statements to nc_utl.c to stop
	compiler warnings from SGI cc.

	* fixed small memory leak and bug in var_srt_zero() where var->srt
	was being allocated twice, and the xrf sct was pointing to the
	copy that had not been zeroed.

Thu Mar 27 15:13:18 1997  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Removed ncap from target all in Makefile

	* Added section describing differences between ncra, ncea, ncrcat,
	and ncecat to nco.texi.

	* Fixed memory leak in ncecat in which memory never seemed
	to be deallocated until the end of the file loop.

Wed Mar 26 21:13:09 1997  Charlie Zender  <zender@z.ppp.ucar.edu>

	* Added nco.ps, nco.dvi, nco.html, texi2html, texi2dvi to
	distribution

	* Changed ncks -s option to accept full printf() style format
	strings

	* Fixed memory leak in var_get() in nc_utl.c which caused memory
	to be allocated twice. This also fixed longstanding performance
	problem where ncrcat() allocated memory for entire array not just
	current record. Thanks to jps@GFDL.GOV (John Sheldon) for
	discovering this bug.

	* General release of nco-0.9 on netCDF and CCM mailing lists

Thu Feb  8 23:01:04 MST 1996  Charlie Zender  <zender@ncar.ucar.edu>

	* First internal CGD release of entire operator set then known as ncz-0.9

Tue Jun 14 16:17:46 MDT 1995  Charlie Zender  <zender@ncar.ucar.edu>

	* First public release of ncrename announced on netCDF Group E-mail list:
	https://www.unidata.ucar.edu/mailing_lists/archives/netcdfgroup/1995/msg00076.html

Tue May  2 23:12:48 MDT 1995  Charlie Zender  <zender@ncar.ucar.edu>

	* First public release of ncks announced on netCDF Group E-mail list:
	https://www.unidata.ucar.edu/mailing_lists/archives/netcdfgroup/1995/msg00069.html

Sat May 15 23:01:04 MST 1993  Charlie Zender  <zender@ncar.ucar.edu>

	* First RCS snapshot of ncks.c in directory nc.
	ncks.c began life as c_template.c
